--
-- PostgreSQL database dump
--

-- Dumped from database version 16.1 (Debian 16.1-1.pgdg120+1)
-- Dumped by pg_dump version 16.1 (Debian 16.1-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: citext; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA public;


--
-- Name: EXTENSION citext; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION citext IS 'data type for case-insensitive character strings';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: action; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.action (
    id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    type text NOT NULL,
    model_id integer NOT NULL,
    name character varying(254) NOT NULL,
    description text,
    parameters text,
    parameter_mappings text,
    visualization_settings text,
    public_uuid character(36),
    made_public_by_id integer,
    creator_id integer,
    archived boolean DEFAULT false NOT NULL,
    entity_id character(21)
);


ALTER TABLE public.action OWNER TO postgres;

--
-- Name: TABLE action; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.action IS 'An action is something you can do, such as run a readwrite query';


--
-- Name: COLUMN action.created_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.created_at IS 'The timestamp of when the action was created';


--
-- Name: COLUMN action.updated_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.updated_at IS 'The timestamp of when the action was updated';


--
-- Name: COLUMN action.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.type IS 'Type of action';


--
-- Name: COLUMN action.model_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.model_id IS 'The associated model';


--
-- Name: COLUMN action.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.name IS 'The name of the action';


--
-- Name: COLUMN action.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.description IS 'The description of the action';


--
-- Name: COLUMN action.parameters; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.parameters IS 'The saved parameters for this action';


--
-- Name: COLUMN action.parameter_mappings; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.parameter_mappings IS 'The saved parameter mappings for this action';


--
-- Name: COLUMN action.visualization_settings; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.visualization_settings IS 'The UI visualization_settings for this action';


--
-- Name: COLUMN action.public_uuid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.public_uuid IS 'Unique UUID used to in publically-accessible links to this Action.';


--
-- Name: COLUMN action.made_public_by_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.made_public_by_id IS 'The ID of the User who first publically shared this Action.';


--
-- Name: COLUMN action.creator_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.creator_id IS 'The user who created the action';


--
-- Name: COLUMN action.archived; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.archived IS 'Whether or not the action has been archived';


--
-- Name: COLUMN action.entity_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.action.entity_id IS 'Random NanoID tag for unique identity.';


--
-- Name: action_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.action ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.action_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: activity; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.activity (
    id integer NOT NULL,
    topic character varying(32) NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    user_id integer,
    model character varying(32),
    model_id integer,
    database_id integer,
    table_id integer,
    custom_id character varying(48),
    details text NOT NULL
);


ALTER TABLE public.activity OWNER TO postgres;

--
-- Name: activity_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.activity ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.activity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: application_permissions_revision; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.application_permissions_revision (
    id integer NOT NULL,
    before text NOT NULL,
    after text NOT NULL,
    user_id integer NOT NULL,
    created_at timestamp without time zone NOT NULL,
    remark text
);


ALTER TABLE public.application_permissions_revision OWNER TO postgres;

--
-- Name: application_permissions_revision_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.application_permissions_revision ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.application_permissions_revision_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: audit_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.audit_log (
    id integer NOT NULL,
    topic character varying(32) NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    end_timestamp timestamp with time zone,
    user_id integer,
    model character varying(32),
    model_id integer,
    details text NOT NULL
);


ALTER TABLE public.audit_log OWNER TO postgres;

--
-- Name: TABLE audit_log; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.audit_log IS 'Used to store application events for auditing use cases';


--
-- Name: COLUMN audit_log.topic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.audit_log.topic IS 'The topic of a given audit event';


--
-- Name: COLUMN audit_log."timestamp"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.audit_log."timestamp" IS 'The time an event was recorded';


--
-- Name: COLUMN audit_log.end_timestamp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.audit_log.end_timestamp IS 'The time an event ended, if applicable';


--
-- Name: COLUMN audit_log.user_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.audit_log.user_id IS 'The user who performed an action or triggered an event';


--
-- Name: COLUMN audit_log.model; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.audit_log.model IS 'The name of the model this event applies to (e.g. Card, Dashboard), if applicable';


--
-- Name: COLUMN audit_log.model_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.audit_log.model_id IS 'The ID of the model this event applies to, if applicable';


--
-- Name: COLUMN audit_log.details; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.audit_log.details IS 'A JSON map with metadata about the event';


--
-- Name: audit_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.audit_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.audit_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: bookmark_ordering; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bookmark_ordering (
    id integer NOT NULL,
    user_id integer NOT NULL,
    type character varying(255) NOT NULL,
    item_id integer NOT NULL,
    ordering integer NOT NULL
);


ALTER TABLE public.bookmark_ordering OWNER TO postgres;

--
-- Name: bookmark_ordering_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.bookmark_ordering ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.bookmark_ordering_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: card_bookmark; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.card_bookmark (
    id integer NOT NULL,
    user_id integer NOT NULL,
    card_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.card_bookmark OWNER TO postgres;

--
-- Name: card_bookmark_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.card_bookmark ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.card_bookmark_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: card_label; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.card_label (
    id integer NOT NULL,
    card_id integer NOT NULL,
    label_id integer NOT NULL
);


ALTER TABLE public.card_label OWNER TO postgres;

--
-- Name: card_label_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.card_label ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.card_label_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collection; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collection (
    id integer NOT NULL,
    name text NOT NULL,
    description text,
    archived boolean DEFAULT false NOT NULL,
    location character varying(254) DEFAULT '/'::character varying NOT NULL,
    personal_owner_id integer,
    slug character varying(510) NOT NULL,
    namespace character varying(254),
    authority_level character varying(255),
    entity_id character(21),
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    type character varying(256)
);


ALTER TABLE public.collection OWNER TO postgres;

--
-- Name: COLUMN collection.created_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.collection.created_at IS 'Timestamp of when this Collection was created.';


--
-- Name: COLUMN collection.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.collection.type IS 'This is used to differentiate instance-analytics collections from all other collections.';


--
-- Name: collection_bookmark; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collection_bookmark (
    id integer NOT NULL,
    user_id integer NOT NULL,
    collection_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.collection_bookmark OWNER TO postgres;

--
-- Name: collection_bookmark_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collection_bookmark ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collection_bookmark_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collection_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collection ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collection_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collection_permission_graph_revision; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collection_permission_graph_revision (
    id integer NOT NULL,
    before text NOT NULL,
    after text NOT NULL,
    user_id integer NOT NULL,
    created_at timestamp without time zone NOT NULL,
    remark text
);


ALTER TABLE public.collection_permission_graph_revision OWNER TO postgres;

--
-- Name: collection_permission_graph_revision_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collection_permission_graph_revision ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collection_permission_graph_revision_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: connection_impersonations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.connection_impersonations (
    id integer NOT NULL,
    db_id integer NOT NULL,
    group_id integer NOT NULL,
    attribute text
);


ALTER TABLE public.connection_impersonations OWNER TO postgres;

--
-- Name: TABLE connection_impersonations; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.connection_impersonations IS 'Table for holding connection impersonation policies';


--
-- Name: COLUMN connection_impersonations.db_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.connection_impersonations.db_id IS 'ID of the database this connection impersonation policy affects';


--
-- Name: COLUMN connection_impersonations.group_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.connection_impersonations.group_id IS 'ID of the permissions group this connection impersonation policy affects';


--
-- Name: COLUMN connection_impersonations.attribute; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.connection_impersonations.attribute IS 'User attribute associated with the database role to use for this connection impersonation policy';


--
-- Name: connection_impersonations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.connection_impersonations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.connection_impersonations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_session (
    id character varying(254) NOT NULL,
    user_id integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    anti_csrf_token text
);


ALTER TABLE public.core_session OWNER TO postgres;

--
-- Name: core_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.core_user (
    id integer NOT NULL,
    email public.citext NOT NULL,
    first_name character varying(254),
    last_name character varying(254),
    password character varying(254),
    password_salt character varying(254) DEFAULT 'default'::character varying,
    date_joined timestamp with time zone NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean DEFAULT false NOT NULL,
    is_active boolean DEFAULT true NOT NULL,
    reset_token character varying(254),
    reset_triggered bigint,
    is_qbnewb boolean DEFAULT true NOT NULL,
    login_attributes text,
    updated_at timestamp without time zone,
    sso_source character varying(254),
    locale character varying(5),
    is_datasetnewb boolean DEFAULT true NOT NULL,
    settings text
);


ALTER TABLE public.core_user OWNER TO postgres;

--
-- Name: core_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.core_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: dashboard_bookmark; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dashboard_bookmark (
    id integer NOT NULL,
    user_id integer NOT NULL,
    dashboard_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.dashboard_bookmark OWNER TO postgres;

--
-- Name: dashboard_bookmark_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.dashboard_bookmark ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.dashboard_bookmark_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: dashboard_favorite; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dashboard_favorite (
    id integer NOT NULL,
    user_id integer NOT NULL,
    dashboard_id integer NOT NULL
);


ALTER TABLE public.dashboard_favorite OWNER TO postgres;

--
-- Name: dashboard_favorite_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.dashboard_favorite ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.dashboard_favorite_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: dashboard_tab; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dashboard_tab (
    id integer NOT NULL,
    dashboard_id integer NOT NULL,
    name text NOT NULL,
    "position" integer NOT NULL,
    entity_id character(21),
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.dashboard_tab OWNER TO postgres;

--
-- Name: TABLE dashboard_tab; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.dashboard_tab IS 'Join table connecting dashboard to dashboardcards';


--
-- Name: COLUMN dashboard_tab.dashboard_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.dashboard_tab.dashboard_id IS 'The dashboard that a tab is on';


--
-- Name: COLUMN dashboard_tab.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.dashboard_tab.name IS 'Displayed name of the tab';


--
-- Name: COLUMN dashboard_tab."position"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.dashboard_tab."position" IS 'Position of the tab with respect to others tabs in dashboard';


--
-- Name: COLUMN dashboard_tab.entity_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.dashboard_tab.entity_id IS 'Random NanoID tag for unique identity.';


--
-- Name: COLUMN dashboard_tab.created_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.dashboard_tab.created_at IS 'The timestamp at which the tab was created';


--
-- Name: COLUMN dashboard_tab.updated_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.dashboard_tab.updated_at IS 'The timestamp at which the tab was last updated';


--
-- Name: dashboard_tab_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.dashboard_tab ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.dashboard_tab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: dashboardcard_series; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dashboardcard_series (
    id integer NOT NULL,
    dashboardcard_id integer NOT NULL,
    card_id integer NOT NULL,
    "position" integer NOT NULL
);


ALTER TABLE public.dashboardcard_series OWNER TO postgres;

--
-- Name: dashboardcard_series_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.dashboardcard_series ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.dashboardcard_series_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: databasechangelog; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.databasechangelog (
    id character varying(255) NOT NULL,
    author character varying(255) NOT NULL,
    filename character varying(255) NOT NULL,
    dateexecuted timestamp without time zone NOT NULL,
    orderexecuted integer NOT NULL,
    exectype character varying(10) NOT NULL,
    md5sum character varying(35),
    description character varying(255),
    comments character varying(255),
    tag character varying(255),
    liquibase character varying(20),
    contexts character varying(255),
    labels character varying(255),
    deployment_id character varying(10)
);


ALTER TABLE public.databasechangelog OWNER TO postgres;

--
-- Name: databasechangeloglock; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.databasechangeloglock (
    id integer NOT NULL,
    locked boolean NOT NULL,
    lockgranted timestamp without time zone,
    lockedby character varying(255)
);


ALTER TABLE public.databasechangeloglock OWNER TO postgres;

--
-- Name: dependency; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dependency (
    id integer NOT NULL,
    model character varying(32) NOT NULL,
    model_id integer NOT NULL,
    dependent_on_model character varying(32) NOT NULL,
    dependent_on_id integer NOT NULL,
    created_at timestamp with time zone NOT NULL
);


ALTER TABLE public.dependency OWNER TO postgres;

--
-- Name: dependency_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.dependency ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.dependency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: dimension; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dimension (
    id integer NOT NULL,
    field_id integer NOT NULL,
    name character varying(254) NOT NULL,
    type character varying(254) NOT NULL,
    human_readable_field_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    entity_id character(21)
);


ALTER TABLE public.dimension OWNER TO postgres;

--
-- Name: dimension_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.dimension ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.dimension_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: sandboxes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sandboxes (
    id integer NOT NULL,
    group_id integer NOT NULL,
    table_id integer NOT NULL,
    card_id integer,
    attribute_remappings text,
    permission_id integer
);


ALTER TABLE public.sandboxes OWNER TO postgres;

--
-- Name: COLUMN sandboxes.permission_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.sandboxes.permission_id IS 'The ID of the corresponding permissions path for this sandbox';


--
-- Name: group_table_access_policy_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.sandboxes ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.group_table_access_policy_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: http_action; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.http_action (
    action_id integer NOT NULL,
    template text NOT NULL,
    response_handle text,
    error_handle text
);


ALTER TABLE public.http_action OWNER TO postgres;

--
-- Name: TABLE http_action; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.http_action IS 'An http api call type of action';


--
-- Name: COLUMN http_action.action_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.http_action.action_id IS 'The related action';


--
-- Name: COLUMN http_action.template; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.http_action.template IS 'A template that defines method,url,body,headers required to make an api call';


--
-- Name: COLUMN http_action.response_handle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.http_action.response_handle IS 'A program to take an api response and transform to an appropriate response for emitters';


--
-- Name: COLUMN http_action.error_handle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.http_action.error_handle IS 'A program to take an api response to determine if an error occurred';


--
-- Name: implicit_action; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.implicit_action (
    action_id integer NOT NULL,
    kind text NOT NULL
);


ALTER TABLE public.implicit_action OWNER TO postgres;

--
-- Name: TABLE implicit_action; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.implicit_action IS 'An action with dynamic parameters based on the underlying model';


--
-- Name: COLUMN implicit_action.action_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.implicit_action.action_id IS 'The associated action';


--
-- Name: COLUMN implicit_action.kind; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.implicit_action.kind IS 'The kind of implicit action create/update/delete';


--
-- Name: label; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.label (
    id integer NOT NULL,
    name character varying(254) NOT NULL,
    slug character varying(254) NOT NULL,
    icon character varying(128)
);


ALTER TABLE public.label OWNER TO postgres;

--
-- Name: label_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.label ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.label_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: login_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.login_history (
    id integer NOT NULL,
    "timestamp" timestamp with time zone DEFAULT now() NOT NULL,
    user_id integer NOT NULL,
    session_id character varying(254),
    device_id character(36) NOT NULL,
    device_description text NOT NULL,
    ip_address text NOT NULL
);


ALTER TABLE public.login_history OWNER TO postgres;

--
-- Name: login_history_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.login_history ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.login_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: metabase_database; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.metabase_database (
    id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    name character varying(254) NOT NULL,
    description text,
    details text NOT NULL,
    engine character varying(254) NOT NULL,
    is_sample boolean DEFAULT false NOT NULL,
    is_full_sync boolean DEFAULT true NOT NULL,
    points_of_interest text,
    caveats text,
    metadata_sync_schedule character varying(254) DEFAULT '0 50 * * * ? *'::character varying NOT NULL,
    cache_field_values_schedule character varying(254) DEFAULT '0 50 0 * * ? *'::character varying NOT NULL,
    timezone character varying(254),
    is_on_demand boolean DEFAULT false NOT NULL,
    auto_run_queries boolean DEFAULT true NOT NULL,
    refingerprint boolean,
    cache_ttl integer,
    initial_sync_status character varying(32) DEFAULT 'complete'::character varying NOT NULL,
    creator_id integer,
    settings text,
    dbms_version text,
    is_audit boolean DEFAULT false NOT NULL
);


ALTER TABLE public.metabase_database OWNER TO postgres;

--
-- Name: COLUMN metabase_database.dbms_version; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.metabase_database.dbms_version IS 'A JSON object describing the flavor and version of the DBMS.';


--
-- Name: COLUMN metabase_database.is_audit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.metabase_database.is_audit IS 'Only the app db, visible to admins via auditing should have this set true.';


--
-- Name: metabase_database_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.metabase_database ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.metabase_database_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: metabase_field; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.metabase_field (
    id integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    name character varying(254) NOT NULL,
    base_type character varying(255) NOT NULL,
    semantic_type character varying(255),
    active boolean DEFAULT true NOT NULL,
    description text,
    preview_display boolean DEFAULT true NOT NULL,
    "position" integer DEFAULT 0 NOT NULL,
    table_id integer NOT NULL,
    parent_id integer,
    display_name character varying(254),
    visibility_type character varying(32) DEFAULT 'normal'::character varying NOT NULL,
    fk_target_field_id integer,
    last_analyzed timestamp with time zone,
    points_of_interest text,
    caveats text,
    fingerprint text,
    fingerprint_version integer DEFAULT 0 NOT NULL,
    database_type text NOT NULL,
    has_field_values text,
    settings text,
    database_position integer DEFAULT 0 NOT NULL,
    custom_position integer DEFAULT 0 NOT NULL,
    effective_type character varying(255),
    coercion_strategy character varying(255),
    nfc_path character varying(254),
    database_required boolean DEFAULT false NOT NULL,
    json_unfolding boolean DEFAULT false NOT NULL,
    database_is_auto_increment boolean DEFAULT false NOT NULL
);


ALTER TABLE public.metabase_field OWNER TO postgres;

--
-- Name: COLUMN metabase_field.json_unfolding; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.metabase_field.json_unfolding IS 'Enable/disable JSON unfolding for a field';


--
-- Name: COLUMN metabase_field.database_is_auto_increment; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.metabase_field.database_is_auto_increment IS 'Indicates this field is auto incremented';


--
-- Name: metabase_field_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.metabase_field ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.metabase_field_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: metabase_fieldvalues; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.metabase_fieldvalues (
    id integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    "values" text,
    human_readable_values text,
    field_id integer NOT NULL,
    has_more_values boolean DEFAULT false,
    type character varying(32) DEFAULT 'full'::character varying NOT NULL,
    hash_key text,
    last_used_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.metabase_fieldvalues OWNER TO postgres;

--
-- Name: COLUMN metabase_fieldvalues.last_used_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.metabase_fieldvalues.last_used_at IS 'Timestamp of when these FieldValues were last used.';


--
-- Name: metabase_fieldvalues_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.metabase_fieldvalues ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.metabase_fieldvalues_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: metabase_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.metabase_table (
    id integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    name character varying(256) NOT NULL,
    description text,
    entity_type character varying(254),
    active boolean NOT NULL,
    db_id integer NOT NULL,
    display_name character varying(256),
    visibility_type character varying(254),
    schema character varying(254),
    points_of_interest text,
    caveats text,
    show_in_getting_started boolean DEFAULT false NOT NULL,
    field_order character varying(254) DEFAULT 'database'::character varying NOT NULL,
    initial_sync_status character varying(32) DEFAULT 'complete'::character varying NOT NULL,
    is_upload boolean DEFAULT false NOT NULL
);


ALTER TABLE public.metabase_table OWNER TO postgres;

--
-- Name: COLUMN metabase_table.is_upload; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.metabase_table.is_upload IS 'Was the table created from user-uploaded (i.e., from a CSV) data?';


--
-- Name: metabase_table_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.metabase_table ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.metabase_table_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: metric; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.metric (
    id integer NOT NULL,
    table_id integer NOT NULL,
    creator_id integer NOT NULL,
    name character varying(254) NOT NULL,
    description text,
    archived boolean DEFAULT false NOT NULL,
    definition text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    points_of_interest text,
    caveats text,
    how_is_this_calculated text,
    show_in_getting_started boolean DEFAULT false NOT NULL,
    entity_id character(21)
);


ALTER TABLE public.metric OWNER TO postgres;

--
-- Name: metric_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.metric ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.metric_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: metric_important_field; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.metric_important_field (
    id integer NOT NULL,
    metric_id integer NOT NULL,
    field_id integer NOT NULL
);


ALTER TABLE public.metric_important_field OWNER TO postgres;

--
-- Name: metric_important_field_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.metric_important_field ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.metric_important_field_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: model_index; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.model_index (
    id integer NOT NULL,
    model_id integer,
    pk_ref text NOT NULL,
    value_ref text NOT NULL,
    schedule text NOT NULL,
    state text NOT NULL,
    indexed_at timestamp with time zone,
    error text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    creator_id integer NOT NULL
);


ALTER TABLE public.model_index OWNER TO postgres;

--
-- Name: TABLE model_index; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.model_index IS 'Used to keep track of which models have indexed columns.';


--
-- Name: COLUMN model_index.model_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index.model_id IS 'The ID of the indexed model.';


--
-- Name: COLUMN model_index.pk_ref; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index.pk_ref IS 'Serialized JSON of the primary key field ref.';


--
-- Name: COLUMN model_index.value_ref; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index.value_ref IS 'Serialized JSON of the label field ref.';


--
-- Name: COLUMN model_index.schedule; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index.schedule IS 'The cron schedule for when value syncing should happen.';


--
-- Name: COLUMN model_index.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index.state IS 'The status of the index: initializing, indexed, error, overflow.';


--
-- Name: COLUMN model_index.indexed_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index.indexed_at IS 'When the status changed';


--
-- Name: COLUMN model_index.error; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index.error IS 'The error message if the status is error.';


--
-- Name: COLUMN model_index.created_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index.created_at IS 'The timestamp of when these changes were made.';


--
-- Name: COLUMN model_index.creator_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index.creator_id IS 'ID of the user who created the event';


--
-- Name: model_index_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.model_index ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.model_index_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: model_index_value; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.model_index_value (
    model_index_id integer,
    model_pk integer NOT NULL,
    name text NOT NULL
);


ALTER TABLE public.model_index_value OWNER TO postgres;

--
-- Name: TABLE model_index_value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.model_index_value IS 'Used to keep track of the values indexed in a model';


--
-- Name: COLUMN model_index_value.model_index_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index_value.model_index_id IS 'The ID of the indexed model.';


--
-- Name: COLUMN model_index_value.model_pk; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index_value.model_pk IS 'The primary key of the indexed value';


--
-- Name: COLUMN model_index_value.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.model_index_value.name IS 'The label to display identifying the indexed value.';


--
-- Name: moderation_review; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.moderation_review (
    id integer NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    status character varying(255),
    text text,
    moderated_item_id integer NOT NULL,
    moderated_item_type character varying(255) NOT NULL,
    moderator_id integer NOT NULL,
    most_recent boolean NOT NULL
);


ALTER TABLE public.moderation_review OWNER TO postgres;

--
-- Name: moderation_review_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.moderation_review ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.moderation_review_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: native_query_snippet; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.native_query_snippet (
    id integer NOT NULL,
    name character varying(254) NOT NULL,
    description text,
    content text NOT NULL,
    creator_id integer NOT NULL,
    archived boolean DEFAULT false NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    collection_id integer,
    entity_id character(21)
);


ALTER TABLE public.native_query_snippet OWNER TO postgres;

--
-- Name: native_query_snippet_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.native_query_snippet ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.native_query_snippet_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: parameter_card; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.parameter_card (
    id integer NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    card_id integer NOT NULL,
    parameterized_object_type character varying(32) NOT NULL,
    parameterized_object_id integer NOT NULL,
    parameter_id character varying(36) NOT NULL
);


ALTER TABLE public.parameter_card OWNER TO postgres;

--
-- Name: TABLE parameter_card; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.parameter_card IS 'Join table connecting cards to entities (dashboards, other cards, etc.) that use the values generated by the card for filter values';


--
-- Name: COLUMN parameter_card.updated_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.parameter_card.updated_at IS 'most recent modification time';


--
-- Name: COLUMN parameter_card.created_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.parameter_card.created_at IS 'creation time';


--
-- Name: COLUMN parameter_card.card_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.parameter_card.card_id IS 'ID of the card generating the values';


--
-- Name: COLUMN parameter_card.parameterized_object_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.parameter_card.parameterized_object_type IS 'Type of the entity consuming the values (dashboard, card, etc.)';


--
-- Name: COLUMN parameter_card.parameterized_object_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.parameter_card.parameterized_object_id IS 'ID of the entity consuming the values';


--
-- Name: COLUMN parameter_card.parameter_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.parameter_card.parameter_id IS 'The parameter ID';


--
-- Name: parameter_card_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.parameter_card ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.parameter_card_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.permissions (
    id integer NOT NULL,
    object character varying(254) NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.permissions OWNER TO postgres;

--
-- Name: permissions_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.permissions_group (
    id integer NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE public.permissions_group OWNER TO postgres;

--
-- Name: permissions_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.permissions_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.permissions_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: permissions_group_membership; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.permissions_group_membership (
    id integer NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL,
    is_group_manager boolean DEFAULT false NOT NULL
);


ALTER TABLE public.permissions_group_membership OWNER TO postgres;

--
-- Name: permissions_group_membership_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.permissions_group_membership ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.permissions_group_membership_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: permissions_revision; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.permissions_revision (
    id integer NOT NULL,
    before text NOT NULL,
    after text NOT NULL,
    user_id integer NOT NULL,
    created_at timestamp without time zone NOT NULL,
    remark text
);


ALTER TABLE public.permissions_revision OWNER TO postgres;

--
-- Name: permissions_revision_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.permissions_revision ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.permissions_revision_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: persisted_info; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persisted_info (
    id integer NOT NULL,
    database_id integer NOT NULL,
    card_id integer NOT NULL,
    question_slug text NOT NULL,
    table_name text NOT NULL,
    definition text,
    query_hash text,
    active boolean DEFAULT false NOT NULL,
    state text NOT NULL,
    refresh_begin timestamp with time zone NOT NULL,
    refresh_end timestamp with time zone,
    state_change_at timestamp with time zone,
    error text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    creator_id integer
);


ALTER TABLE public.persisted_info OWNER TO postgres;

--
-- Name: persisted_info_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.persisted_info ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.persisted_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: pulse; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pulse (
    id integer NOT NULL,
    creator_id integer NOT NULL,
    name character varying(254),
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    skip_if_empty boolean DEFAULT false NOT NULL,
    alert_condition character varying(254),
    alert_first_only boolean,
    alert_above_goal boolean,
    collection_id integer,
    collection_position smallint,
    archived boolean DEFAULT false,
    dashboard_id integer,
    parameters text NOT NULL,
    entity_id character(21)
);


ALTER TABLE public.pulse OWNER TO postgres;

--
-- Name: pulse_card; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pulse_card (
    id integer NOT NULL,
    pulse_id integer NOT NULL,
    card_id integer NOT NULL,
    "position" integer NOT NULL,
    include_csv boolean DEFAULT false NOT NULL,
    include_xls boolean DEFAULT false NOT NULL,
    dashboard_card_id integer,
    entity_id character(21)
);


ALTER TABLE public.pulse_card OWNER TO postgres;

--
-- Name: pulse_card_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.pulse_card ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.pulse_card_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: pulse_channel; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pulse_channel (
    id integer NOT NULL,
    pulse_id integer NOT NULL,
    channel_type character varying(32) NOT NULL,
    details text NOT NULL,
    schedule_type character varying(32) NOT NULL,
    schedule_hour integer,
    schedule_day character varying(64),
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    schedule_frame character varying(32),
    enabled boolean DEFAULT true NOT NULL,
    entity_id character(21)
);


ALTER TABLE public.pulse_channel OWNER TO postgres;

--
-- Name: pulse_channel_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.pulse_channel ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.pulse_channel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: pulse_channel_recipient; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pulse_channel_recipient (
    id integer NOT NULL,
    pulse_channel_id integer NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.pulse_channel_recipient OWNER TO postgres;

--
-- Name: pulse_channel_recipient_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.pulse_channel_recipient ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.pulse_channel_recipient_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: pulse_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.pulse ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.pulse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: qrtz_blob_triggers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_blob_triggers (
    sched_name character varying(120) NOT NULL,
    trigger_name character varying(200) NOT NULL,
    trigger_group character varying(200) NOT NULL,
    blob_data bytea
);


ALTER TABLE public.qrtz_blob_triggers OWNER TO postgres;

--
-- Name: qrtz_calendars; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_calendars (
    sched_name character varying(120) NOT NULL,
    calendar_name character varying(200) NOT NULL,
    calendar bytea NOT NULL
);


ALTER TABLE public.qrtz_calendars OWNER TO postgres;

--
-- Name: qrtz_cron_triggers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_cron_triggers (
    sched_name character varying(120) NOT NULL,
    trigger_name character varying(200) NOT NULL,
    trigger_group character varying(200) NOT NULL,
    cron_expression character varying(120) NOT NULL,
    time_zone_id character varying(80)
);


ALTER TABLE public.qrtz_cron_triggers OWNER TO postgres;

--
-- Name: qrtz_fired_triggers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_fired_triggers (
    sched_name character varying(120) NOT NULL,
    entry_id character varying(95) NOT NULL,
    trigger_name character varying(200) NOT NULL,
    trigger_group character varying(200) NOT NULL,
    instance_name character varying(200) NOT NULL,
    fired_time bigint NOT NULL,
    sched_time bigint,
    priority integer NOT NULL,
    state character varying(16) NOT NULL,
    job_name character varying(200),
    job_group character varying(200),
    is_nonconcurrent boolean,
    requests_recovery boolean
);


ALTER TABLE public.qrtz_fired_triggers OWNER TO postgres;

--
-- Name: qrtz_job_details; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_job_details (
    sched_name character varying(120) NOT NULL,
    job_name character varying(200) NOT NULL,
    job_group character varying(200) NOT NULL,
    description character varying(250),
    job_class_name character varying(250) NOT NULL,
    is_durable boolean NOT NULL,
    is_nonconcurrent boolean NOT NULL,
    is_update_data boolean NOT NULL,
    requests_recovery boolean NOT NULL,
    job_data bytea
);


ALTER TABLE public.qrtz_job_details OWNER TO postgres;

--
-- Name: qrtz_locks; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_locks (
    sched_name character varying(120) NOT NULL,
    lock_name character varying(40) NOT NULL
);


ALTER TABLE public.qrtz_locks OWNER TO postgres;

--
-- Name: qrtz_paused_trigger_grps; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_paused_trigger_grps (
    sched_name character varying(120) NOT NULL,
    trigger_group character varying(200) NOT NULL
);


ALTER TABLE public.qrtz_paused_trigger_grps OWNER TO postgres;

--
-- Name: qrtz_scheduler_state; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_scheduler_state (
    sched_name character varying(120) NOT NULL,
    instance_name character varying(200) NOT NULL,
    last_checkin_time bigint NOT NULL,
    checkin_interval bigint NOT NULL
);


ALTER TABLE public.qrtz_scheduler_state OWNER TO postgres;

--
-- Name: qrtz_simple_triggers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_simple_triggers (
    sched_name character varying(120) NOT NULL,
    trigger_name character varying(200) NOT NULL,
    trigger_group character varying(200) NOT NULL,
    repeat_count bigint NOT NULL,
    repeat_interval bigint NOT NULL,
    times_triggered bigint NOT NULL
);


ALTER TABLE public.qrtz_simple_triggers OWNER TO postgres;

--
-- Name: qrtz_simprop_triggers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_simprop_triggers (
    sched_name character varying(120) NOT NULL,
    trigger_name character varying(200) NOT NULL,
    trigger_group character varying(200) NOT NULL,
    str_prop_1 character varying(512),
    str_prop_2 character varying(512),
    str_prop_3 character varying(512),
    int_prop_1 integer,
    int_prop_2 integer,
    long_prop_1 bigint,
    long_prop_2 bigint,
    dec_prop_1 numeric(13,4),
    dec_prop_2 numeric(13,4),
    bool_prop_1 boolean,
    bool_prop_2 boolean
);


ALTER TABLE public.qrtz_simprop_triggers OWNER TO postgres;

--
-- Name: qrtz_triggers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qrtz_triggers (
    sched_name character varying(120) NOT NULL,
    trigger_name character varying(200) NOT NULL,
    trigger_group character varying(200) NOT NULL,
    job_name character varying(200) NOT NULL,
    job_group character varying(200) NOT NULL,
    description character varying(250),
    next_fire_time bigint,
    prev_fire_time bigint,
    priority integer,
    trigger_state character varying(16) NOT NULL,
    trigger_type character varying(8) NOT NULL,
    start_time bigint NOT NULL,
    end_time bigint,
    calendar_name character varying(200),
    misfire_instr smallint,
    job_data bytea
);


ALTER TABLE public.qrtz_triggers OWNER TO postgres;

--
-- Name: query; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.query (
    query_hash bytea NOT NULL,
    average_execution_time integer NOT NULL,
    query text
);


ALTER TABLE public.query OWNER TO postgres;

--
-- Name: query_action; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.query_action (
    action_id integer NOT NULL,
    database_id integer NOT NULL,
    dataset_query text NOT NULL
);


ALTER TABLE public.query_action OWNER TO postgres;

--
-- Name: TABLE query_action; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.query_action IS 'A readwrite query type of action';


--
-- Name: COLUMN query_action.action_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.query_action.action_id IS 'The related action';


--
-- Name: COLUMN query_action.database_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.query_action.database_id IS 'The associated database';


--
-- Name: COLUMN query_action.dataset_query; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.query_action.dataset_query IS 'The MBQL writeback query';


--
-- Name: query_cache; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.query_cache (
    query_hash bytea NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    results bytea NOT NULL
);


ALTER TABLE public.query_cache OWNER TO postgres;

--
-- Name: query_execution; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.query_execution (
    id integer NOT NULL,
    hash bytea NOT NULL,
    started_at timestamp with time zone NOT NULL,
    running_time integer NOT NULL,
    result_rows integer NOT NULL,
    native boolean NOT NULL,
    context character varying(32),
    error text,
    executor_id integer,
    card_id integer,
    dashboard_id integer,
    pulse_id integer,
    database_id integer,
    cache_hit boolean,
    action_id integer,
    is_sandboxed boolean,
    cache_hash bytea
);


ALTER TABLE public.query_execution OWNER TO postgres;

--
-- Name: COLUMN query_execution.action_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.query_execution.action_id IS 'The ID of the action associated with this query execution, if any.';


--
-- Name: COLUMN query_execution.is_sandboxed; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.query_execution.is_sandboxed IS 'Is query from a sandboxed user';


--
-- Name: COLUMN query_execution.cache_hash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.query_execution.cache_hash IS 'Hash of normalized query, calculated in middleware.cache';


--
-- Name: query_execution_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.query_execution ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.query_execution_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: recent_views; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recent_views (
    id integer NOT NULL,
    user_id integer NOT NULL,
    model character varying(16) NOT NULL,
    model_id integer NOT NULL,
    "timestamp" timestamp without time zone NOT NULL
);


ALTER TABLE public.recent_views OWNER TO postgres;

--
-- Name: TABLE recent_views; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.recent_views IS 'Used to store recently viewed objects for each user';


--
-- Name: COLUMN recent_views.user_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.recent_views.user_id IS 'The user associated with this view';


--
-- Name: COLUMN recent_views.model; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.recent_views.model IS 'The name of the model that was viewed';


--
-- Name: COLUMN recent_views.model_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.recent_views.model_id IS 'The ID of the model that was viewed';


--
-- Name: COLUMN recent_views."timestamp"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.recent_views."timestamp" IS 'The time a view was recorded';


--
-- Name: recent_views_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.recent_views ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.recent_views_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: report_card; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.report_card (
    id integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    name character varying(254) NOT NULL,
    description text,
    display character varying(254) NOT NULL,
    dataset_query text NOT NULL,
    visualization_settings text NOT NULL,
    creator_id integer NOT NULL,
    database_id integer NOT NULL,
    table_id integer,
    query_type character varying(16),
    archived boolean DEFAULT false NOT NULL,
    collection_id integer,
    public_uuid character(36),
    made_public_by_id integer,
    enable_embedding boolean DEFAULT false NOT NULL,
    embedding_params text,
    cache_ttl integer,
    result_metadata text,
    collection_position smallint,
    dataset boolean DEFAULT false NOT NULL,
    entity_id character(21),
    parameters text,
    parameter_mappings text,
    collection_preview boolean DEFAULT true NOT NULL,
    metabase_version character varying(100)
);


ALTER TABLE public.report_card OWNER TO postgres;

--
-- Name: COLUMN report_card.metabase_version; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.report_card.metabase_version IS 'Metabase version used to create the card.';


--
-- Name: report_card_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.report_card ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.report_card_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: report_cardfavorite; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.report_cardfavorite (
    id integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    card_id integer NOT NULL,
    owner_id integer NOT NULL
);


ALTER TABLE public.report_cardfavorite OWNER TO postgres;

--
-- Name: report_cardfavorite_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.report_cardfavorite ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.report_cardfavorite_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: report_dashboard; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.report_dashboard (
    id integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    name character varying(254) NOT NULL,
    description text,
    creator_id integer NOT NULL,
    parameters text NOT NULL,
    points_of_interest text,
    caveats text,
    show_in_getting_started boolean DEFAULT false NOT NULL,
    public_uuid character(36),
    made_public_by_id integer,
    enable_embedding boolean DEFAULT false NOT NULL,
    embedding_params text,
    archived boolean DEFAULT false NOT NULL,
    "position" integer,
    collection_id integer,
    collection_position smallint,
    cache_ttl integer,
    entity_id character(21),
    auto_apply_filters boolean DEFAULT true NOT NULL
);


ALTER TABLE public.report_dashboard OWNER TO postgres;

--
-- Name: COLUMN report_dashboard.auto_apply_filters; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.report_dashboard.auto_apply_filters IS 'Whether or not to auto-apply filters on a dashboard';


--
-- Name: report_dashboard_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.report_dashboard ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.report_dashboard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: report_dashboardcard; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.report_dashboardcard (
    id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    size_x integer NOT NULL,
    size_y integer NOT NULL,
    "row" integer NOT NULL,
    col integer NOT NULL,
    card_id integer,
    dashboard_id integer NOT NULL,
    parameter_mappings text NOT NULL,
    visualization_settings text NOT NULL,
    entity_id character(21),
    action_id integer,
    dashboard_tab_id integer
);


ALTER TABLE public.report_dashboardcard OWNER TO postgres;

--
-- Name: COLUMN report_dashboardcard.action_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.report_dashboardcard.action_id IS 'The related action';


--
-- Name: COLUMN report_dashboardcard.dashboard_tab_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.report_dashboardcard.dashboard_tab_id IS 'The referenced tab id that dashcard is on, it''s nullable for dashboard with no tab';


--
-- Name: report_dashboardcard_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.report_dashboardcard ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.report_dashboardcard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: revision; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.revision (
    id integer NOT NULL,
    model character varying(16) NOT NULL,
    model_id integer NOT NULL,
    user_id integer NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    object text NOT NULL,
    is_reversion boolean DEFAULT false NOT NULL,
    is_creation boolean DEFAULT false NOT NULL,
    message text,
    most_recent boolean DEFAULT false NOT NULL,
    metabase_version character varying(100)
);


ALTER TABLE public.revision OWNER TO postgres;

--
-- Name: COLUMN revision.most_recent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.revision.most_recent IS 'Whether a revision is the most recent one';


--
-- Name: COLUMN revision.metabase_version; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.revision.metabase_version IS 'Metabase version used to create the revision.';


--
-- Name: revision_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.revision ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.revision_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: secret; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.secret (
    id integer NOT NULL,
    version integer DEFAULT 1 NOT NULL,
    creator_id integer,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone,
    name character varying(254) NOT NULL,
    kind character varying(254) NOT NULL,
    source character varying(254),
    value bytea NOT NULL
);


ALTER TABLE public.secret OWNER TO postgres;

--
-- Name: secret_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.secret ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.secret_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: segment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.segment (
    id integer NOT NULL,
    table_id integer NOT NULL,
    creator_id integer NOT NULL,
    name character varying(254) NOT NULL,
    description text,
    archived boolean DEFAULT false NOT NULL,
    definition text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    points_of_interest text,
    caveats text,
    show_in_getting_started boolean DEFAULT false NOT NULL,
    entity_id character(21)
);


ALTER TABLE public.segment OWNER TO postgres;

--
-- Name: segment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.segment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.segment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: setting; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.setting (
    key character varying(254) NOT NULL,
    value text NOT NULL
);


ALTER TABLE public.setting OWNER TO postgres;

--
-- Name: table_privileges; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.table_privileges (
    table_id integer NOT NULL,
    role character varying(255),
    "select" boolean DEFAULT false NOT NULL,
    update boolean DEFAULT false NOT NULL,
    insert boolean DEFAULT false NOT NULL,
    delete boolean DEFAULT false NOT NULL
);


ALTER TABLE public.table_privileges OWNER TO postgres;

--
-- Name: TABLE table_privileges; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.table_privileges IS 'Table for user and role privileges by table';


--
-- Name: COLUMN table_privileges.table_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.table_privileges.table_id IS 'Table ID';


--
-- Name: COLUMN table_privileges.role; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.table_privileges.role IS 'Role name. NULL indicates the privileges are the current user''s';


--
-- Name: COLUMN table_privileges."select"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.table_privileges."select" IS 'Privilege to select from the table';


--
-- Name: COLUMN table_privileges.update; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.table_privileges.update IS 'Privilege to update records in the table';


--
-- Name: COLUMN table_privileges.insert; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.table_privileges.insert IS 'Privilege to insert records into the table';


--
-- Name: COLUMN table_privileges.delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.table_privileges.delete IS 'Privilege to delete records from the table';


--
-- Name: task_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.task_history (
    id integer NOT NULL,
    task character varying(254) NOT NULL,
    db_id integer,
    started_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ended_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    duration integer NOT NULL,
    task_details text
);


ALTER TABLE public.task_history OWNER TO postgres;

--
-- Name: task_history_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.task_history ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.task_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: timeline; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.timeline (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    description character varying(255),
    icon character varying(128) NOT NULL,
    collection_id integer,
    archived boolean DEFAULT false NOT NULL,
    creator_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    "default" boolean DEFAULT false NOT NULL,
    entity_id character(21)
);


ALTER TABLE public.timeline OWNER TO postgres;

--
-- Name: timeline_event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.timeline_event (
    id integer NOT NULL,
    timeline_id integer NOT NULL,
    name character varying(255) NOT NULL,
    description character varying(255),
    "timestamp" timestamp with time zone NOT NULL,
    time_matters boolean NOT NULL,
    timezone character varying(255) NOT NULL,
    icon character varying(128) NOT NULL,
    archived boolean DEFAULT false NOT NULL,
    creator_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.timeline_event OWNER TO postgres;

--
-- Name: timeline_event_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.timeline_event ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.timeline_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: timeline_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.timeline ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.timeline_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: v_alerts; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_alerts AS
 WITH agg_recipients AS (
         SELECT pulse_channel_recipient.pulse_channel_id,
            string_agg((core_user.email)::text, ','::text) AS recipients
           FROM (public.pulse_channel_recipient
             LEFT JOIN public.core_user ON ((pulse_channel_recipient.user_id = core_user.id)))
          GROUP BY pulse_channel_recipient.pulse_channel_id
        )
 SELECT pulse.id AS entity_id,
    ('pulse_'::text || pulse.id) AS entity_qualified_id,
    pulse.created_at,
    pulse.updated_at,
    pulse.creator_id,
    pulse_card.card_id,
    ('card_'::text || pulse_card.card_id) AS card_qualified_id,
    pulse.alert_condition,
    pulse_channel.schedule_type,
    pulse_channel.schedule_day,
    pulse_channel.schedule_hour,
    pulse.archived,
    pulse_channel.channel_type AS recipient_type,
    agg_recipients.recipients,
    pulse_channel.details AS recipient_external
   FROM (((public.pulse
     LEFT JOIN public.pulse_card ON ((pulse.id = pulse_card.pulse_id)))
     LEFT JOIN public.pulse_channel ON ((pulse.id = pulse_channel.pulse_id)))
     LEFT JOIN agg_recipients ON ((pulse_channel.id = agg_recipients.pulse_channel_id)))
  WHERE (pulse.alert_condition IS NOT NULL);


ALTER VIEW public.v_alerts OWNER TO postgres;

--
-- Name: v_audit_log; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_audit_log AS
 SELECT id,
        CASE
            WHEN ((topic)::text = 'card-create'::text) THEN 'card-create'::character varying
            WHEN ((topic)::text = 'card-delete'::text) THEN 'card-delete'::character varying
            WHEN ((topic)::text = 'card-update'::text) THEN 'card-update'::character varying
            WHEN ((topic)::text = 'pulse-create'::text) THEN 'subscription-create'::character varying
            WHEN ((topic)::text = 'pulse-delete'::text) THEN 'subscription-delete'::character varying
            ELSE topic
        END AS topic,
    "timestamp",
    NULL::text AS end_timestamp,
    user_id,
    lower((model)::text) AS entity_type,
    model_id AS entity_id,
        CASE
            WHEN ((model)::text = 'Dataset'::text) THEN ('card_'::text || model_id)
            WHEN (model_id IS NULL) THEN NULL::text
            ELSE ((lower((model)::text) || '_'::text) || model_id)
        END AS entity_qualified_id,
    details
   FROM public.audit_log
  WHERE ((topic)::text <> ALL (ARRAY[('card-read'::character varying)::text, ('card-query'::character varying)::text, ('dashboard-read'::character varying)::text, ('dashboard-query'::character varying)::text, ('table-read'::character varying)::text]));


ALTER VIEW public.v_audit_log OWNER TO postgres;

--
-- Name: v_content; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_content AS
 SELECT action.id AS entity_id,
    ('action_'::text || action.id) AS entity_qualified_id,
    'action'::text AS entity_type,
    action.created_at,
    action.updated_at,
    action.creator_id,
    action.name,
    action.description,
    NULL::integer AS collection_id,
    action.made_public_by_id AS made_public_by_user,
    NULL::boolean AS is_embedding_enabled,
    action.archived,
    action.type AS action_type,
    action.model_id AS action_model_id,
    NULL::boolean AS collection_is_official,
    NULL::boolean AS collection_is_personal,
    NULL::text AS question_viz_type,
    NULL::text AS question_database_id,
    NULL::boolean AS question_is_native,
    NULL::timestamp without time zone AS event_timestamp
   FROM public.action
UNION
 SELECT collection.id AS entity_id,
    ('collection_'::text || collection.id) AS entity_qualified_id,
    'collection'::text AS entity_type,
    collection.created_at,
    NULL::timestamp with time zone AS updated_at,
    NULL::integer AS creator_id,
    collection.name,
    collection.description,
    NULL::integer AS collection_id,
    NULL::integer AS made_public_by_user,
    NULL::boolean AS is_embedding_enabled,
    collection.archived,
    NULL::text AS action_type,
    NULL::integer AS action_model_id,
        CASE
            WHEN ((collection.authority_level)::text = 'official'::text) THEN true
            ELSE false
        END AS collection_is_official,
        CASE
            WHEN (collection.personal_owner_id IS NOT NULL) THEN true
            ELSE false
        END AS collection_is_personal,
    NULL::text AS question_viz_type,
    NULL::text AS question_database_id,
    NULL::boolean AS question_is_native,
    NULL::timestamp without time zone AS event_timestamp
   FROM public.collection
UNION
 SELECT report_card.id AS entity_id,
    ('card_'::text || report_card.id) AS entity_qualified_id,
        CASE
            WHEN report_card.dataset THEN 'model'::text
            ELSE 'question'::text
        END AS entity_type,
    report_card.created_at,
    report_card.updated_at,
    report_card.creator_id,
    report_card.name,
    report_card.description,
    report_card.collection_id,
    report_card.made_public_by_id AS made_public_by_user,
    report_card.enable_embedding AS is_embedding_enabled,
    report_card.archived,
    NULL::text AS action_type,
    NULL::integer AS action_model_id,
    NULL::boolean AS collection_is_official,
    NULL::boolean AS collection_is_personal,
    report_card.display AS question_viz_type,
    ('database_'::text || report_card.database_id) AS question_database_id,
        CASE
            WHEN ((report_card.query_type)::text = 'native'::text) THEN true
            ELSE false
        END AS question_is_native,
    NULL::timestamp without time zone AS event_timestamp
   FROM public.report_card
UNION
 SELECT report_dashboard.id AS entity_id,
    ('dashboard_'::text || report_dashboard.id) AS entity_qualified_id,
    'dashboard'::text AS entity_type,
    report_dashboard.created_at,
    report_dashboard.updated_at,
    report_dashboard.creator_id,
    report_dashboard.name,
    report_dashboard.description,
    report_dashboard.collection_id,
    report_dashboard.made_public_by_id AS made_public_by_user,
    report_dashboard.enable_embedding AS is_embedding_enabled,
    report_dashboard.archived,
    NULL::text AS action_type,
    NULL::integer AS action_model_id,
    NULL::boolean AS collection_is_official,
    NULL::boolean AS collection_is_personal,
    NULL::text AS question_viz_type,
    NULL::text AS question_database_id,
    NULL::boolean AS question_is_native,
    NULL::timestamp without time zone AS event_timestamp
   FROM public.report_dashboard
UNION
 SELECT event.id AS entity_id,
    ('event_'::text || event.id) AS entity_qualified_id,
    'event'::text AS entity_type,
    event.created_at,
    event.updated_at,
    event.creator_id,
    event.name,
    event.description,
    timeline.collection_id,
    NULL::integer AS made_public_by_user,
    NULL::boolean AS is_embedding_enabled,
    event.archived,
    NULL::text AS action_type,
    NULL::integer AS action_model_id,
    NULL::boolean AS collection_is_official,
    NULL::boolean AS collection_is_personal,
    NULL::text AS question_viz_type,
    NULL::text AS question_database_id,
    NULL::boolean AS question_is_native,
    event."timestamp" AS event_timestamp
   FROM (public.timeline_event event
     LEFT JOIN public.timeline ON ((event.timeline_id = timeline.id)));


ALTER VIEW public.v_content OWNER TO postgres;

--
-- Name: v_dashboardcard; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_dashboardcard AS
 SELECT id AS entity_id,
    concat('dashboardcard_', id) AS entity_qualified_id,
    concat('dashboard_', dashboard_id) AS dashboard_qualified_id,
    concat('dashboardtab_', dashboard_tab_id) AS dashboardtab_id,
    concat('card_', card_id) AS card_qualified_id,
    created_at,
    updated_at,
    size_x,
    size_y,
    visualization_settings,
    parameter_mappings
   FROM public.report_dashboardcard;


ALTER VIEW public.v_dashboardcard OWNER TO postgres;

--
-- Name: v_databases; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_databases AS
 SELECT id AS entity_id,
    concat('database_', id) AS entity_qualified_id,
    created_at,
    updated_at,
    name,
    description,
    engine AS database_type,
    metadata_sync_schedule,
    cache_field_values_schedule,
    timezone,
    is_on_demand,
    auto_run_queries,
    cache_ttl,
    creator_id,
    dbms_version AS db_version
   FROM public.metabase_database
  WHERE (id <> 13371337);


ALTER VIEW public.v_databases OWNER TO postgres;

--
-- Name: v_fields; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_fields AS
 SELECT id AS entity_id,
    ('field_'::text || id) AS entity_qualified_id,
    created_at,
    updated_at,
    name,
    display_name,
    description,
    base_type,
    visibility_type,
    fk_target_field_id,
    has_field_values,
    active,
    table_id
   FROM public.metabase_field;


ALTER VIEW public.v_fields OWNER TO postgres;

--
-- Name: v_group_members; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_group_members AS
 SELECT permissions_group_membership.user_id,
    permissions_group.id AS group_id,
    permissions_group.name AS group_name
   FROM (public.permissions_group_membership
     LEFT JOIN public.permissions_group ON ((permissions_group_membership.group_id = permissions_group.id)));


ALTER VIEW public.v_group_members OWNER TO postgres;

--
-- Name: v_query_log; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_query_log AS
 SELECT id AS entity_id,
    started_at,
    ((running_time)::double precision / (1000)::double precision) AS running_time_seconds,
    result_rows,
    native AS is_native,
    context AS query_source,
    error,
    executor_id AS user_id,
    card_id,
    ('card_'::text || card_id) AS card_qualified_id,
    dashboard_id,
    ('dashboard_'::text || dashboard_id) AS dashboard_qualified_id,
    pulse_id,
    database_id,
    ('database_'::text || database_id) AS database_qualified_id,
    cache_hit,
    action_id,
    ('action_'::text || action_id) AS action_qualified_id
   FROM public.query_execution;


ALTER VIEW public.v_query_log OWNER TO postgres;

--
-- Name: v_subscriptions; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_subscriptions AS
 WITH agg_recipients AS (
         SELECT pulse_channel_recipient.pulse_channel_id,
            string_agg((core_user.email)::text, ','::text) AS recipients
           FROM (public.pulse_channel_recipient
             LEFT JOIN public.core_user ON ((pulse_channel_recipient.user_id = core_user.id)))
          GROUP BY pulse_channel_recipient.pulse_channel_id
        )
 SELECT pulse.id AS entity_id,
    ('pulse_'::text || pulse.id) AS entity_qualified_id,
    pulse.created_at,
    pulse.updated_at,
    pulse.creator_id,
    pulse.archived,
    ('dashboard_'::text || pulse.dashboard_id) AS dashboard_qualified_id,
    pulse_channel.schedule_type,
    pulse_channel.schedule_day,
    pulse_channel.schedule_hour,
    pulse_channel.channel_type AS recipient_type,
    agg_recipients.recipients,
    pulse_channel.details AS recipient_external,
    pulse.parameters
   FROM ((public.pulse
     LEFT JOIN public.pulse_channel ON ((pulse.id = pulse_channel.pulse_id)))
     LEFT JOIN agg_recipients ON ((pulse_channel.id = agg_recipients.pulse_channel_id)))
  WHERE (pulse.alert_condition IS NULL);


ALTER VIEW public.v_subscriptions OWNER TO postgres;

--
-- Name: v_tables; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_tables AS
 SELECT id AS entity_id,
    ('table_'::text || id) AS entity_qualified_id,
    created_at,
    updated_at,
    name,
    display_name,
    description,
    active,
    db_id AS database_id,
    schema,
    is_upload
   FROM public.metabase_table;


ALTER VIEW public.v_tables OWNER TO postgres;

--
-- Name: v_tasks; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_tasks AS
 SELECT id,
    task,
    ('database_'::text || db_id) AS database_qualified_id,
    started_at,
    ended_at,
    ((duration)::double precision / (1000)::double precision) AS duration_seconds,
    task_details AS details
   FROM public.task_history;


ALTER VIEW public.v_tasks OWNER TO postgres;

--
-- Name: v_users; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_users AS
 SELECT id AS user_id,
    ('user_'::text || id) AS entity_qualified_id,
    email,
    first_name,
    last_name,
    (((first_name)::text || ' '::text) || (last_name)::text) AS full_name,
    date_joined,
    last_login,
    updated_at,
    is_superuser AS is_admin,
    is_active,
    sso_source,
    locale
   FROM public.core_user;


ALTER VIEW public.v_users OWNER TO postgres;

--
-- Name: view_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.view_log (
    id integer NOT NULL,
    user_id integer,
    model character varying(16) NOT NULL,
    model_id integer NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    metadata text,
    has_access boolean,
    context character varying(32)
);


ALTER TABLE public.view_log OWNER TO postgres;

--
-- Name: COLUMN view_log.has_access; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.view_log.has_access IS 'Whether the user who initiated the view had read access to the item being viewed.';


--
-- Name: COLUMN view_log.context; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.view_log.context IS 'The context of the view, can be collection, question, or dashboard. Only for cards.';


--
-- Name: v_view_log; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_view_log AS
 SELECT id,
    "timestamp",
    user_id,
    model AS entity_type,
    model_id AS entity_id,
    (((model)::text || '_'::text) || model_id) AS entity_qualified_id
   FROM public.view_log;


ALTER VIEW public.v_view_log OWNER TO postgres;

--
-- Name: view_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.view_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.view_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: action; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.action (id, created_at, updated_at, type, model_id, name, description, parameters, parameter_mappings, visualization_settings, public_uuid, made_public_by_id, creator_id, archived, entity_id) FROM stdin;
\.


--
-- Data for Name: activity; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.activity (id, topic, "timestamp", user_id, model, model_id, database_id, table_id, custom_id, details) FROM stdin;
\.


--
-- Data for Name: application_permissions_revision; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.application_permissions_revision (id, before, after, user_id, created_at, remark) FROM stdin;
\.


--
-- Data for Name: audit_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.audit_log (id, topic, "timestamp", end_timestamp, user_id, model, model_id, details) FROM stdin;
\.


--
-- Data for Name: bookmark_ordering; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.bookmark_ordering (id, user_id, type, item_id, ordering) FROM stdin;
\.


--
-- Data for Name: card_bookmark; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.card_bookmark (id, user_id, card_id, created_at) FROM stdin;
\.


--
-- Data for Name: card_label; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.card_label (id, card_id, label_id) FROM stdin;
\.


--
-- Data for Name: collection; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collection (id, name, description, archived, location, personal_owner_id, slug, namespace, authority_level, entity_id, created_at, type) FROM stdin;
1	Quack MeUp's Personal Collection	\N	f	/	1	quack_meup_s_personal_collection	\N	\N	YGkYXhi5yOKwy0YMs_KAl	2024-01-24 01:08:50.936096+00	\N
\.


--
-- Data for Name: collection_bookmark; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collection_bookmark (id, user_id, collection_id, created_at) FROM stdin;
\.


--
-- Data for Name: collection_permission_graph_revision; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collection_permission_graph_revision (id, before, after, user_id, created_at, remark) FROM stdin;
\.


--
-- Data for Name: connection_impersonations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.connection_impersonations (id, db_id, group_id, attribute) FROM stdin;
\.


--
-- Data for Name: core_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_session (id, user_id, created_at, anti_csrf_token) FROM stdin;
d9b50c3e-6a36-44f9-b569-41721124a5e0	1	2024-01-24 01:08:47.766063+00	\N
48987b52-5445-4cde-970f-d8830b6975b5	1	2024-01-24 01:39:05.597994+00	\N
\.


--
-- Data for Name: core_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.core_user (id, email, first_name, last_name, password, password_salt, date_joined, last_login, is_superuser, is_active, reset_token, reset_triggered, is_qbnewb, login_attributes, updated_at, sso_source, locale, is_datasetnewb, settings) FROM stdin;
1	quackmeup@example.com	Quack	MeUp	$2a$10$gHx5vorwj/.U86DnNx9cXOlnVwPJu1Kuprgi2D06Hd7BZOHVPCw6K	5b68e2e3-5aa8-4725-9504-52a3e706e41b	2024-01-24 01:08:47.766063+00	2024-01-24 01:39:05.711138+00	t	t	\N	\N	t	\N	2024-01-24 01:39:05.711138	\N	\N	t	{"last-acknowledged-version":"v0.48.3"}
\.


--
-- Data for Name: dashboard_bookmark; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.dashboard_bookmark (id, user_id, dashboard_id, created_at) FROM stdin;
\.


--
-- Data for Name: dashboard_favorite; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.dashboard_favorite (id, user_id, dashboard_id) FROM stdin;
\.


--
-- Data for Name: dashboard_tab; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.dashboard_tab (id, dashboard_id, name, "position", entity_id, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: dashboardcard_series; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.dashboardcard_series (id, dashboardcard_id, card_id, "position") FROM stdin;
\.


--
-- Data for Name: databasechangelog; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.databasechangelog (id, author, filename, dateexecuted, orderexecuted, exectype, md5sum, description, comments, tag, liquibase, contexts, labels, deployment_id) FROM stdin;
v00.00-000	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.650211	1	EXECUTED	8:a59595109e74e7a2678a1b0dfd25f74a	sqlFile path=initialization/metabase_postgres.sql; sqlFile path=initialization/metabase_mysql.sql; sqlFile path=initialization/metabase_h2.sql	Initialze metabase	\N	4.21.1	\N	\N	6058079158
v45.00-001	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.659098	2	EXECUTED	8:da99b71a4ac7eb662f6a95e69585935e	createTable tableName=action	Added 0.44.0 - writeback	\N	4.21.1	\N	\N	6058079158
v45.00-002	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.663634	3	EXECUTED	8:6da7a6285edb138c404de0eeba209570	createTable tableName=query_action	Added 0.44.0 - writeback	\N	4.21.1	\N	\N	6058079158
v45.00-003	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.667697	4	EXECUTED	8:512337d6d4af38016aa79585abbe03a1	addPrimaryKey constraintName=pk_query_action, tableName=query_action	Added 0.44.0 - writeback	\N	4.21.1	\N	\N	6058079158
v45.00-011	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.671513	5	EXECUTED	8:dcf1cda9f20dca4b6ff8101b13b98c4a	addColumn tableName=report_card	Added 0.44.0 - writeback	\N	4.21.1	\N	\N	6058079158
v45.00-012	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.678019	6	EXECUTED	8:aadf28229f585cff7c4b4c1918e558b2	createTable tableName=http_action	Added 0.44.0 - writeback	\N	4.21.1	\N	\N	6058079158
v45.00-013	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.681009	7	EXECUTED	8:26dba276b14255d4346507a1a25d117b	addPrimaryKey constraintName=pk_http_action, tableName=http_action	Added 0.44.0 - writeback	\N	4.21.1	\N	\N	6058079158
v45.00-022	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.689008	8	EXECUTED	8:d46fa24e4d75a11b2e92aecbf39c6ee1	createTable tableName=app	Added 0.45.0 - add app container	\N	4.21.1	\N	\N	6058079158
v45.00-023	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.691724	9	EXECUTED	8:c6c1ff9ca3b62d4cda3a2d782dd86f2f	addForeignKeyConstraint baseTableName=app, constraintName=fk_app_ref_dashboard_id, referencedTableName=report_dashboard	Added 0.45.0 - add app container	\N	4.21.1	\N	\N	6058079158
v45.00-025	metamben	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.693914	10	EXECUTED	8:50a43cea3123ecdb602123825f5a7dbf	addColumn tableName=report_dashboard	Added 0.45.0 - mark app pages	\N	4.21.1	\N	\N	6058079158
v45.00-026	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.69623	11	EXECUTED	8:ae77d4086998911877e3207fcf90c9c7	addColumn tableName=report_dashboardcard	Added 0.45.0 - apps add action_id to report_dashboardcard	\N	4.21.1	\N	\N	6058079158
v45.00-027	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.698352	12	EXECUTED	8:40c3c8391c1416a3bce09ca3c7237173	addForeignKeyConstraint baseTableName=report_dashboardcard, constraintName=fk_report_dashboardcard_ref_action_id, referencedTableName=action	Added 0.45.0 - apps add fk for action_id to report_dashboardcard	\N	4.21.1	\N	\N	6058079158
v45.00-028	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.700305	13	EXECUTED	8:f8f68f80627aeb2ef7f28f2af2b5a31b	renameColumn newColumnName=size_x, oldColumnName=sizeX, tableName=report_dashboardcard	Added 0.45.0 -- rename DashboardCard sizeX to size_x. See https://github.com/metabase/metabase/issues/16344	\N	4.21.1	\N	\N	6058079158
v45.00-029	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.702093	14	EXECUTED	8:579957652133eab3ee023dd911162a1e	renameColumn newColumnName=size_y, oldColumnName=sizeY, tableName=report_dashboardcard	Added 0.45.0 -- rename DashboardCard size_y to size_y. See https://github.com/metabase/metabase/issues/16344	\N	4.21.1	\N	\N	6058079158
v45.00-030	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.704197	15	EXECUTED	8:41eda097feb034c4d01b2dbda74753c8	addDefaultValue columnName=size_x, tableName=report_dashboardcard	Added 0.45.0 -- add default value to DashboardCard size_x -- this was previously done by Toucan	\N	4.21.1	\N	\N	6058079158
v45.00-031	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.705928	16	EXECUTED	8:6416e373e335dc1c12c7571af674dede	addDefaultValue columnName=size_y, tableName=report_dashboardcard	Added 0.45.0 -- add default value to DashboardCard size_y -- this was previously done by Toucan	\N	4.21.1	\N	\N	6058079158
v45.00-032	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.707865	17	EXECUTED	8:d97444fe24a2dca618a2804741335f6d	addDefaultValue columnName=created_at, tableName=report_dashboardcard	Added 0.45.0 -- add default value for DashboardCard created_at (Postgres/H2)	\N	4.21.1	\N	\N	6058079158
v45.00-033	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.708968	18	MARK_RAN	8:34df79fc79e086ab05bb2fd79bb4e322	sql	Added 0.45.0 -- add default value for DashboardCard created_at (MySQL/MariaDB)	\N	4.21.1	\N	\N	6058079158
v45.00-034	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.711381	19	EXECUTED	8:ba0505a87ef876026759cdcb4e704f41	addDefaultValue columnName=updated_at, tableName=report_dashboardcard	Added 0.45.0 -- add default value for DashboardCard updated_at (Postgres/H2)	\N	4.21.1	\N	\N	6058079158
v45.00-035	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.712367	20	MARK_RAN	8:dcee49781d80d9c4be5ad9dd51975a07	sql	Added 0.45.0 -- add default value for DashboardCard updated_at (MySQL/MariaDB)	\N	4.21.1	\N	\N	6058079158
v45.00-036	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.719656	21	EXECUTED	8:cd4009254bd2c56aaf281082038c1f0b	createTable tableName=model_action	Added 0.45.0 - add model action table	\N	4.21.1	\N	\N	6058079158
v45.00-037	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.725211	22	EXECUTED	8:56f548cc84a53cc6d18302761ee71554	addUniqueConstraint constraintName=unique_model_action_card_id_slug, tableName=model_action	Added 0.45.0 - model action	\N	4.21.1	\N	\N	6058079158
v45.00-038	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.727452	23	EXECUTED	8:c38ddc295206e807c7254581ed9566c3	addDefaultValue columnName=created_at, tableName=metabase_database	Added 0.45.0 -- add default value for Database created_at (Postgres/H2)	\N	4.21.1	\N	\N	6058079158
v45.00-039	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.728315	24	MARK_RAN	8:2c539d76d3aead7f7366b15333132b30	sql	Added 0.45.0 -- add default value for Database created_at (MySQL/MariaDB)	\N	4.21.1	\N	\N	6058079158
v45.00-040	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.730836	25	EXECUTED	8:00ac7c24cfd3e7ea3a21f21f4e45dbcf	addDefaultValue columnName=updated_at, tableName=metabase_database	Added 0.45.0 -- add default value for Database updated_at (Postgres/H2)	\N	4.21.1	\N	\N	6058079158
v45.00-041	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.731636	26	MARK_RAN	8:82dc368fa3e0163a06929da6e9556fe2	sql	Added 0.45.0 -- add default value for Database updated_at (MySQL/MariaDB)	\N	4.21.1	\N	\N	6058079158
v45.00-042	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.736101	27	EXECUTED	8:d04207471480e335f14094e9a7a5d293	sql	Added 0.45.0 -- add default value for Database with NULL details	\N	4.21.1	\N	\N	6058079158
v45.00-043	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.741194	28	EXECUTED	8:1d07a5435e51abd0663458d907865a6b	addNotNullConstraint columnName=details, tableName=metabase_database	Added 0.45.0 -- make Database details NOT NULL	\N	4.21.1	\N	\N	6058079158
v45.00-044	metamben	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.747894	29	EXECUTED	8:0b23976c5d2248d511ac31b244efef22	createTable tableName=app_permission_graph_revision	Added 0.45.0 -- create app permission graph revision table	\N	4.21.1	\N	\N	6058079158
v45.00-048	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.750529	30	EXECUTED	8:0aca8f157f163e62805b7202f8aa202f	addColumn tableName=collection	Added 0.45.0 -- add created_at to Collection	\N	4.21.1	\N	\N	6058079158
v45.00-049	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.753305	31	EXECUTED	8:df2097d176fad99c142c5dd75ce8a3db	sql; sql; sql	Added 0.45.0 -- set Collection.created_at to User.date_joined for Personal Collections	\N	4.21.1	\N	\N	6058079158
v45.00-050	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.756603	32	EXECUTED	8:65ecfe481e7c0141bb82bb3401cfa94e	sql; sql; sql	Added 0.45.0 -- seed Collection.created_at with value of oldest item for non-Personal Collections	\N	4.21.1	\N	\N	6058079158
v45.00-051	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.757375	33	MARK_RAN	8:2378c7031da6871dcf1c737bf323d211	modifyDataType columnName=after, tableName=collection_permission_graph_revision	Added 0.45.0 - modify type of collection_permission_graph_revision.after from text to text on mysql,mariadb	\N	4.21.1	\N	\N	6058079158
v45.00-052	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.758627	34	MARK_RAN	8:b7343eb9556c3e636b6f8dd70708c0b3	modifyDataType columnName=before, tableName=collection_permission_graph_revision	Added 0.45.0 - modify type of collection_permission_graph_revision.before from text to text on mysql,mariadb	\N	4.21.1	\N	\N	6058079158
v45.00-053	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.760016	35	MARK_RAN	8:fa552605d5a587c4fa74e0c6bd358097	modifyDataType columnName=remark, tableName=collection_permission_graph_revision	Added 0.45.0 - modify type of collection_permission_graph_revision.remark from text to text on mysql,mariadb	\N	4.21.1	\N	\N	6058079158
v45.00-054	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.761366	36	MARK_RAN	8:60862c4ecf505727e839ac5e94f95528	modifyDataType columnName=after, tableName=permissions_revision	Added 0.45.0 - modify type of permissions_revision.after from text to text on mysql,mariadb	\N	4.21.1	\N	\N	6058079158
v45.00-055	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.762586	37	MARK_RAN	8:717f0c266da5768098a2ead6168f3b18	modifyDataType columnName=before, tableName=permissions_revision	Added 0.45.0 - modify type of permissions_revision.before from text to text on mysql,mariadb	\N	4.21.1	\N	\N	6058079158
v45.00-056	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.763882	38	MARK_RAN	8:a1f364d45a922c90b4fac741a22e66b3	modifyDataType columnName=remark, tableName=permissions_revision	Added 0.45.0 - modify type of permissions_revision.remark from text to text on mysql,mariadb	\N	4.21.1	\N	\N	6058079158
v45.00-057	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.765148	39	MARK_RAN	8:650a5b435f8195765a2ab1e3e4bc7b14	modifyDataType columnName=value, tableName=secret	Added 0.45.0 - modify type of secret.value from blob to longblob on mysql,mariadb	\N	4.21.1	\N	\N	6058079158
v46.00-000	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.769317	40	EXECUTED	8:97251413292221e51490e990b6f683f2	createTable tableName=implicit_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-001	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.771499	41	EXECUTED	8:4a90c7523749aa7e4e4d2ea9dd6db777	addColumn tableName=action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-002	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.773402	42	EXECUTED	8:b2b112f0df413692631b75822f658de1	addColumn tableName=action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-003	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.77535	43	EXECUTED	8:45b8358f31811335aaa93032726a042b	addColumn tableName=action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-004	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.777208	44	EXECUTED	8:0ce8ff05beffc5c72e2348bcec581eee	addColumn tableName=action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-005	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.779143	45	EXECUTED	8:84cf1fbf435c7c3f794c973de4d62fad	addColumn tableName=action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-006	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.781342	46	EXECUTED	8:df43ef08b76c33c5626dbf9b226717b5	addColumn tableName=action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-007	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.783623	47	EXECUTED	8:6830901cccc14ad22cdfd86bd3a2afe7	addForeignKeyConstraint baseTableName=action, constraintName=fk_action_model_id, referencedTableName=report_card	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-008	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.785653	48	EXECUTED	8:6e73a8683d1b757c5f9034513ec8a581	addColumn tableName=query_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-009	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.788553	49	EXECUTED	8:2b4fd7cee77d5ed8de22fcc2fba158bc	addColumn tableName=query_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-010	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.79045	50	EXECUTED	8:77ca03e5a0dbe370461295da1c77cf0f	addForeignKeyConstraint baseTableName=query_action, constraintName=fk_query_action_database_id, referencedTableName=metabase_database	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-011	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.793338	51	EXECUTED	8:3c76c705376a9d70c98d26529db60efc	sql; sql; sql	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-012	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.795286	52	EXECUTED	8:7e4dffe8bbbb740207001ead696a8557	dropNotNullConstraint columnName=card_id, tableName=query_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-013	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.802096	53	EXECUTED	8:96dfaa20265be749af8590f75d465348	sql	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-014	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.804567	54	EXECUTED	8:585958ee7e90e23a9cc22ebf7e4228cb	dropForeignKeyConstraint baseTableName=query_action, constraintName=fk_query_action_ref_card_id	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-015	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.80677	55	EXECUTED	8:9b57260e146618caff3f468116031008	dropColumn columnName=card_id, tableName=query_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-016	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.809297	56	EXECUTED	8:cb79eef9f483e73b3d9b571f916b8598	sql	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-017	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.811522	57	EXECUTED	8:90525ade34e7bb883bf75cdf8a2b3340	dropColumn columnName=name, tableName=http_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-018	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.813415	58	EXECUTED	8:cf3c31a975dc86f1def6ee5d11f5f9dc	dropColumn columnName=description, tableName=http_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-019	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.81537	59	EXECUTED	8:a9f70163707cc7f798bdd0527a55854b	dropColumn columnName=is_write, tableName=report_card	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-020	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.817439	60	EXECUTED	8:2def45c139267d7424e1187764122669	addNotNullConstraint columnName=database_id, tableName=query_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-021	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.819618	61	EXECUTED	8:52c8107f4bcc6e9889b270e0a4954921	addNotNullConstraint columnName=dataset_query, tableName=query_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-022	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.821416	62	EXECUTED	8:52c8107f4bcc6e9889b270e0a4954921	addNotNullConstraint columnName=dataset_query, tableName=query_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-023	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.823317	63	EXECUTED	8:33c91db1b039855af8bf1dc8315bd5d2	addNotNullConstraint columnName=model_id, tableName=action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-024	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.825416	64	EXECUTED	8:080ff435bae61f324535393d9e78de38	addNotNullConstraint columnName=name, tableName=action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-025	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.828945	65	EXECUTED	8:60016f3de98c7382602485f13bc4e04f	dropTable tableName=model_action	Added 0.46.0 - Unify action representation	\N	4.21.1	\N	\N	6058079158
v46.00-026	metamben	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.831711	66	EXECUTED	8:948b9653bfbadeb29c847ef41d053dba	addColumn tableName=metabase_database	Added 0.46.0 -- add field for tracking DBMS versions	\N	4.21.1	\N	\N	6058079158
v46.00-027	snoe	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.834403	67	EXECUTED	8:5f7773b797a3c85a99cd35cb60cfd0b3	addColumn tableName=metabase_fieldvalues	Added 0.46.0 -- add last_used_at to FieldValues	\N	4.21.1	\N	\N	6058079158
v46.00-028	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.839518	68	EXECUTED	8:33cc1a038e926acb7dfd7cf29b4fa545	createTable tableName=parameter_card	Added 0.46.0 -- Join table connecting cards to dashboards/cards's parameters that need custom filter values from the card	\N	4.21.1	\N	\N	6058079158
v46.00-029	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.841764	69	EXECUTED	8:96336855a4180eaf51d7be4a97f3b1a4	dropUniqueConstraint constraintName=unique_dimension_field_id_name, tableName=dimension	Make Dimension <=> Field a 1t1 relationship. Drop unique constraint on field_id + name. (1/3)	\N	4.21.1	\N	\N	6058079158
v46.00-030	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.844108	70	EXECUTED	8:e1f67579cb8dc1102445df299636cb7b	sql	Make Dimension <=> Field a 1t1 relationship. Delete duplicate entries. (2/3)	\N	4.21.1	\N	\N	6058079158
v46.00-031	camsaul	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.846712	71	EXECUTED	8:a9b4c86de880b2bc01e208d8d4d8cf64	addUniqueConstraint constraintName=unique_dimension_field_id, tableName=dimension	Make Dimension <=> Field a 1t1 relationship. Add unique constraint on field_id. (3/3)	\N	4.21.1	\N	\N	6058079158
v46.00-032	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.849541	72	EXECUTED	8:2a7de9726282af199737a334395f1068	addUniqueConstraint constraintName=unique_parameterized_object_card_parameter, tableName=parameter_card	Added 0.46.0 -- Unique parameter_card	\N	4.21.1	\N	\N	6058079158
v46.00-033	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.852858	73	EXECUTED	8:25bc5b1a806d4b352d43f5b16e7e6e20	createIndex indexName=idx_parameter_card_parameterized_object_id, tableName=parameter_card	Added 0.46.0 -- parameter_card index on connected object	\N	4.21.1	\N	\N	6058079158
v46.00-034	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.855766	74	EXECUTED	8:5a6b5a2cf7160baec4f81f6675de898c	createIndex indexName=idx_parameter_card_card_id, tableName=parameter_card	Added 0.46.0 -- parameter_card index on connected card	\N	4.21.1	\N	\N	6058079158
v46.00-035	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.8584	75	EXECUTED	8:0639e4c0939848b4377792290311f239	addForeignKeyConstraint baseTableName=parameter_card, constraintName=fk_parameter_card_ref_card_id, referencedTableName=report_card	Added 0.46.0 - parameter_card.card_id foreign key	\N	4.21.1	\N	\N	6058079158
v46.00-036	metamben	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.8611	76	EXECUTED	8:39d440f29a481e9f0915532106079a1a	dropTable tableName=app_permission_graph_revision	App containers are removed in 0.46.0	\N	4.21.1	\N	\N	6058079158
v46.00-037	metamben	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.863293	77	EXECUTED	8:dbbe898501c554e3ee74c6b9ef9c1575	dropColumn columnName=is_app_page, tableName=report_dashboard	App pages are removed in 0.46.0	\N	4.21.1	\N	\N	6058079158
v46.00-038	metamben	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.865947	78	EXECUTED	8:220a27bae93423a2c9a76f611f10b87b	dropTable tableName=app	App containers are removed in 0.46.0	\N	4.21.1	\N	\N	6058079158
v46.00-039	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.8699	79	EXECUTED	8:7ed32de11fbe8565148d8491f908ad05	addColumn tableName=parameter_card	Added 0.46.0 - add entity_id to parameter_card	\N	4.21.1	\N	\N	6058079158
v46.00-040	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.871993	80	EXECUTED	8:7fec881cac598cce34b62c98fcf37563	addDefaultValue columnName=size_x, tableName=report_dashboardcard	Added 0.46.0 -- Bump default dashcard size to 4x4	\N	4.21.1	\N	\N	6058079158
v46.00-041	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.874378	81	EXECUTED	8:0214a8d0b94a9eb48aad75b1d50dd279	addDefaultValue columnName=size_y, tableName=report_dashboardcard	Added 0.46.0 -- Bump default dashcard size to 4x4	\N	4.21.1	\N	\N	6058079158
v46.00-042	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.876751	82	EXECUTED	8:7b91ad83569565517c43e9f7b9bfa29a	createIndex indexName=idx_query_execution_executor_id, tableName=query_execution	Added 0.46.0 -- index query_execution.executor_id	\N	4.21.1	\N	\N	6058079158
v46.00-043	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.879181	83	EXECUTED	8:d9cab29076035068cfc49fb9570832af	createIndex indexName=idx_query_execution_context, tableName=query_execution	Added 0.46.0 -- index query_execution.context	\N	4.21.1	\N	\N	6058079158
v46.00-045	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.882214	84	EXECUTED	8:7a9cabf1c693de8b0c9555f7deb072a4	addColumn tableName=action	Added 0.46.0 -- add public_uuid to action.	\N	4.21.1	\N	\N	6058079158
v46.00-051	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.884159	85	EXECUTED	8:74e83fc2ee7c1a06a94f07830f361773	dropDefaultValue columnName=row, tableName=report_dashboardcard	Added 0.46.0 -- drop defaults for dashcard's position and size	\N	4.21.1	\N	\N	6058079158
v46.00-052	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.885907	86	EXECUTED	8:948c978fcb2d938d272a05b3e56808d1	dropDefaultValue columnName=col, tableName=report_dashboardcard	Added 0.46.0 -- drop defaults for dashcard's position and size	\N	4.21.1	\N	\N	6058079158
v46.00-053	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.887513	87	EXECUTED	8:04e092dbffdfda13f28b1e3ea38299a7	dropDefaultValue columnName=size_x, tableName=report_dashboardcard	Added 0.46.0 -- drop defaults for dashcard's position and size	\N	4.21.1	\N	\N	6058079158
v46.00-054	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.88923	88	EXECUTED	8:bc3abf9ab94199aeaebb2be28dea77aa	dropDefaultValue columnName=size_y, tableName=report_dashboardcard	Added 0.46.0 -- drop defaults for dashcard's position and size	\N	4.21.1	\N	\N	6058079158
v46.00-055	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.89123	89	EXECUTED	8:48a516459b84a21e9edbdbfe1bffd671	addColumn tableName=action	Added 0.46.0 -- add made_public_by_id	\N	4.21.1	\N	\N	6058079158
v46.00-056	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.893846	90	EXECUTED	8:af93ab591b44b5d81d8d8a496600c1bc	createIndex indexName=idx_action_public_uuid, tableName=action	Added 0.46.0 -- add public_uuid and made_public_by_id to action. public_uuid is indexed	\N	4.21.1	\N	\N	6058079158
v46.00-057	dpsutton	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.895728	91	EXECUTED	8:aff3b0e15dcfc36a4fd97faade0751c0	modifyDataType columnName=parameter_id, tableName=parameter_card	Added 0.46.0 -- parameter_card.parameter_id long enough to hold a uuid	\N	4.21.1	\N	\N	6058079158
v46.00-058	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.897658	92	EXECUTED	8:11440c629413c7231e7f156347353761	addForeignKeyConstraint baseTableName=action, constraintName=fk_action_made_public_by_id, referencedTableName=core_user	Added 0.46.0 -- add FK constraint for action.made_public_by_id with core_user.id	\N	4.21.1	\N	\N	6058079158
v46.00-059	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.899802	93	EXECUTED	8:6ddec7d622e9200e36bd5e2e2e0a48c2	addColumn tableName=action	Added 0.46.0 -- add actions.creator_id	\N	4.21.1	\N	\N	6058079158
v46.00-060	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.902558	94	EXECUTED	8:fc1762a930726afb11131acf3a56312b	createIndex indexName=idx_action_creator_id, tableName=action	Added 0.46.0 -- action.creator_id index	\N	4.21.1	\N	\N	6058079158
v46.00-061	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.904836	95	EXECUTED	8:d57393ae0e96a9b1a0bd7a66597cb485	addForeignKeyConstraint baseTableName=action, constraintName=fk_action_creator_id, referencedTableName=core_user	Added 0.46.0 -- action.creator_id index	\N	4.21.1	\N	\N	6058079158
v46.00-062	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.906836	96	EXECUTED	8:20efdbd79df3c76cbf77318d871a9836	addColumn tableName=action	Added 0.46.0 -- add actions.archived	\N	4.21.1	\N	\N	6058079158
v46.00-064	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.908582	97	EXECUTED	8:0ac10ca0d82f1bbe39737eb0a8fdcd7d	renameTable newTableName=sandboxes, oldTableName=group_table_access_policy	Added 0.46.0 -- rename `group_table_access_policy` to `sandboxes`	\N	4.21.1	\N	\N	6058079158
v46.00-065	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.910447	98	EXECUTED	8:5cbb335952dd1ab7a137d80d6c1ab82e	addColumn tableName=sandboxes	Added 0.46.0 -- add `permission_id` to `sandboxes`	\N	4.21.1	\N	\N	6058079158
v46.00-070	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.913403	99	EXECUTED	8:d440a8d0aef0bbfdae24a9c70bd37605	addColumn tableName=action	Added 0.46.0 - add entity_id column to action	\N	4.21.1	\N	\N	6058079158
v46.00-074	metamben	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.915048	100	EXECUTED	8:c1273a3003d82638a0a5413bf2aa6777	modifyDataType columnName=updated_at, tableName=report_card	Added 0.46.0 -- increase precision of updated_at of report_card	\N	4.21.1	\N	\N	6058079158
v46.00-079	john-metabase	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.916987	101	EXECUTED	8:de167f33d3f7670246623466487d2e67	sql	Added 0.46.0 -- migrates Databases using deprecated and removed presto driver to presto-jdbc	\N	4.21.1	\N	\N	6058079158
v46.00-080	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.937712	102	EXECUTED	8:022a846feb10103f2e9fe4b58cb792d6	customChange	Migrate data permission paths from v1 to v2 (splitting them into separate data and query permissions)	\N	4.21.1	\N	\N	6058079158
v46.00-084	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.94073	103	EXECUTED	8:b4f465ca3be584028e077b907656b804	dropForeignKeyConstraint baseTableName=action, constraintName=fk_action_model_id	Added 0.46.0 - CASCADE delete for action.model_id	\N	4.21.1	\N	\N	6058079158
v46.00-085	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.943424	104	EXECUTED	8:17fe48c56aa457a6a09775099d44d7a5	addForeignKeyConstraint baseTableName=action, constraintName=fk_action_model_id, referencedTableName=report_card	Added 0.46.0 - CASCADE delete for action.model_id	\N	4.21.1	\N	\N	6058079158
v46.00-086	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.993568	105	EXECUTED	8:677e076d8741275d31a02e97531fd930	customChange	Added 0.46.0 - Delete the abandonment email task	\N	4.21.1	\N	\N	6058079158
v46.00-088	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.996602	106	EXECUTED	8:ff9defc19920960db55ef71e4d32b4ea	sql	Added 0.46.5 -- backfill `permission_id` values in `sandboxes`. This is a fixed verison of v46.00-066 which has been removed, since it had a bug that blocked a customer from upgrading.	\N	4.21.1	\N	\N	6058079158
v46.00-089	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:19.998793	107	EXECUTED	8:e0fbd2514cc960cc74106204ac65a3ea	sql	Added 0.46.5 -- remove orphaned entries in `sandboxes`	\N	4.21.1	\N	\N	6058079158
v46.00-090	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.57079	108	EXECUTED	8:963c0cd3a7bd2858e4dbfd4d4aad95cb	addForeignKeyConstraint baseTableName=sandboxes, constraintName=fk_sandboxes_ref_permissions, referencedTableName=permissions	Add foreign key constraint on sandboxes.permission_id	\N	4.21.1	\N	\N	6058079158
v47.00-001	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.573297	109	EXECUTED	8:14bf2732687c04256e9c036ba142aa93	sql	Added 0.47.0 -- set base-type to type/JSON for JSON database-types for postgres and mysql	\N	4.21.1	\N	\N	6058079158
v47.00-002	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.575581	110	EXECUTED	8:963690f41f487b122464277c627823f6	addColumn tableName=metabase_field	Added 0.47.0 - Add json_unfolding column to metabase_field	\N	4.21.1	\N	\N	6058079158
v47.00-003	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.577253	111	EXECUTED	8:97bccdf5e9bcdfacd1c315fa1342c167	sql	Added 0.47.0 - Populate metabase_field.json_unfolding based on base_type	\N	4.21.1	\N	\N	6058079158
v47.00-004	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.579367	112	EXECUTED	8:58ad79be7de00e413da51fab3c8beea0	addColumn tableName=metabase_field	Added 0.47.0 - Add auto_incremented to metabase_field	\N	4.21.1	\N	\N	6058079158
v47.00-005	winlost	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.581494	113	EXECUTED	8:ccf53f27a551fd0799d0103bd65cca99	addColumn tableName=report_dashboard	Added 0.47.0 - Add auto_apply_filters to dashboard	\N	4.21.1	\N	\N	6058079158
v47.00-006	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.588454	114	EXECUTED	8:b63ff10d3d121bed42eece1ae3dbb177	createTable tableName=dashboard_tab	Added 0.47.0 - Add dashboard_tab table	\N	4.21.1	\N	\N	6058079158
v47.00-007	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.590474	115	EXECUTED	8:e9f7d6b18d65be6fde07c0b5471b8760	addColumn tableName=report_dashboardcard	Added 0.47.0 -- add report_dashboardcard.dashboard_tab_id	\N	4.21.1	\N	\N	6058079158
v47.00-008	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.592507	116	EXECUTED	8:e37c88d202007bd3e6a72b6404d1b0e9	addForeignKeyConstraint baseTableName=report_dashboardcard, constraintName=fk_report_dashboardcard_ref_dashboard_tab_id, referencedTableName=dashboard_tab	Added 0.47.0 -- add report_dashboardcard.dashboard_tab_id fk constraint	\N	4.21.1	\N	\N	6058079158
v47.00-009	qwef	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.594223	117	EXECUTED	8:398124b0dd4dd6e117cdc1378152469b	sql	Added 0.47.0 - Replace user google_auth and ldap_auth columns with sso_source values	\N	4.21.1	\N	\N	6058079158
v47.00-010	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.59727	118	EXECUTED	8:3c4f9fc116fbced18c50952def65b3e0	modifyDataType columnName=name, tableName=metabase_table	Added 0.47.0 - Make metabase_table.name long enough for H2 names	\N	4.21.1	\N	\N	6058079158
v47.00-011	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.599197	119	EXECUTED	8:148b982debddfa511cb45b87179b8c46	modifyDataType columnName=display_name, tableName=metabase_table	Added 0.47.0 - Make metabase_table.display_name long enough for H2 names	\N	4.21.1	\N	\N	6058079158
v47.00-012	qwef	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.601155	120	EXECUTED	8:bf19ef077bc6bc517c515dd78ca46e3b	dropColumn columnName=google_auth, tableName=core_user	Added 0.47.0 - Replace user google_auth and ldap_auth columns with sso_source values	\N	4.21.1	\N	\N	6058079158
v47.00-013	qwef	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.603102	121	EXECUTED	8:044aec6d07049e3c5a45830797189ab0	sql	Added 0.47.0 - Replace user google_auth and ldap_auth columns with sso_source values	\N	4.21.1	\N	\N	6058079158
v47.00-014	qwef	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.604838	122	EXECUTED	8:6a973f3198ad4596ecade95e61b35991	dropColumn columnName=ldap_auth, tableName=core_user	Added 0.47.0 - Replace user google_auth and ldap_auth columns with sso_source values	\N	4.21.1	\N	\N	6058079158
v47.00-015	escherize	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.606884	123	EXECUTED	8:d2d5eea99db75e656709006b3a7749f0	addColumn tableName=metabase_database	added 0.47.0 - Add is_audit to metabase_database	\N	4.21.1	\N	\N	6058079158
v47.00-016	calherres	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.614406	124	EXECUTED	8:62290f0389eb2a17170a9c0351ac8a85	customChange	Added 0.47.0 - Migrate the report_card.visualization_settings.column_settings field refs from legacy format	\N	4.21.1	\N	\N	6058079158
v47.00-018	dpsutton	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.621797	125	EXECUTED	8:7bacd2f60393eebd3bebcfdb0e952ecd	createTable tableName=model_index	Indexed Entities information table	\N	4.21.1	\N	\N	6058079158
v47.00-019	dpsutton	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.625528	126	EXECUTED	8:7a5589d70c80b3ffc99a85722f440a91	createTable tableName=model_index_value	Indexed Entities values table	\N	4.21.1	\N	\N	6058079158
v47.00-020	dpsutton	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.627857	127	EXECUTED	8:d32a4cf7b37f012a7db74628cdde48df	addUniqueConstraint constraintName=unique_model_index_value_model_index_id_model_pk, tableName=model_index_value	Add unique constraint on index_id and pk	\N	4.21.1	\N	\N	6058079158
v47.00-023	dpsutton	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.630289	128	EXECUTED	8:5d9e81c3e950afad66cb5e9e823b1f03	createIndex indexName=idx_model_index_model_id, tableName=model_index	Added 0.47.0 -- model_index index	\N	4.21.1	\N	\N	6058079158
v47.00-024	dpsutton	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.632595	129	EXECUTED	8:3079db8d91e54ff2b41050f7dab27936	addForeignKeyConstraint baseTableName=model_index, constraintName=fk_model_index_model_id, referencedTableName=report_card	Added 0.47.0 -- model_index foriegn key to report_card	\N	4.21.1	\N	\N	6058079158
v47.00-025	dpsutton	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.63489	130	EXECUTED	8:6889e314a2016c9bc017a358b81ed24e	addForeignKeyConstraint baseTableName=model_index_value, constraintName=fk_model_index_value_model_id, referencedTableName=model_index	Added 0.47.0 -- model_index_value foriegn key to model_index	\N	4.21.1	\N	\N	6058079158
v47.00-026	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.640567	131	EXECUTED	8:acf279edf538ee29a4ea9103d809b3da	createTable tableName=connection_impersonations	Added 0.47.0 - New table for connection impersonation policies	\N	4.21.1	\N	\N	6058079158
v47.00-027	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.645398	132	EXECUTED	8:c720f3de8feed35e592c0ca9b9975a18	customChange	Added 0.47.0 - Migrate field_ref in report_card.result_metadata from legacy format	\N	4.21.1	\N	\N	6058079158
v47.00-028	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.648745	133	EXECUTED	8:f38598170766acaaa8fd3b20ef683372	customChange	Added 0.47.0 - Add join-alias to the report_card.visualization_settings.column_settings field refs	\N	4.21.1	\N	\N	6058079158
v47.00-029	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.654773	134	EXECUTED	8:c7625e5018087e915e547f9318b2b8f5	customChange	Added 0.47.0 - Stack cards vertically for dashboard with tabs on downgrade	\N	4.21.1	\N	\N	6058079158
v47.00-030	escherize	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.657134	135	EXECUTED	8:7919d959008457419a09fd3275d3ed00	addColumn tableName=collection	Added 0.47.0 - Type column for collections for instance-analytics	\N	4.21.1	\N	\N	6058079158
v47.00-031	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.659934	136	EXECUTED	8:ad9bdb62df65cf26a5a9892a82779ea7	sql; sql	Added 0.47.0 - migrate dashboard grid size from 18 to 24	\N	4.21.1	\N	\N	6058079158
v47.00-032	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.664194	137	EXECUTED	8:98d2edfc9caa3a03d307aa965a3b51c9	customChange	Added 0.47.0 - migrate dashboard grid size from 18 to 24 for revisions	\N	4.21.1	\N	\N	6058079158
v47.00-033	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.667515	138	EXECUTED	8:c4a38673bf2a702e807a2074c0d0b719	customChange	Added 0.47.0 - Migrate field refs in visualization_settings.column_settings keys from legacy format	\N	4.21.1	\N	\N	6058079158
v47.00-034	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.670616	139	EXECUTED	8:bb77d686c5c204e480a1da5fcfb518e2	customChange	Added 0.47.0 - Add join-alias to the visualization_settings.column_settings field refs in card revisions	\N	4.21.1	\N	\N	6058079158
v47.00-035	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.67245	140	EXECUTED	8:aeafa7ff310f799eb3fb2e14640a9e06	dropForeignKeyConstraint baseTableName=implicit_action, constraintName=fk_implicit_action_action_id	Added 0.47.0 - Drop foreign key constraint on implicit_action.action_id	\N	4.21.1	\N	\N	6058079158
v47.00-036	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.675025	141	EXECUTED	8:e815729b6ebfd4799743b249409558aa	addPrimaryKey constraintName=pk_implicit_action, tableName=implicit_action	Added 0.47.0 - Set primary key to action_id for implicit_action table	\N	4.21.1	\N	\N	6058079158
v47.00-037	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.677018	142	EXECUTED	8:58c705a18bb3441e3ed5d1167ec64fcb	addForeignKeyConstraint baseTableName=implicit_action, constraintName=fk_implicit_action_action_id, referencedTableName=action	Added 0.47.0 - Add foreign key constraint on implicit_action.action_id	\N	4.21.1	\N	\N	6058079158
v47.00-043	calherres	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.681114	143	EXECUTED	8:5e030b73be03e7cd8b19a5a46f9b2a4c	customChange	Added 0.47.0 - Migrate report_dashboardcard.visualization_settings.column_settings field refs from legacy format	\N	4.21.1	\N	\N	6058079158
v47.00-044	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.684628	144	EXECUTED	8:1828d1bd8e2da6eec14ca61e6c01a56f	customChange	Added 0.47.0 - Add join-alias to the report_dashboardcard.visualization_settings.column_settings field refs	\N	4.21.1	\N	\N	6058079158
v47.00-045	calherres	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.687429	145	EXECUTED	8:d7f479a389877010f5af9dc7ec859b51	customChange	Added 0.47.0 - Migrate dashboard revision dashboard cards' visualization_settings.column_settings field refs from legacy format	\N	4.21.1	\N	\N	6058079158
v47.00-046	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.690524	146	EXECUTED	8:1e43c8712a5b36809a3c3fa9933a523c	customChange	Added 0.47.0 - Add join-alias to dashboard revision dashboard cards' visualization_settings.column_settings field refs	\N	4.21.1	\N	\N	6058079158
v47.00-050	tsmacdonald	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.692851	147	EXECUTED	8:a5d516f2b5ea92f401387646b49a9950	addColumn tableName=metabase_table	Added 0.47.0 - table.is_upload	\N	4.21.1	\N	\N	6058079158
v47.00-051	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.695549	148	EXECUTED	8:83a8b7ad58b2deb0732e671db51fa608	dropForeignKeyConstraint baseTableName=connection_impersonations, constraintName=fk_conn_impersonation_db_id	Added 0.47.0 - Drop foreign key constraint on connection_impersonations.db_id	\N	4.21.1	\N	\N	6058079158
v47.00-052	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.697468	149	EXECUTED	8:d170bef8f707027360cf08fb55e91452	dropForeignKeyConstraint baseTableName=connection_impersonations, constraintName=fk_conn_impersonation_group_id	Added 0.47.0 - Drop foreign key constraint on connection_impersonations.group_id	\N	4.21.1	\N	\N	6058079158
v47.00-053	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.69994	150	EXECUTED	8:3b52631c2c82b88043b840391c7d9ef0	createIndex indexName=idx_conn_impersonations_db_id, tableName=connection_impersonations	Added 0.47.0 -- connection_impersonations index for db_id column	\N	4.21.1	\N	\N	6058079158
v47.00-054	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.702079	151	EXECUTED	8:5404d7e3781f0dfcc984676ea434c842	createIndex indexName=idx_conn_impersonations_group_id, tableName=connection_impersonations	Added 0.47.0 -- connection_impersonations index for group_id column	\N	4.21.1	\N	\N	6058079158
v47.00-055	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.704562	152	EXECUTED	8:295c4477995058b93eba2857090eb6f6	addUniqueConstraint constraintName=conn_impersonation_unique_group_id_db_id, tableName=connection_impersonations	Added 0.47.0 - unique constraint for connection impersonations	\N	4.21.1	\N	\N	6058079158
v47.00-056	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.706721	153	EXECUTED	8:bd965141f770a65982ecebab51a565e9	addForeignKeyConstraint baseTableName=connection_impersonations, constraintName=fk_conn_impersonation_db_id, referencedTableName=metabase_database	Added 0.47.0 - re-add foreign key constraint on connection_impersonations.db_id	\N	4.21.1	\N	\N	6058079158
v47.00-057	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.708882	154	EXECUTED	8:fe79acdba9db58709b6fffbb7aac2844	addForeignKeyConstraint baseTableName=connection_impersonations, constraintName=fk_conn_impersonation_group_id, referencedTableName=permissions_group	Added 0.47.0 - re-add foreign key constraint on connection_impersonations.group_id	\N	4.21.1	\N	\N	6058079158
v47.00-058	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.711984	155	EXECUTED	8:05731b3e62deb09c64b60bc10031d206	dropColumn columnName=entity_id, tableName=parameter_card	Drop parameter_card.entity_id	\N	4.21.1	\N	\N	6058079158
v47.00-059	piranha	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.713659	156	EXECUTED	8:123cf42eed168444f88418f071d2730f	dropNotNullConstraint columnName=entity_id, tableName=dashboard_tab	Drops not null from dashboard_tab.entity_id since it breaks drop-entity-ids command	\N	4.21.1	\N	\N	6058079158
v48.00-001	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.72168	157	EXECUTED	8:c38ceb502af7907aed614f17da6c3f80	customChange	Added 0.47.0 - Migrate database.options to database.settings	\N	4.21.1	\N	\N	6058079158
v48.00-002	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.724454	158	EXECUTED	8:deceb81591f51f2d7253976f247e36cc	dropColumn columnName=options, tableName=metabase_database	Added 0.47.0 - drop metabase_database.options	\N	4.21.1	\N	\N	6058079158
v48.00-003	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.728989	159	EXECUTED	8:da33cde0f1f93eed56c0f6d9ac2007df	dropTable tableName=computation_job_result	Added 0.48.0 - drop computation_job_result table	\N	4.21.1	\N	\N	6058079158
v48.00-004	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.732478	160	EXECUTED	8:d0b1d7cc179c332b7e31f065325b7275	dropTable tableName=computation_job	Added 0.48.0 - drop computation_job table	\N	4.21.1	\N	\N	6058079158
v48.00-005	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.73478	161	EXECUTED	8:a570f2e1d90a302bc207c00e3776eaaf	addColumn tableName=query_execution	Added 0.48.0 - Add query_execution.action_id	\N	4.21.1	\N	\N	6058079158
v48.00-006	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.737532	162	EXECUTED	8:cf1413241565a186bf98eece35d519bf	createIndex indexName=idx_query_execution_action_id, tableName=query_execution	Added 0.48.0 - Index query_execution.action_id	\N	4.21.1	\N	\N	6058079158
v48.00-007	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.739767	163	EXECUTED	8:15d05ceba05e5b7d25d351fb6ec5b100	addColumn tableName=revision	Added 0.48.0 - Add revision.most_recent	\N	4.21.1	\N	\N	6058079158
v48.00-008	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.742122	164	EXECUTED	8:c0a512701d6dfd5cc1c4a689919be074	sql; sql	Set revision.most_recent = true for latest revisions	\N	4.21.1	\N	\N	6058079158
v48.00-009	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.746989	165	EXECUTED	8:dfd90256380263274ea7f5cc0c5ed413	createTable tableName=table_privileges	Added 0.48.0 - Create table_privileges table	\N	4.21.1	\N	\N	6058079158
v48.00-010	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.747754	166	MARK_RAN	8:da6117039b6e0249b710cc3160af982d	sql	Remove ON UPDATE for revision.timestamp on mysql, mariadb	\N	4.21.1	\N	\N	6058079158
v48.00-011	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.750531	167	EXECUTED	8:65ef87949a7e9555fabaf69069806ee0	createIndex indexName=idx_revision_most_recent, tableName=revision	Index revision.most_recent	\N	4.21.1	\N	\N	6058079158
v48.00-013	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.780079	168	EXECUTED	8:145eb766e2d49e95f31d8a08df8ff776	sql	Index unindexed FKs for postgres	\N	4.21.1	\N	\N	6058079158
v48.00-014	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.782848	169	EXECUTED	8:b2c1361f1dc14c2390a1dc25a4a86311	createIndex indexName=idx_table_privileges_table_id, tableName=table_privileges	Added 0.48.0 - Create table_privileges.table_id index	\N	4.21.1	\N	\N	6058079158
v48.00-015	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.785383	170	EXECUTED	8:6f58cf60c8048bb39bbf6128058ff85e	createIndex indexName=idx_table_privileges_role, tableName=table_privileges	Added 0.48.0 - Create table_privileges.role index	\N	4.21.1	\N	\N	6058079158
v48.00-016	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.787332	171	EXECUTED	8:ea2cb901edad5cf3a1250bdd2a9b0866	modifyDataType columnName=slug, tableName=collection	Added 0.48.0 - Change the type of collection.slug to varchar(510)	\N	4.21.1	\N	\N	6058079158
v48.00-018	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.791702	172	EXECUTED	8:efae52e7403f39c1458f53e885b4393d	createTable tableName=recent_views	Add new recent_views table	\N	4.21.1	\N	\N	6058079158
v48.00-019	nemanjaglumac	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.793714	173	EXECUTED	8:c3866a4b7cfbb49d4b626dc2fd750935	dropColumn columnName=color, tableName=collection	Collection color is removed in 0.48.0	\N	4.21.1	\N	\N	6058079158
v48.00-020	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.796186	174	EXECUTED	8:2c410019e1834304131ff57278003d35	createIndex indexName=idx_recent_views_user_id, tableName=recent_views	Added 0.48.0 - Create recent_views.user_id index	\N	4.21.1	\N	\N	6058079158
v48.00-021	piranha	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.798151	175	EXECUTED	8:a1543239e39c70dc9bab3bbc303242b1	addColumn tableName=report_card	Cards store Metabase version used to create them	\N	4.21.1	\N	\N	6058079158
v48.00-022	johnswanson	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.80316	176	EXECUTED	8:0f034d06b1ad5336c3c81b0d22cde259	customChange	Migrate migrate-click-through to a custom migration	\N	4.21.1	\N	\N	6058079158
v48.00-023	piranha	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.822634	177	EXECUTED	8:f18e5e053b508aab0bdd8c4bf1d7de4b	customChange	Data migration migrate-remove-admin-from-group-mapping-if-needed	\N	4.21.1	\N	\N	6058079158
v48.00-024	piranha	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.825869	178	EXECUTED	8:fab2a51d73c66cea059d55a6fea8bb2f	dropTable tableName=data_migrations	All data migrations were transferred to custom_migrations!	\N	4.21.1	\N	\N	6058079158
v48.00-025	piranha	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.828262	179	EXECUTED	8:a2fa9ab0913b9e4b97dff91f973344d6	addColumn tableName=revision	Revisions store Metabase version used to create them	\N	4.21.1	\N	\N	6058079158
v48.00-026	lbrdnk	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.829939	180	EXECUTED	8:7c8330e861c16997780a9b0881144b26	update tableName=metabase_field	Set semantic_type with value type/Number to null (#18754)	\N	4.21.1	\N	\N	6058079158
v48.00-027	qnkhuat	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.83158	181	EXECUTED	8:41eae119438c45330e25e193f5936f6b	sql	No op migration	\N	4.21.1	\N	\N	6058079158
v48.00-028	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.837204	182	EXECUTED	8:818119252c2e7877bbf46aec40fab160	createTable tableName=audit_log	Add new audit_log table	\N	4.21.1	\N	\N	6058079158
v48.00-029	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.853899	183	EXECUTED	8:1994760ab0950e7f591c40e887295e1a	sqlFile path=instance_analytics_views/audit_log/v1/postgres-audit_log.sql; sqlFile path=instance_analytics_views/audit_log/v1/mysql-audit_log.sql; sqlFile path=instance_analytics_views/audit_log/v1/h2-audit_log.sql	Added 0.48.0 - new view v_audit_log	\N	4.21.1	\N	\N	6058079158
v48.00-030	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.85938	184	EXECUTED	8:965d6479698fe55f2f6799be552b5edb	sqlFile path=instance_analytics_views/content/v1/postgres-content.sql; sqlFile path=instance_analytics_views/content/v1/mysql-content.sql; sqlFile path=instance_analytics_views/content/v1/h2-content.sql	Added 0.48.0 - new view v_content	\N	4.21.1	\N	\N	6058079158
v48.00-031	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.862509	185	EXECUTED	8:721bedb0dd362793a1a216cf3e552f3b	sqlFile path=instance_analytics_views/dashboardcard/v1/dashboardcard.sql	Added 0.48.0 - new view v_dashboardcard	\N	4.21.1	\N	\N	6058079158
v48.00-032	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.865363	186	EXECUTED	8:64d52462def7bb6981a3b6a40d42e67e	sqlFile path=instance_analytics_views/group_members/v1/group_members.sql	Added 0.48.0 - new view v_group_members	\N	4.21.1	\N	\N	6058079158
v48.00-033	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.869004	187	EXECUTED	8:7ac57373a0fba4bd9613c242702c863d	sqlFile path=instance_analytics_views/subscriptions/v1/postgres-subscriptions.sql; sqlFile path=instance_analytics_views/subscriptions/v1/mysql-subscriptions.sql; sqlFile path=instance_analytics_views/subscriptions/v1/h2-subscriptions.sql	Added 0.48.0 - new view v_subscriptions for postgres	\N	4.21.1	\N	\N	6058079158
v48.00-034	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.871924	188	EXECUTED	8:1c268d93ce69eaee11e3ecdf9951449a	sqlFile path=instance_analytics_views/users/v1/postgres-users.sql; sqlFile path=instance_analytics_views/users/v1/mysql-users.sql; sqlFile path=instance_analytics_views/users/v1/h2-users.sql	Added 0.48.0 - new view v_users	\N	4.21.1	\N	\N	6058079158
v48.00-035	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.875581	189	EXECUTED	8:c0276764af3e1b4b5b0c4e5fdc979e60	sqlFile path=instance_analytics_views/alerts/v1/postgres-alerts.sql; sqlFile path=instance_analytics_views/alerts/v1/mysql-alerts.sql; sqlFile path=instance_analytics_views/alerts/v1/h2-alerts.sql	Added 0.48.0 - new view v_alerts	\N	4.21.1	\N	\N	6058079158
v48.00-036	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.878625	190	EXECUTED	8:8a35e1bdf0738ccac5da8062d6671dd0	sqlFile path=instance_analytics_views/databases/v1/databases.sql	Added 0.48.0 - new view v_databases	\N	4.21.1	\N	\N	6058079158
v48.00-037	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.881046	191	EXECUTED	8:a4b6ebd594b4663a6a888211f36ce6c3	sqlFile path=instance_analytics_views/fields/v1/postgres-fields.sql; sqlFile path=instance_analytics_views/fields/v1/mysql-fields.sql; sqlFile path=instance_analytics_views/fields/v1/h2-fields.sql	Added 0.48.0 - new view v_fields	\N	4.21.1	\N	\N	6058079158
v48.00-038	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.883807	192	EXECUTED	8:a24f4bcd3336e79d1c8ef33ab81c0db3	sqlFile path=instance_analytics_views/query_log/v1/postgres-query_log.sql; sqlFile path=instance_analytics_views/query_log/v1/mysql-query_log.sql; sqlFile path=instance_analytics_views/query_log/v1/h2-query_log.sql	Added 0.48.0 - new view v_query_log	\N	4.21.1	\N	\N	6058079158
v48.00-039	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.886912	193	EXECUTED	8:b43481a01df86830c4cb1adb8189d400	sqlFile path=instance_analytics_views/tables/v1/postgres-tables.sql; sqlFile path=instance_analytics_views/tables/v1/mysql-tables.sql; sqlFile path=instance_analytics_views/tables/v1/h2-tables.sql	Added 0.48.0 - new view v_tables	\N	4.21.1	\N	\N	6058079158
v48.00-040	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.889305	194	EXECUTED	8:b8842eac1c7cba6e997d4d288306e36c	sqlFile path=instance_analytics_views/view_log/v1/postgres-view_log.sql; sqlFile path=instance_analytics_views/view_log/v1/mysql-view_log.sql; sqlFile path=instance_analytics_views/view_log/v1/h2-view_log.sql	Added 0.48.0 - new view v_view_log	\N	4.21.1	\N	\N	6058079158
v48.00-045	qwef	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.891521	195	EXECUTED	8:874f14ae26d742448d8dd2b47dc8aa3d	addColumn tableName=query_execution	Added 0.48.0 - add is_sandboxed to query_execution	\N	4.21.1	\N	\N	6058079158
v48.00-046	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.903896	196	EXECUTED	8:4bb11295621890202e066cd15de93a52	sqlFile path=instance_analytics_views/indexes/v1/postgres-indexes.sql; sqlFile path=instance_analytics_views/indexes/v1/mysql-indexes.sql; sqlFile path=instance_analytics_views/indexes/v1/mariadb-indexes.sql; sqlFile path=instance_analytics_views/...	Added 0.48.0 - new indexes to optimize audit v2 queries	\N	4.21.1	\N	\N	6058079158
v48.00-047	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.905999	197	EXECUTED	8:2b18bed0e1ae18dd7b26a0770dac54c0	dropForeignKeyConstraint baseTableName=recent_views, constraintName=fk_recent_views_ref_user_id	Drop foreign key on recent_views so that it can be recreated with onDelete policy	\N	4.21.1	\N	\N	6058079158
v48.00-048	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.908165	198	EXECUTED	8:872e632a8ffa42eb2969f77823e8bfc8	addForeignKeyConstraint baseTableName=recent_views, constraintName=fk_recent_views_ref_user_id, referencedTableName=core_user	Add foreign key on recent_views with onDelete CASCADE	\N	4.21.1	\N	\N	6058079158
v48.00-049	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.910372	199	EXECUTED	8:853f2a24c53470bf2d9e85b1246bab7b	sql; sql; sql	Migrate data from activity to audit_log	\N	4.21.1	\N	\N	6058079158
v48.00-050	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.911639	200	EXECUTED	8:d41d8cd98f00b204e9800998ecf8427e	empty	Added 0.48.0 - no-op migration to remove audit DB and collection on downgrade	\N	4.21.1	\N	\N	6058079158
v48.00-051	calherries	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.913867	201	EXECUTED	8:5f5d1fd5b6153a6613511fd8f765737d	sql; sql	Migrate metabase_field when the fk target field is inactive	\N	4.21.1	\N	\N	6058079158
v48.00-053	johnswanson	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.917057	202	EXECUTED	8:8b41162170f6d712871b2ee9221adc1a	modifyDataType columnName=model, tableName=activity	Increase length of `activity.model` to fit longer model names	\N	4.21.1	\N	\N	6058079158
v48.00-054	escherize	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.918425	203	EXECUTED	8:d41d8cd98f00b204e9800998ecf8427e	empty	Added 0.48.0 - no-op migration to remove Internal Metabase User on downgrade	\N	4.21.1	\N	\N	6058079158
v48.00-055	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.921044	204	EXECUTED	8:fd36092d50982fbf31ce16757c16e47e	sqlFile path=instance_analytics_views/tasks/v1/postgres-tasks.sql; sqlFile path=instance_analytics_views/tasks/v1/mysql-tasks.sql; sqlFile path=instance_analytics_views/tasks/v1/h2-tasks.sql	Added 0.48.0 - new view v_tasks	\N	4.21.1	\N	\N	6058079158
v48.00-056	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.92301	205	EXECUTED	8:229e8058cc8309053b344bbfdb042405	addColumn tableName=view_log	Adjust view_log schema for Audit Log v2	\N	4.21.1	\N	\N	6058079158
v48.00-057	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.9253	206	EXECUTED	8:8e32153df1031ea12005d58ce1674873	addColumn tableName=view_log	Adjust view_log schema for Audit Log v2	\N	4.21.1	\N	\N	6058079158
v48.00-059	qwef	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.927304	207	EXECUTED	8:fd8b5031dbbf69c4588ce2699eb20f33	sql	Update the namespace of any audit collections that are already loaded	\N	4.21.1	\N	\N	6058079158
v48.00-060	noahmoss	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.929734	208	EXECUTED	8:a59027f5494811033ce77cd0ba05d6bd	createIndex indexName=idx_task_history_started_at, tableName=task_history	Added 0.48.0 - task_history.started_at	\N	4.21.1	\N	\N	6058079158
v48.00-061	piranha	migrations/001_update_migrations.yaml	2024-01-24 01:01:20.932183	209	EXECUTED	8:9b9939aad6ca12f7cf4dfa85dae6eb1c	addColumn tableName=query_execution	Adds query_execution.cache_hash -> query_cache.query_hash	\N	4.21.1	\N	\N	6058079158
\.


--
-- Data for Name: databasechangeloglock; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.databasechangeloglock (id, locked, lockgranted, lockedby) FROM stdin;
1	f	\N	\N
\.


--
-- Data for Name: dependency; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.dependency (id, model, model_id, dependent_on_model, dependent_on_id, created_at) FROM stdin;
\.


--
-- Data for Name: dimension; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.dimension (id, field_id, name, type, human_readable_field_id, created_at, updated_at, entity_id) FROM stdin;
\.


--
-- Data for Name: http_action; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.http_action (action_id, template, response_handle, error_handle) FROM stdin;
\.


--
-- Data for Name: implicit_action; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.implicit_action (action_id, kind) FROM stdin;
\.


--
-- Data for Name: label; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.label (id, name, slug, icon) FROM stdin;
\.


--
-- Data for Name: login_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.login_history (id, "timestamp", user_id, session_id, device_id, device_description, ip_address) FROM stdin;
1	2024-01-24 01:39:05.716661+00	1	48987b52-5445-4cde-970f-d8830b6975b5	1334017d-31ed-404c-9bf7-796d891a7676	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36	192.168.65.1
\.


--
-- Data for Name: metabase_database; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.metabase_database (id, created_at, updated_at, name, description, details, engine, is_sample, is_full_sync, points_of_interest, caveats, metadata_sync_schedule, cache_field_values_schedule, timezone, is_on_demand, auto_run_queries, refingerprint, cache_ttl, initial_sync_status, creator_id, settings, dbms_version, is_audit) FROM stdin;
1	2024-01-24 01:01:21.076865+00	2024-01-24 01:38:44.045173+00	Sample Database	Some example data for you to play around with as you embark on your Metabase journey.	{"db":"file:/home/plugins/sample-database.db;USER=GUEST;PASSWORD=guest"}	h2	t	t	You can find all sorts of different joinable tables ranging from products to people to reviews here.	You probably don't want to use this for your business-critical analyses, but hey, it's your world, we're just living in it.	0 10 * * * ? *	0 0 5 * * ? *	UTC	f	t	\N	\N	complete	\N	\N	{"flavor":"H2","version":"2.1.214 (2022-06-13)","semantic-version":[2,1]}	f
2	2024-01-24 01:40:32.100636+00	2024-01-24 01:40:32.81572+00	MyDuckDB	\N	{"database_file":"/container/directory/my.db","read_only":true}	duckdb	f	t	\N	\N	0 14 * * * ? *	0 0 21 * * ? *	\N	f	t	\N	\N	complete	1	\N	{"flavor":"DuckDB","version":"v0.9.1","semantic-version":[1,0]}	f
\.


--
-- Data for Name: metabase_field; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.metabase_field (id, created_at, updated_at, name, base_type, semantic_type, active, description, preview_display, "position", table_id, parent_id, display_name, visibility_type, fk_target_field_id, last_analyzed, points_of_interest, caveats, fingerprint, fingerprint_version, database_type, has_field_values, settings, database_position, custom_position, effective_type, coercion_strategy, nfc_path, database_required, json_unfolding, database_is_auto_increment) FROM stdin;
7	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:21.764566+00	ID	type/BigInteger	type/PK	t	\N	t	0	7	\N	ID	normal	\N	\N	\N	\N	\N	0	BIGINT	\N	\N	0	0	type/BigInteger	\N	\N	t	f	f
20	2024-01-24 01:01:21.809437+00	2024-01-24 01:01:21.809437+00	ID	type/BigInteger	type/PK	t	\N	t	0	3	\N	ID	normal	\N	\N	\N	\N	\N	0	BIGINT	\N	\N	0	0	type/BigInteger	\N	\N	t	f	f
24	2024-01-24 01:01:21.83189+00	2024-01-24 01:01:21.83189+00	ID	type/BigInteger	type/PK	t	\N	t	0	4	\N	ID	normal	\N	\N	\N	\N	\N	0	BIGINT	\N	\N	0	0	type/BigInteger	\N	\N	t	f	f
31	2024-01-24 01:01:21.853611+00	2024-01-24 01:01:21.853611+00	ID	type/BigInteger	type/PK	t	\N	t	0	6	\N	ID	normal	\N	\N	\N	\N	\N	0	BIGINT	\N	\N	0	0	type/BigInteger	\N	\N	t	f	f
35	2024-01-24 01:01:21.853611+00	2024-01-24 01:01:41.219084+00	EXPECTED_INVOICE	type/Boolean	type/Category	t	\N	t	3	6	\N	Expected Invoice	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2,"nil%":0.0}}	5	BOOLEAN	auto-list	\N	3	0	type/Boolean	\N	\N	f	f	f
37	2024-01-24 01:01:21.87817+00	2024-01-24 01:01:22.108697+00	ID	type/BigInteger	type/PK	t	This is a unique ID for the product. It is also called the “Invoice number” or “Confirmation number” in customer facing emails and screens.	t	0	2	\N	ID	normal	\N	\N	\N	\N	\N	0	BIGINT	\N	\N	0	0	type/BigInteger	\N	\N	f	f	t
33	2024-01-24 01:01:21.853611+00	2024-01-24 01:01:41.219084+00	DATE_RECEIVED	type/DateTime	\N	t	\N	t	5	6	\N	Date Received	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":714,"nil%":0.0},"type":{"type/DateTime":{"earliest":"2020-09-30T00:00:00Z","latest":"2027-05-02T00:00:00Z"}}}	5	TIMESTAMP	\N	\N	5	0	type/DateTime	\N	\N	f	f	f
46	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:22.165549+00	ID	type/BigInteger	type/PK	t	A unique identifier given to each user.	t	0	5	\N	ID	normal	\N	\N	\N	\N	\N	0	BIGINT	\N	\N	0	0	type/BigInteger	\N	\N	f	f	t
5	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	ACTIVE_SUBSCRIPTION	type/Boolean	type/Category	t	\N	t	11	7	\N	Active Subscription	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2,"nil%":0.0}}	5	BOOLEAN	auto-list	\N	11	0	type/Boolean	\N	\N	f	f	f
14	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	TRIAL_CONVERTED	type/Boolean	type/Category	t	\N	t	10	7	\N	Trial Converted	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2,"nil%":0.0}}	5	BOOLEAN	auto-list	\N	10	0	type/Boolean	\N	\N	f	f	f
62	2024-01-24 01:01:21.936268+00	2024-01-24 01:01:22.206201+00	ID	type/BigInteger	type/PK	t	The numerical product number. Only used internally. All external communication should use the title or EAN.	t	0	1	\N	ID	normal	\N	\N	\N	\N	\N	0	BIGINT	\N	\N	0	0	type/BigInteger	\N	\N	f	f	t
16	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	LONGITUDE	type/Float	type/Longitude	t	\N	t	14	7	\N	Longitude	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2484,"nil%":4.008016032064128E-4},"type":{"type/Number":{"min":-175.06667,"q1":-55.495929410727236,"q3":28.627359769389155,"max":176.21667,"sd":68.51011002740533,"avg":2.6042336031796345}}}	5	DOUBLE PRECISION	\N	\N	14	0	type/Float	\N	\N	f	f	f
68	2024-01-24 01:01:21.955554+00	2024-01-24 01:01:22.238871+00	ID	type/BigInteger	type/PK	t	A unique internal identifier for the review. Should not be used externally.	t	0	8	\N	ID	normal	\N	\N	\N	\N	\N	0	BIGINT	\N	\N	0	0	type/BigInteger	\N	\N	f	f	t
27	2024-01-24 01:01:21.83189+00	2024-01-24 01:01:41.697126+00	BODY	type/Text	\N	t	\N	f	6	4	\N	Body	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":642,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":438.15264797507785}}}	5	CHARACTER LARGE OBJECT	\N	\N	6	0	type/Text	\N	\N	f	f	f
34	2024-01-24 01:01:21.853611+00	2024-01-24 01:01:41.219084+00	PAYMENT	type/Float	\N	t	\N	t	2	6	\N	Payment	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":707,"nil%":0.0},"type":{"type/Number":{"min":13.7,"q1":233.1870107122195,"q3":400.5965814842149,"max":33714.6,"sd":763.7961603932441,"avg":519.4153400000004}}}	5	DOUBLE PRECISION	\N	\N	2	0	type/Float	\N	\N	f	f	f
44	2024-01-24 01:01:21.87817+00	2024-01-24 01:01:41.219084+00	SUBTOTAL	type/Float	\N	t	The raw, pre-tax cost of the order. Note that this might be different in the future from the product price due to promotions, credits, etc.	t	3	2	\N	Subtotal	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":340,"nil%":0.0},"type":{"type/Number":{"min":15.691943673970439,"q1":49.74894519060184,"q3":105.42965746993103,"max":148.22900526552291,"sd":32.53705013056317,"avg":77.01295465356547}}}	5	DOUBLE PRECISION	\N	\N	3	0	type/Float	\N	\N	f	f	f
47	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	NAME	type/Text	type/Name	t	The name of the user who owns an account	t	4	5	\N	Name	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2499,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":13.532}}}	5	CHARACTER VARYING	\N	\N	4	0	type/Text	\N	\N	f	f	f
51	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	EMAIL	type/Text	type/Email	t	The contact email for the account.	t	2	5	\N	Email	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2500,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":1.0,"percent-state":0.0,"average-length":24.1824}}}	5	CHARACTER VARYING	\N	\N	2	0	type/Text	\N	\N	f	f	f
41	2024-01-24 01:01:21.87817+00	2024-01-24 01:01:41.219084+00	CREATED_AT	type/DateTime	type/CreationTimestamp	t	The date and time an order was submitted.	t	7	2	\N	Created At	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":10001,"nil%":0.0},"type":{"type/DateTime":{"earliest":"2022-04-30T18:56:13.352Z","latest":"2026-04-19T14:07:15.657Z"}}}	5	TIMESTAMP	\N	\N	7	0	type/DateTime	\N	\N	f	f	f
4	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	PLAN	type/Text	type/Category	t	\N	t	4	7	\N	Plan	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":3,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":5.1062124248497}}}	5	CHARACTER VARYING	auto-list	\N	4	0	type/Text	\N	\N	f	f	f
8	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	LEGACY_PLAN	type/Boolean	type/Category	t	\N	t	12	7	\N	Legacy Plan	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2,"nil%":0.0}}	5	BOOLEAN	auto-list	\N	12	0	type/Boolean	\N	\N	f	f	f
12	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	EMAIL	type/Text	type/Email	t	\N	t	1	7	\N	Email	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2494,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":1.0,"percent-state":0.0,"average-length":28.185971943887775}}}	5	CHARACTER VARYING	\N	\N	1	0	type/Text	\N	\N	f	f	f
2	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	TRIAL_ENDS_AT	type/DateTime	\N	t	\N	t	8	7	\N	Trial Ends At	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":1712,"nil%":0.001202404809619238},"type":{"type/DateTime":{"earliest":"2020-09-30T12:00:00Z","latest":"2031-10-25T12:00:00Z"}}}	5	TIMESTAMP	\N	\N	8	0	type/DateTime	\N	\N	f	f	f
42	2024-01-24 01:01:21.87817+00	2024-01-24 01:01:41.219084+00	TOTAL	type/Float	\N	t	The total billed amount.	t	5	2	\N	Total	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":4426,"nil%":0.0},"type":{"type/Number":{"min":8.93914247937167,"q1":51.34535490743823,"q3":110.29428389265787,"max":159.34900526552292,"sd":34.26469575709948,"avg":80.35871658771228}}}	5	DOUBLE PRECISION	\N	\N	5	0	type/Float	\N	\N	f	f	f
53	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	PASSWORD	type/Text	\N	t	This is the salted password of the user. It should not be visible	t	3	5	\N	Password	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2500,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":36.0}}}	5	CHARACTER VARYING	\N	\N	3	0	type/Text	\N	\N	f	f	f
59	2024-01-24 01:01:21.936268+00	2024-01-24 01:01:41.219084+00	PRICE	type/Float	\N	t	The list price of the product. Note that this is not always the price the product sold for due to discounts, promotions, etc.	t	5	1	\N	Price	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":170,"nil%":0.0},"type":{"type/Number":{"min":15.691943673970439,"q1":37.25154462926434,"q3":75.45898071609447,"max":98.81933684368194,"sd":21.711481557852057,"avg":55.74639966792074}}}	5	DOUBLE PRECISION	\N	\N	5	0	type/Float	\N	\N	f	f	f
18	2024-01-24 01:01:21.809437+00	2024-01-24 01:01:41.219084+00	PAGE_URL	type/Text	type/URL	t	\N	t	4	3	\N	Page URL	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":6,"nil%":0.1302},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":22.2674}}}	5	CHARACTER VARYING	auto-list	\N	4	0	type/Text	\N	\N	f	f	f
39	2024-01-24 01:01:21.87817+00	2024-01-24 01:01:41.219084+00	QUANTITY	type/Integer	type/Quantity	t	Number of products bought.	t	8	2	\N	Quantity	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":62,"nil%":0.0},"type":{"type/Number":{"min":0.0,"q1":1.755882607764982,"q3":4.882654507928044,"max":100.0,"sd":4.214258386403798,"avg":3.7015}}}	5	INTEGER	auto-list	\N	8	0	type/Integer	\N	\N	f	f	f
22	2024-01-24 01:01:21.809437+00	2024-01-24 01:01:41.219084+00	TIMESTAMP	type/DateTime	\N	t	\N	t	3	3	\N	Timestamp	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":8576,"nil%":0.0},"type":{"type/DateTime":{"earliest":"2022-03-15T00:18:25Z","latest":"2022-04-11T20:24:02Z"}}}	5	TIMESTAMP	\N	\N	3	0	type/DateTime	\N	\N	f	f	f
25	2024-01-24 01:01:21.83189+00	2024-01-24 01:01:41.219084+00	ACCOUNT_ID	type/BigInteger	type/FK	t	\N	t	1	4	\N	Account ID	normal	7	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":642,"nil%":0.0}}	5	BIGINT	\N	\N	1	0	type/BigInteger	\N	\N	f	f	f
29	2024-01-24 01:01:21.83189+00	2024-01-24 01:01:41.219084+00	DATE_RECEIVED	type/DateTime	\N	t	\N	t	3	4	\N	Date Received	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":576,"nil%":0.0},"type":{"type/DateTime":{"earliest":"2020-11-20T00:00:00Z","latest":"2031-12-01T00:00:00Z"}}}	5	TIMESTAMP	\N	\N	3	0	type/DateTime	\N	\N	f	f	f
32	2024-01-24 01:01:21.853611+00	2024-01-24 01:01:41.219084+00	ACCOUNT_ID	type/BigInteger	type/FK	t	\N	t	1	6	\N	Account ID	normal	7	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":1449,"nil%":0.0}}	5	BIGINT	\N	\N	1	0	type/BigInteger	\N	\N	f	f	f
58	2024-01-24 01:01:21.936268+00	2024-01-24 01:01:41.219084+00	CATEGORY	type/Text	type/Category	t	The type of product, valid values include: Doohicky, Gadget, Gizmo and Widget	t	3	1	\N	Category	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":4,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":6.375}}}	5	CHARACTER VARYING	auto-list	\N	3	0	type/Text	\N	\N	f	f	f
54	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	ZIP	type/Text	type/ZipCode	t	The postal code of the account’s billing address	t	10	5	\N	Zip	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2234,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":5.0}}}	5	CHARACTER	\N	\N	10	0	type/Text	\N	\N	f	f	f
60	2024-01-24 01:01:21.936268+00	2024-01-24 01:01:41.219084+00	VENDOR	type/Text	type/Company	t	The source of the product.	t	4	1	\N	Vendor	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":200,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":20.6}}}	5	CHARACTER VARYING	auto-list	\N	4	0	type/Text	\N	\N	f	f	f
49	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	BIRTH_DATE	type/Date	\N	t	The date of birth of the user	t	9	5	\N	Birth Date	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2308,"nil%":0.0},"type":{"type/DateTime":{"earliest":"1958-04-26","latest":"2000-04-03"}}}	5	DATE	\N	\N	9	0	type/Date	\N	\N	f	f	f
21	2024-01-24 01:01:21.809437+00	2024-01-24 01:01:41.219084+00	ACCOUNT_ID	type/BigInteger	type/FK	t	\N	t	1	3	\N	Account ID	normal	7	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":589,"nil%":0.0}}	5	BIGINT	\N	\N	1	0	type/BigInteger	\N	\N	f	f	f
63	2024-01-24 01:01:21.936268+00	2024-01-24 01:01:41.219084+00	EAN	type/Text	\N	t	The international article number. A 13 digit number uniquely identifying the product.	t	1	1	\N	Ean	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":200,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":13.0}}}	5	CHARACTER	auto-list	\N	1	0	type/Text	\N	\N	f	f	f
64	2024-01-24 01:01:21.936268+00	2024-01-24 01:01:41.219084+00	CREATED_AT	type/DateTime	type/CreationTimestamp	t	The date the product was added to our catalog.	t	7	1	\N	Created At	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":200,"nil%":0.0},"type":{"type/DateTime":{"earliest":"2022-04-26T19:29:55.147Z","latest":"2025-04-15T13:34:19.931Z"}}}	5	TIMESTAMP	\N	\N	7	0	type/DateTime	\N	\N	f	f	f
66	2024-01-24 01:01:21.955554+00	2024-01-24 01:01:41.219084+00	RATING	type/Integer	type/Score	t	The rating (on a scale of 1-5) the user left.	t	3	8	\N	Rating	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":5,"nil%":0.0},"type":{"type/Number":{"min":1.0,"q1":3.54744353181696,"q3":4.764807071650455,"max":5.0,"sd":1.0443899855660577,"avg":3.987410071942446}}}	5	SMALLINT	auto-list	\N	3	0	type/Integer	\N	\N	f	f	f
69	2024-01-24 01:01:21.955554+00	2024-01-24 01:01:41.219084+00	CREATED_AT	type/DateTime	type/CreationTimestamp	t	The day and time a review was written by a user.	t	5	8	\N	Created At	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":1112,"nil%":0.0},"type":{"type/DateTime":{"earliest":"2022-06-03T00:37:05.818Z","latest":"2026-04-19T14:15:25.677Z"}}}	5	TIMESTAMP	\N	\N	5	0	type/DateTime	\N	\N	f	f	f
71	2024-01-24 01:01:21.955554+00	2024-01-24 01:01:41.219084+00	PRODUCT_ID	type/Integer	type/FK	t	The product the review was for	t	1	8	\N	Product ID	normal	62	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":176,"nil%":0.0}}	5	INTEGER	\N	\N	1	0	type/Integer	\N	\N	f	f	f
1	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	SEATS	type/Integer	\N	t	\N	t	6	7	\N	Seats	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":102,"nil%":0.0},"type":{"type/Number":{"min":1.0,"q1":2.4309856865966593,"q3":10.553778422458695,"max":1325.0,"sd":51.198301031505444,"avg":16.21763527054108}}}	5	INTEGER	auto-list	\N	6	0	type/Integer	\N	\N	f	f	f
3	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	CANCELED_AT	type/DateTime	type/CancelationTimestamp	t	\N	t	9	7	\N	Canceled At	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2021,"nil%":0.1859719438877756},"type":{"type/DateTime":{"earliest":"2020-10-01T15:43:40Z","latest":"2032-06-03T14:01:15Z"}}}	5	TIMESTAMP	\N	\N	9	0	type/DateTime	\N	\N	f	f	f
6	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	LATITUDE	type/Float	type/Latitude	t	\N	t	13	7	\N	Latitude	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2472,"nil%":4.008016032064128E-4},"type":{"type/Number":{"min":-48.75,"q1":19.430679334308675,"q3":47.24585743676113,"max":69.23111,"sd":23.492041679980137,"avg":31.35760681046913}}}	5	DOUBLE PRECISION	\N	\N	13	0	type/Float	\N	\N	f	f	f
9	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	FIRST_NAME	type/Text	type/Name	t	\N	t	2	7	\N	First Name	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":1687,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.001603206412825651,"average-length":5.997595190380761}}}	5	CHARACTER VARYING	\N	\N	2	0	type/Text	\N	\N	f	f	f
23	2024-01-24 01:01:21.83189+00	2024-01-24 01:01:41.219084+00	RATING	type/Integer	type/Score	t	\N	t	4	4	\N	Rating	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":5,"nil%":0.0},"type":{"type/Number":{"min":1.0,"q1":2.7545289729206877,"q3":4.004191340512663,"max":5.0,"sd":0.8137255616667736,"avg":3.3629283489096573}}}	5	SMALLINT	auto-list	\N	4	0	type/Integer	\N	\N	f	f	f
55	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	CITY	type/Text	type/City	t	The city of the account’s billing address	t	5	5	\N	City	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":1966,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.002,"average-length":8.284}}}	5	CHARACTER VARYING	\N	\N	5	0	type/Text	\N	\N	f	f	f
40	2024-01-24 01:01:21.87817+00	2024-01-24 01:01:41.219084+00	PRODUCT_ID	type/Integer	type/FK	t	The product ID. This is an internal identifier for the product, NOT the SKU.	t	2	2	\N	Product ID	normal	62	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":200,"nil%":0.0}}	5	INTEGER	\N	\N	2	0	type/Integer	\N	\N	f	f	f
43	2024-01-24 01:01:21.87817+00	2024-01-24 01:01:41.219084+00	USER_ID	type/Integer	type/FK	t	The id of the user who made this order. Note that in some cases where an order was created on behalf of a customer who phoned the order in, this might be the employee who handled the request.	t	1	2	\N	User ID	normal	46	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":929,"nil%":0.0}}	5	INTEGER	\N	\N	1	0	type/Integer	\N	\N	f	f	f
52	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	ADDRESS	type/Text	\N	t	The street address of the account’s billing address	t	1	5	\N	Address	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2490,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":20.85}}}	5	CHARACTER VARYING	\N	\N	1	0	type/Text	\N	\N	f	f	f
38	2024-01-24 01:01:21.87817+00	2024-01-24 01:01:41.219084+00	TAX	type/Float	\N	t	This is the amount of local and federal taxes that are collected on the purchase. Note that other governmental fees on some products are not included here, but instead are accounted for in the subtotal.	t	4	2	\N	Tax	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":797,"nil%":0.0},"type":{"type/Number":{"min":0.0,"q1":2.273340386603857,"q3":5.337275338216307,"max":11.12,"sd":2.3206651358900316,"avg":3.8722100000000004}}}	5	DOUBLE PRECISION	\N	\N	4	0	type/Float	\N	\N	f	f	f
67	2024-01-24 01:01:21.955554+00	2024-01-24 01:01:41.219084+00	BODY	type/Text	type/Description	t	The review the user left. Limited to 2000 characters.	t	4	8	\N	Body	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":1112,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":177.41996402877697}}}	5	CHARACTER VARYING	\N	\N	4	0	type/Text	\N	\N	f	f	f
70	2024-01-24 01:01:21.955554+00	2024-01-24 01:01:41.219084+00	REVIEWER	type/Text	\N	t	The user who left the review	t	2	8	\N	Reviewer	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":1076,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.001798561151079137,"average-length":9.972122302158274}}}	5	CHARACTER VARYING	\N	\N	2	0	type/Text	\N	\N	f	f	f
11	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	SOURCE	type/Text	type/Source	t	\N	t	5	7	\N	Source	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":5,"nil%":0.3346693386773547},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":4.4705410821643286}}}	5	CHARACTER VARYING	auto-list	\N	5	0	type/Text	\N	\N	f	f	f
13	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	CREATED_AT	type/DateTime	type/CreationTimestamp	t	\N	t	7	7	\N	Created At	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2495,"nil%":0.0},"type":{"type/DateTime":{"earliest":"2020-09-15T16:11:50Z","latest":"2031-10-10T19:14:48Z"}}}	5	TIMESTAMP	\N	\N	7	0	type/DateTime	\N	\N	f	f	f
15	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	COUNTRY	type/Text	type/Country	t	\N	t	15	7	\N	Country	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":134,"nil%":8.016032064128256E-4},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.1130260521042084,"average-length":1.9983967935871743}}}	5	CHARACTER	auto-list	\N	15	0	type/Text	\N	\N	f	f	f
17	2024-01-24 01:01:21.809437+00	2024-01-24 01:01:41.219084+00	EVENT	type/Text	type/Category	t	\N	t	2	3	\N	Event	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":11.3906}}}	5	CHARACTER VARYING	auto-list	\N	2	0	type/Text	\N	\N	f	f	f
19	2024-01-24 01:01:21.809437+00	2024-01-24 01:01:41.219084+00	BUTTON_LABEL	type/Text	type/Category	t	\N	t	5	3	\N	Button Label	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":6,"nil%":0.8698},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":1.0552}}}	5	CHARACTER VARYING	auto-list	\N	5	0	type/Text	\N	\N	f	f	f
36	2024-01-24 01:01:21.87817+00	2024-01-24 01:01:41.219084+00	DISCOUNT	type/Float	type/Discount	t	Discount amount.	t	6	2	\N	Discount	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":701,"nil%":0.898},"type":{"type/Number":{"min":0.17088996672584322,"q1":2.9786226681458743,"q3":7.338187788658235,"max":61.69684269960571,"sd":3.053663125001991,"avg":5.161255547580326}}}	5	DOUBLE PRECISION	\N	\N	6	0	type/Float	\N	\N	f	f	f
48	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	STATE	type/Text	type/State	t	The state or province of the account’s billing address	t	7	5	\N	State	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":49,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":1.0,"average-length":2.0}}}	5	CHARACTER	auto-list	\N	7	0	type/Text	\N	\N	f	f	f
56	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	CREATED_AT	type/DateTime	type/CreationTimestamp	t	The date the user record was created. Also referred to as the user’s "join date"	t	12	5	\N	Created At	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2500,"nil%":0.0},"type":{"type/DateTime":{"earliest":"2022-04-19T21:35:18.752Z","latest":"2025-04-19T14:06:27.3Z"}}}	5	TIMESTAMP	\N	\N	12	0	type/DateTime	\N	\N	f	f	f
50	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	LONGITUDE	type/Float	type/Longitude	t	This is the longitude of the user on sign-up. It might be updated in the future to the last seen location.	t	6	5	\N	Longitude	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2491,"nil%":0.0},"type":{"type/Number":{"min":-166.5425726,"q1":-101.58350792373135,"q3":-84.65289348288829,"max":-67.96735199999999,"sd":15.399698968175663,"avg":-95.18741780363999}}}	5	DOUBLE PRECISION	\N	\N	6	0	type/Float	\N	\N	f	f	f
65	2024-01-24 01:01:21.936268+00	2024-01-24 01:01:41.219084+00	TITLE	type/Text	type/Title	t	The name of the product as it should be displayed to customers.	t	2	1	\N	Title	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":199,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":21.495}}}	5	CHARACTER VARYING	auto-list	\N	2	0	type/Text	\N	\N	f	f	f
10	2024-01-24 01:01:21.764566+00	2024-01-24 01:01:41.219084+00	LAST_NAME	type/Text	type/Name	t	\N	t	3	7	\N	Last Name	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":473,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":6.536673346693386}}}	5	CHARACTER VARYING	auto-list	\N	3	0	type/Text	\N	\N	f	f	f
26	2024-01-24 01:01:21.83189+00	2024-01-24 01:01:41.219084+00	EMAIL	type/Text	type/Email	t	\N	t	2	4	\N	Email	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":642,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":1.0,"percent-state":0.0,"average-length":28.327102803738317}}}	5	CHARACTER VARYING	auto-list	\N	2	0	type/Text	\N	\N	f	f	f
28	2024-01-24 01:01:21.83189+00	2024-01-24 01:01:41.219084+00	RATING_MAPPED	type/Text	type/Category	t	\N	t	5	4	\N	Rating Mapped	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":5,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":6.453271028037383}}}	5	CHARACTER VARYING	auto-list	\N	5	0	type/Text	\N	\N	f	f	f
30	2024-01-24 01:01:21.853611+00	2024-01-24 01:01:41.219084+00	PLAN	type/Text	type/Category	t	\N	t	4	6	\N	Plan	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":3,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":5.2931}}}	5	CHARACTER VARYING	auto-list	\N	4	0	type/Text	\N	\N	f	f	f
45	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	SOURCE	type/Text	type/Source	t	The channel through which we acquired this user. Valid values include: Affiliate, Facebook, Google, Organic and Twitter	t	8	5	\N	Source	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":5,"nil%":0.0},"type":{"type/Text":{"percent-json":0.0,"percent-url":0.0,"percent-email":0.0,"percent-state":0.0,"average-length":7.4084}}}	5	CHARACTER VARYING	auto-list	\N	8	0	type/Text	\N	\N	f	f	f
57	2024-01-24 01:01:21.908375+00	2024-01-24 01:01:41.219084+00	LATITUDE	type/Float	type/Latitude	t	This is the latitude of the user on sign-up. It might be updated in the future to the last seen location.	t	11	5	\N	Latitude	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":2491,"nil%":0.0},"type":{"type/Number":{"min":25.775827,"q1":35.302705923023126,"q3":43.773802584662,"max":70.6355001,"sd":6.390832341883712,"avg":39.87934670484002}}}	5	DOUBLE PRECISION	\N	\N	11	0	type/Float	\N	\N	f	f	f
61	2024-01-24 01:01:21.936268+00	2024-01-24 01:01:41.219084+00	RATING	type/Float	type/Score	t	The average rating users have given the product. This ranges from 1 - 5	t	6	1	\N	Rating	normal	\N	2024-01-24 01:01:41.219084+00	\N	\N	{"global":{"distinct-count":23,"nil%":0.0},"type":{"type/Number":{"min":0.0,"q1":3.5120465053408525,"q3":4.216124969497314,"max":5.0,"sd":1.3605488657451452,"avg":3.4715}}}	5	DOUBLE PRECISION	\N	\N	6	0	type/Float	\N	\N	f	f	f
72	2024-01-24 01:40:32.564645+00	2024-01-24 01:40:32.564645+00	group_id	type/Text	\N	t	\N	t	3	9	\N	Group ID	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	3	0	type/Text	\N	\N	f	f	f
73	2024-01-24 01:40:32.564645+00	2024-01-24 01:40:32.564645+00	updated_at	type/Float	\N	t	\N	t	4	9	\N	Updated At	normal	\N	\N	\N	\N	\N	0	DOUBLE	\N	\N	4	0	type/Float	\N	\N	f	f	f
74	2024-01-24 01:40:32.564645+00	2024-01-24 01:40:32.564645+00	uuid	type/Text	\N	t	\N	t	0	9	\N	UUID	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	0	0	type/Text	\N	\N	f	f	f
75	2024-01-24 01:40:32.564645+00	2024-01-24 01:40:32.564645+00	namespace	type/Text	\N	t	\N	t	2	9	\N	Namespace	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	2	0	type/Text	\N	\N	f	f	f
76	2024-01-24 01:40:32.564645+00	2024-01-24 01:40:32.564645+00	key	type/Text	\N	t	\N	t	1	9	\N	Key	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	1	0	type/Text	\N	\N	f	f	f
77	2024-01-24 01:40:32.599304+00	2024-01-24 01:40:32.599304+00	session_id	type/Text	\N	t	\N	t	1	10	\N	Session ID	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	1	0	type/Text	\N	\N	f	f	f
78	2024-01-24 01:40:32.599304+00	2024-01-24 01:40:32.599304+00	message	type/Text	\N	t	\N	t	2	10	\N	Message	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	2	0	type/Text	\N	\N	f	f	f
79	2024-01-24 01:40:32.599304+00	2024-01-24 01:40:32.599304+00	id	type/Integer	\N	t	\N	t	0	10	\N	ID	normal	\N	\N	\N	\N	\N	0	INTEGER	\N	\N	0	0	type/Integer	\N	\N	f	f	f
81	2024-01-24 01:40:32.652199+00	2024-01-24 01:40:32.652199+00	cluster_type	type/Text	\N	t	\N	t	3	12	\N	Cluster Type	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	3	0	type/Text	\N	\N	f	f	f
82	2024-01-24 01:40:32.652199+00	2024-01-24 01:40:32.652199+00	cluster_value	type/Text	\N	t	\N	t	4	12	\N	Cluster Value	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	4	0	type/Text	\N	\N	f	f	f
83	2024-01-24 01:40:32.652199+00	2024-01-24 01:40:32.652199+00	updated_at	type/DateTime	\N	t	\N	t	2	12	\N	Updated At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP WITH TIME ZONE	\N	\N	2	0	type/DateTime	\N	\N	f	f	f
84	2024-01-24 01:40:32.652199+00	2024-01-24 01:40:32.652199+00	name	type/Text	\N	t	\N	t	6	12	\N	Name	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	6	0	type/Text	\N	\N	f	f	f
85	2024-01-24 01:40:32.652199+00	2024-01-24 01:40:32.652199+00	id	type/UUID	\N	t	\N	t	0	12	\N	ID	normal	\N	\N	\N	\N	\N	0	UUID	\N	\N	0	0	type/UUID	\N	\N	f	f	f
86	2024-01-24 01:40:32.652199+00	2024-01-24 01:40:32.652199+00	value	type/Text	\N	t	\N	t	7	12	\N	Value	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	7	0	type/Text	\N	\N	f	f	f
87	2024-01-24 01:40:32.652199+00	2024-01-24 01:40:32.652199+00	external_entity	type/Text	\N	t	\N	t	5	12	\N	External Entity	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	5	0	type/Text	\N	\N	f	f	f
88	2024-01-24 01:40:32.652199+00	2024-01-24 01:40:32.652199+00	created_at	type/DateTime	\N	t	\N	t	1	12	\N	Created At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP WITH TIME ZONE	\N	\N	1	0	type/DateTime	\N	\N	f	f	f
89	2024-01-24 01:40:32.671713+00	2024-01-24 01:40:32.671713+00	cluster_type	type/Text	\N	t	\N	t	3	13	\N	Cluster Type	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	3	0	type/Text	\N	\N	f	f	f
90	2024-01-24 01:40:32.671713+00	2024-01-24 01:40:32.671713+00	updated_at	type/DateTime	\N	t	\N	t	6	13	\N	Updated At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP	\N	\N	6	0	type/DateTime	\N	\N	f	f	f
91	2024-01-24 01:40:32.671713+00	2024-01-24 01:40:32.671713+00	cluster_value	type/Text	\N	t	\N	t	4	13	\N	Cluster Value	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	4	0	type/Text	\N	\N	f	f	f
92	2024-01-24 01:40:32.671713+00	2024-01-24 01:40:32.671713+00	name	type/Text	\N	t	\N	t	0	13	\N	Name	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	0	0	type/Text	\N	\N	f	f	f
93	2024-01-24 01:40:32.671713+00	2024-01-24 01:40:32.671713+00	created_at	type/DateTime	\N	t	\N	t	5	13	\N	Created At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP	\N	\N	5	0	type/DateTime	\N	\N	f	f	f
94	2024-01-24 01:40:32.671713+00	2024-01-24 01:40:32.671713+00	uuid	type/UUID	\N	t	\N	t	2	13	\N	UUID	normal	\N	\N	\N	\N	\N	0	UUID	\N	\N	2	0	type/UUID	\N	\N	f	f	f
95	2024-01-24 01:40:32.671713+00	2024-01-24 01:40:32.671713+00	cmetadata	type/Text	\N	t	\N	t	1	13	\N	Cmetadata	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	1	0	type/Text	\N	\N	f	f	f
96	2024-01-24 01:40:32.687904+00	2024-01-24 01:40:32.687904+00	user_uuid	type/UUID	\N	t	\N	t	2	14	\N	User UUID	normal	\N	\N	\N	\N	\N	0	UUID	\N	\N	2	0	type/UUID	\N	\N	f	f	f
97	2024-01-24 01:40:32.687904+00	2024-01-24 01:40:32.687904+00	state	type/Text	\N	t	\N	t	4	14	\N	State	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	4	0	type/Text	\N	\N	f	f	f
98	2024-01-24 01:40:32.687904+00	2024-01-24 01:40:32.687904+00	access_code	type/Text	\N	t	\N	t	3	14	\N	Access Code	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	3	0	type/Text	\N	\N	f	f	f
99	2024-01-24 01:40:32.687904+00	2024-01-24 01:40:32.687904+00	uuid	type/UUID	\N	t	\N	t	0	14	\N	UUID	normal	\N	\N	\N	\N	\N	0	UUID	\N	\N	0	0	type/UUID	\N	\N	f	f	f
100	2024-01-24 01:40:32.687904+00	2024-01-24 01:40:32.687904+00	created_at	type/DateTime	\N	t	\N	t	1	14	\N	Created At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP WITH TIME ZONE	\N	\N	1	0	type/DateTime	\N	\N	f	f	f
101	2024-01-24 01:40:32.701361+00	2024-01-24 01:40:32.701361+00	value	type/Text	\N	t	\N	t	3	15	\N	Value	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	3	0	type/Text	\N	\N	f	f	f
102	2024-01-24 01:40:32.701361+00	2024-01-24 01:40:32.701361+00	name	type/Text	\N	t	\N	t	2	15	\N	Name	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	2	0	type/Text	\N	\N	f	f	f
103	2024-01-24 01:40:32.701361+00	2024-01-24 01:40:32.701361+00	id	type/BigInteger	\N	t	\N	t	0	15	\N	ID	normal	\N	\N	\N	\N	\N	0	BIGINT	\N	\N	0	0	type/BigInteger	\N	\N	f	f	f
104	2024-01-24 01:40:32.701361+00	2024-01-24 01:40:32.701361+00	created_at	type/DateTime	\N	t	\N	t	1	15	\N	Created At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP WITH TIME ZONE	\N	\N	1	0	type/DateTime	\N	\N	f	f	f
105	2024-01-24 01:40:32.714212+00	2024-01-24 01:40:32.714212+00	updated_at	type/DateTime	\N	t	\N	t	2	16	\N	Updated At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP WITH TIME ZONE	\N	\N	2	0	type/DateTime	\N	\N	f	f	f
106	2024-01-24 01:40:32.714212+00	2024-01-24 01:40:32.714212+00	id	type/UUID	\N	t	\N	t	0	16	\N	ID	normal	\N	\N	\N	\N	\N	0	UUID	\N	\N	0	0	type/UUID	\N	\N	f	f	f
107	2024-01-24 01:40:32.714212+00	2024-01-24 01:40:32.714212+00	created_at	type/DateTime	\N	t	\N	t	1	16	\N	Created At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP WITH TIME ZONE	\N	\N	1	0	type/DateTime	\N	\N	f	f	f
108	2024-01-24 01:40:32.73088+00	2024-01-24 01:40:32.73088+00	integration_json	type/Text	\N	t	\N	t	1	17	\N	Integration Json	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	1	0	type/Text	\N	\N	f	f	f
109	2024-01-24 01:40:32.73088+00	2024-01-24 01:40:32.73088+00	cluster_type	type/Text	\N	t	\N	t	5	17	\N	Cluster Type	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	5	0	type/Text	\N	\N	f	f	f
110	2024-01-24 01:40:32.73088+00	2024-01-24 01:40:32.73088+00	external_entity	type/Text	\N	t	\N	t	2	17	\N	External Entity	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	2	0	type/Text	\N	\N	f	f	f
111	2024-01-24 01:40:32.73088+00	2024-01-24 01:40:32.73088+00	updated_at	type/DateTime	\N	t	\N	t	4	17	\N	Updated At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP	\N	\N	4	0	type/DateTime	\N	\N	f	f	f
112	2024-01-24 01:40:32.73088+00	2024-01-24 01:40:32.73088+00	id	type/UUID	\N	t	\N	t	0	17	\N	ID	normal	\N	\N	\N	\N	\N	0	UUID	\N	\N	0	0	type/UUID	\N	\N	f	f	f
113	2024-01-24 01:40:32.73088+00	2024-01-24 01:40:32.73088+00	created_at	type/DateTime	\N	t	\N	t	3	17	\N	Created At	normal	\N	\N	\N	\N	\N	0	TIMESTAMP	\N	\N	3	0	type/DateTime	\N	\N	f	f	f
114	2024-01-24 01:40:32.73088+00	2024-01-24 01:40:32.73088+00	cluster_value	type/Text	\N	t	\N	t	6	17	\N	Cluster Value	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	6	0	type/Text	\N	\N	f	f	f
115	2024-01-24 01:40:32.746454+00	2024-01-24 01:40:32.746454+00	uuid	type/UUID	\N	t	\N	t	5	18	\N	UUID	normal	\N	\N	\N	\N	\N	0	UUID	\N	\N	5	0	type/UUID	\N	\N	f	f	f
116	2024-01-24 01:40:32.746454+00	2024-01-24 01:40:32.746454+00	collection_id	type/UUID	\N	t	\N	t	0	18	\N	Collection ID	normal	\N	\N	\N	\N	\N	0	UUID	\N	\N	0	0	type/UUID	\N	\N	f	f	f
117	2024-01-24 01:40:32.746454+00	2024-01-24 01:40:32.746454+00	document	type/Text	\N	t	\N	t	2	18	\N	Document	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	2	0	type/Text	\N	\N	f	f	f
118	2024-01-24 01:40:32.746454+00	2024-01-24 01:40:32.746454+00	custom_id	type/Text	\N	t	\N	t	4	18	\N	Custom ID	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	4	0	type/Text	\N	\N	f	f	f
119	2024-01-24 01:40:32.746454+00	2024-01-24 01:40:32.746454+00	embedding	type/Text	\N	t	\N	t	1	18	\N	Embedding	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	1	0	type/Text	\N	\N	f	f	f
120	2024-01-24 01:40:32.746454+00	2024-01-24 01:40:32.746454+00	cmetadata	type/Text	\N	t	\N	t	3	18	\N	Cmetadata	normal	\N	\N	\N	\N	\N	0	VARCHAR	\N	\N	3	0	type/Text	\N	\N	f	f	f
\.


--
-- Data for Name: metabase_fieldvalues; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.metabase_fieldvalues (id, created_at, updated_at, "values", human_readable_values, field_id, has_more_values, type, hash_key, last_used_at) FROM stdin;
1	2024-01-24 01:01:41.42348+00	2024-01-24 01:01:41.42348+00	[false,true]	\N	5	f	full	\N	2024-01-24 01:01:41.42348+00
2	2024-01-24 01:01:41.440685+00	2024-01-24 01:01:41.440685+00	[false,true]	\N	14	f	full	\N	2024-01-24 01:01:41.440685+00
3	2024-01-24 01:01:41.457469+00	2024-01-24 01:01:41.457469+00	["Basic","Business","Premium"]	\N	4	f	full	\N	2024-01-24 01:01:41.457469+00
4	2024-01-24 01:01:41.481729+00	2024-01-24 01:01:41.481729+00	[false,true]	\N	8	f	full	\N	2024-01-24 01:01:41.481729+00
5	2024-01-24 01:01:41.503371+00	2024-01-24 01:01:41.503371+00	[1,3,5,8,10,12,14,16,19,21,23,25,27,30,32,34,36,38,41,43,45,47,49,52,54,56,58,60,63,65,67,69,71,74,76,78,80,82,85,87,89,91,93,96,98,102,104,107,109,111,113,115,120,122,124,129,131,133,135,137,140,142,148,155,162,168,173,175,177,179,186,188,190,197,201,203,208,210,219,223,236,252,254,261,267,269,274,289,331,335,351,390,393,401,423,426,450,503,522,639,668,1325]	\N	1	f	full	\N	2024-01-24 01:01:41.503371+00
6	2024-01-24 01:01:41.519403+00	2024-01-24 01:01:41.519403+00	[null,"Facebook","Google","Invite","Twitter"]	\N	11	f	full	\N	2024-01-24 01:01:41.519403+00
7	2024-01-24 01:01:41.536568+00	2024-01-24 01:01:41.536568+00	[null,"AE","AF","AG","AL","AM","AR","AT","AU","BA","BD","BE","BF","BG","BN","BO","BR","BT","BW","BY","CA","CD","CH","CI","CL","CM","CN","CO","CR","CU","CV","CY","CZ","DE","DK","DO","DZ","EE","EG","ES","ET","FI","FR","GB","GE","GM","GN","GR","GT","HN","HR","HT","HU","ID","IE","IL","IN","IQ","IR","IT","JM","JO","JP","KE","KH","KI","KM","KR","KZ","LA","LC","LK","LR","LS","LT","LU","LV","LY","MA","MD","MG","MK","ML","MM","MT","MU","MW","MX","MY","NE","NG","NI","NL","NO","NZ","PA","PE","PH","PK","PL","PT","PW","PY","RO","RS","RU","RW","SA","SE","SI","SK","SL","SM","SN","SO","SV","SY","SZ","TH","TJ","TN","TO","TR","TZ","UA","UG","US","UZ","VE","VN","YE","ZA","ZM","ZW"]	\N	15	f	full	\N	2024-01-24 01:01:41.536568+00
8	2024-01-24 01:01:41.552162+00	2024-01-24 01:01:41.552162+00	["Abbott","Abernathy","Abshire","Adams","Altenwerth","Anderson","Ankunding","Armstrong","Auer","Aufderhar","Bahringer","Bailey","Balistreri","Barrows","Bartell","Bartoletti","Barton","Batz","Bauch","Baumbach","Bayer","Beahan","Beatty","Bechtelar","Becker","Bednar","Beer","Beier","Berge","Bergnaum","Bergstrom","Bernhard","Bernier","Bins","Blanda","Blick","Block","Bode","Boehm","Bogan","Bogisich","Borer","Bosco","Botsford","Boyer","Boyle","Bradtke","Brakus","Braun","Breitenberg","Brekke","Brown","Bruen","Buckridge","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Conn","Connelly","Conroy","Considine","Corkery","Cormier","Corwin","Cremin","Crist","Crona","Cronin","Crooks","Cruickshank","Cummerata","Cummings","D'Amore","Dach","Daniel","Dare","Daugherty","Davis","Deckow","Denesik","Dibbert","Dickens","Dicki","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","DuBuque","Durgan","Ebert","Effertz","Eichmann","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feest","Feil","Ferry","Fisher","Flatley","Frami","Franecki","Friesen","Fritsch","Funk","Gaylord","Gerhold","Gerlach","Gibson","Gislason","Gleason","Gleichner","Glover","Goldner","Goodwin","Gorczany","Gottlieb","Goyette","Grady","Graham","Grant","Green","Greenfelder","Greenholt","Grimes","Gulgowski","Gusikowski","Gutkowski","Gutmann","Haag","Hackett","Hagenes","Hahn","Haley","Halvorson","Hamill","Hammes","Hand","Hane","Hansen","Harber","Harris","Hartmann","Harvey","Hauck","Hayes","Heaney","Heathcote","Hegmann","Heidenreich","Heller","Herman","Hermann","Hermiston","Herzog","Hessel","Hettinger","Hickle","Hilll","Hills","Hilpert","Hintz","Hirthe","Hodkiewicz","Hoeger","Homenick","Hoppe","Howe","Howell","Hudson","Huel","Huels","Hyatt","Jacobi","Jacobs","Jacobson","Jakubowski","Jaskolski","Jast","Jenkins","Jerde","Jewess","Johns","Johnson","Johnston","Jones","Kassulke","Kautzer","Keebler","Keeling","Kemmer","Kerluke","Kertzmann","Kessler","Kiehn","Kihn","Kilback","King","Kirlin","Klein","Kling","Klocko","Koch","Koelpin","Koepp","Kohler","Konopelski","Koss","Kovacek","Kozey","Krajcik","Kreiger","Kris","Kshlerin","Kub","Kuhic","Kuhlman","Kuhn","Kulas","Kunde","Kunze","Kuphal","Kutch","Kuvalis","Labadie","Lakin","Lang","Langosh","Langworth","Larkin","Larson","Leannon","Lebsack","Ledner","Leffler","Legros","Lehner","Lemke","Lesch","Leuschke","Lind","Lindgren","Littel","Little","Lockman","Lowe","Lubowitz","Lueilwitz","Luettgen","Lynch","Macejkovic","Maggio","Mann","Mante","Marks","Marquardt","Marvin","Mayer","Mayert","McClure","McCullough","McDermott","McGlynn","McKenzie","McLaughlin","Medhurst","Mertz","Metz","Miller","Mills","Mitchell","Moen","Mohr","Monahan","Moore","Morar","Morissette","Mosciski","Mraz","Mueller","Muller","Murazik","Murphy","Murray","Nader","Nicolas","Nienow","Nikolaus","Nitzsche","Nolan","O'Connell","O'Conner","O'Hara","O'Keefe","O'Kon","O'Reilly","Oberbrunner","Okuneva","Olson","Ondricka","Orn","Ortiz","Osinski","Pacocha","Padberg","Pagac","Parisian","Parker","Paucek","Pfannerstill","Pfeffer","Pollich","Pouros","Powlowski","Predovic","Price","Prohaska","Prosacco","Purdy","Quigley","Quitzon","Rath","Ratke","Rau","Raynor","Reichel","Reichert","Reilly","Reinger","Rempel","Renner","Reynolds","Rice","Rippin","Ritchie","Robel","Roberts","Rodriguez","Rogahn","Rohan","Rolfson","Romaguera","Roob","Rosenbaum","Rowe","Ruecker","Runolfsdottir","Runolfsson","Runte","Russel","Rutherford","Ryan","Sanford","Satterfield","Sauer","Sawayn","Schaden","Schaefer","Schamberger","Schiller","Schimmel","Schinner","Schmeler","Schmidt","Schmitt","Schneider","Schoen","Schowalter","Schroeder","Schulist","Schultz","Schumm","Schuppe","Schuster","Senger","Shanahan","Shields","Simonis","Sipes","Skiles","Smith","Smitham","Spencer","Spinka","Sporer","Stamm","Stanton","Stark","Stehr","Steuber","Stiedemann","Stokes","Stoltenberg","Stracke","Streich","Stroman","Strosin","Swaniawski","Swift","Terry","Thiel","Thompson","Tillman","Torp","Torphy","Towne","Toy","Trantow","Tremblay","Treutel","Tromp","Turcotte","Turner","Ullrich","Upton","Vandervort","Veum","Volkman","Von","VonRueden","Waelchi","Walker","Walsh","Walter","Ward","Waters","Watsica","Weber","Wehner","Weimann","Weissnat","Welch","West","White","Wiegand","Wilderman","Wilkinson","Will","Williamson","Willms","Windler","Wintheiser","Wisoky","Wisozk","Witting","Wiza","Wolf","Wolff","Wuckert","Wunsch","Wyman","Yost","Yundt","Zboncak","Zemlak","Ziemann","Zieme","Zulauf"]	\N	10	f	full	\N	2024-01-24 01:01:41.552162+00
9	2024-01-24 01:01:41.580963+00	2024-01-24 01:01:41.580963+00	[null,"www.piespace.example/help","www.piespace.example/home","www.piespace.example/invite","www.piespace.example/login","www.piespace.example/pies"]	\N	18	f	full	\N	2024-01-24 01:01:41.580963+00
10	2024-01-24 01:01:41.598805+00	2024-01-24 01:01:41.598805+00	["Button Clicked","Page Viewed"]	\N	17	f	full	\N	2024-01-24 01:01:41.598805+00
11	2024-01-24 01:01:41.613045+00	2024-01-24 01:01:41.613045+00	[null,"Checkout","Create Item","Invite","Signup","Subscribe"]	\N	19	f	full	\N	2024-01-24 01:01:41.613045+00
12	2024-01-24 01:01:41.715133+00	2024-01-24 01:01:41.715133+00	[1,2,3,4,5]	\N	23	f	full	\N	2024-01-24 01:01:41.715133+00
13	2024-01-24 01:01:41.734372+00	2024-01-24 01:01:41.734372+00	["abbott-berneice@hotmail.example","abdullah-kerluke@gmail.example","adan-weissnat@yahoo.example","aida.schneider@gmail.example","aidan-hagenes@hotmail.example","aidan.rodriguez@gmail.example","alaina-howell@gmail.example","alayna.halvorson@hotmail.example","alberto.gulgowski@gmail.example","alicia.schimmel@gmail.example","alisa-morissette@hotmail.example","alisa-schmitt@hotmail.example","altenwerth.onie@yahoo.example","alva.conroy@hotmail.example","alvena-legros@hotmail.example","alverta-rogahn@hotmail.example","alvina.mertz@gmail.example","alvis.emmerich@yahoo.example","alycia.collins@yahoo.example","alysson-cartwright@yahoo.example","anastacio.jaskolski@hotmail.example","anderson-eliza@hotmail.example","anderson.schinner@yahoo.example","andy-skiles@yahoo.example","angela-botsford@hotmail.example","anjali-parker@hotmail.example","ankunding-rudolph@hotmail.example","aracely.jenkins@gmail.example","arch-ryan@hotmail.example","archibald-lowe@hotmail.example","archibald-turner@hotmail.example","arne-o-hara@gmail.example","art-graham@yahoo.example","arvel-lakin@gmail.example","ashton-herman@hotmail.example","aubree-dibbert@hotmail.example","aubree-walter@hotmail.example","aufderhar-mya@hotmail.example","aufderhar.john@yahoo.example","aurore-yundt@yahoo.example","bahringer-laura@yahoo.example","bailey.kenna@yahoo.example","balistreri-oral@yahoo.example","balistreri-unique@gmail.example","bauch-wilford@gmail.example","bayer-mattie@hotmail.example","bayer.mark@hotmail.example","beatty-emmie@gmail.example","beatty.julio@gmail.example","beatty.mohammed@gmail.example","bechtelar.antone@gmail.example","beer.humberto@hotmail.example","berge-halie@hotmail.example","bergstrom-chelsie@yahoo.example","bernhard.kathleen@yahoo.example","bins-evans@hotmail.example","blair.heaney@gmail.example","blake-leffler@hotmail.example","blaze-daugherty@hotmail.example","blick-candelario@yahoo.example","block.emiliano@hotmail.example","bode-sydnie@gmail.example","bode.richmond@gmail.example","boehm-amanda@hotmail.example","bogan.rodger@gmail.example","bosco-zachariah@gmail.example","bosco.haylie@hotmail.example","botsford.okey@hotmail.example","boyer-bernhard@yahoo.example","boyle-christiana@gmail.example","brakus-kimberly@gmail.example","brakus.marlene@hotmail.example","brant.klein@yahoo.example","braun.madisyn@gmail.example","breanna.strosin@yahoo.example","breitenberg-louie@gmail.example","brekke.kirsten@yahoo.example","brennon-gerlach@hotmail.example","bret-quigley@gmail.example","brianne-jacobson@yahoo.example","brown-deontae@gmail.example","buddy-hills@gmail.example","caleigh-hodkiewicz@yahoo.example","camron-homenick@gmail.example","camryn-schmeler@hotmail.example","candida-turcotte@yahoo.example","carolanne-upton@gmail.example","carroll.chanel@yahoo.example","carroll.kohler@hotmail.example","carter-fern@hotmail.example","casey.robel@yahoo.example","casper-alfonzo@yahoo.example","cassin-cleta@hotmail.example","cassin.mario@hotmail.example","cayla.vonrueden@hotmail.example","cecilia.stark@hotmail.example","cedrick-kessler@gmail.example","champlin.jensen@yahoo.example","chanel.rippin@yahoo.example","charlene-bayer@hotmail.example","chet-blick@yahoo.example","christophe.wilderman@hotmail.example","ciara-larson@hotmail.example","ciara.green@yahoo.example","clark-luettgen@gmail.example","claudie-dare@yahoo.example","claudine.mccullough@yahoo.example","clay-pfannerstill@gmail.example","clemens.hansen@gmail.example","cole.christophe@yahoo.example","conn-gideon@yahoo.example","connell-o-henriette@yahoo.example","connell.lisette.o@yahoo.example","connelly-alice@gmail.example","connelly.bessie@hotmail.example","conner.windler@gmail.example","conroy-orlando@yahoo.example","conroy-yadira@gmail.example","corbin.mertz@hotmail.example","corbin.wiegand@yahoo.example","corkery.theresa@yahoo.example","cornelius-bogisich@hotmail.example","crawford.rath@gmail.example","cremin-jerome@hotmail.example","cremin.tyler@gmail.example","cronin-marley@yahoo.example","curtis.morar@hotmail.example","d-amore-geoffrey@yahoo.example","dagmar-sawayn@gmail.example","dana-orn@hotmail.example","dana.kozey@yahoo.example","darwin-abshire@yahoo.example","dawson-kuvalis@gmail.example","dax-bartell@hotmail.example","dayne.strosin@hotmail.example","deckow.alisha@hotmail.example","dell-schimmel@hotmail.example","demario-hand@yahoo.example","demetris.hauck@hotmail.example","dena-schiller@yahoo.example","denesik-delphia@hotmail.example","deron-cremin@gmail.example","destiny-murazik@hotmail.example","deven.brekke@gmail.example","domenico.bailey@yahoo.example","dominic.jacobi@yahoo.example","donavon.lowe@gmail.example","dooley-karen@gmail.example","douglas-prosacco@hotmail.example","douglas.anais@hotmail.example","durgan-emiliano@hotmail.example","earnestine-lockman@hotmail.example","easton-koch@gmail.example","effertz-elnora@yahoo.example","eileen-mayert@gmail.example","eldon.herman@yahoo.example","elisa-grady@yahoo.example","ellie-oberbrunner@yahoo.example","ellsworth.west@hotmail.example","elmo.schimmel@yahoo.example","elsa.klocko@gmail.example","elvera.lowe@yahoo.example","elwin.okuneva@gmail.example","emanuel-corwin@gmail.example","emard-janiya@gmail.example","emerson-o-keefe@gmail.example","emery.gerlach@hotmail.example","emmie-mertz@yahoo.example","enola.bayer@yahoo.example","erich.kris@gmail.example","ernestina-gerhold@gmail.example","ernser-ardella@gmail.example","esther-douglas@yahoo.example","estrella.goyette@hotmail.example","ethan.rutherford@gmail.example","eudora-renner@gmail.example","eugenia-stroman@yahoo.example","eula-connell-o@hotmail.example","eve.mante@yahoo.example","fadel-philip@hotmail.example","feest-angus@gmail.example","feil.sterling@gmail.example","felicity-greenfelder@hotmail.example","felipe-johnston@yahoo.example","ferry.enrico@hotmail.example","fisher-antwan@hotmail.example","florence.donnelly@gmail.example","foster-gusikowski@yahoo.example","foster-marks@yahoo.example","francisco-robel@hotmail.example","freddie.wisoky@gmail.example","fredrick-gulgowski@yahoo.example","fritz.dickens@hotmail.example","funk.nichole@yahoo.example","gabrielle-considine@yahoo.example","gabrielle-frami@gmail.example","gaetano-rogahn@hotmail.example","gaylord-granville@yahoo.example","gene-lueilwitz@gmail.example","gerhold.lempi@yahoo.example","germaine-brakus@yahoo.example","gibson.eveline@hotmail.example","gilberto-mueller@gmail.example","gino.johnston@yahoo.example","giovani-thompson@hotmail.example","giovani.lesch@hotmail.example","gislason-kaelyn@hotmail.example","giuseppe.morar@hotmail.example","gleichner-joshuah@gmail.example","glover-eryn@gmail.example","glover.kelsie@yahoo.example","goldner.ruthe@hotmail.example","gorczany-eulah@yahoo.example","gottlieb-ola@gmail.example","gottlieb-ruthe@yahoo.example","grady.raynor@hotmail.example","graham-liam@yahoo.example","greenfelder-hulda@gmail.example","greenfelder.wilbert@gmail.example","greg-purdy@gmail.example","gretchen.muller@hotmail.example","greyson.boyle@gmail.example","grimes-terrence@gmail.example","grimes.melisa@gmail.example","guido-mckenzie@yahoo.example","gulgowski.ubaldo@gmail.example","gutkowski-pattie@hotmail.example","gutmann-lura@hotmail.example","hagenes-rosie@hotmail.example","hahn.hugh@hotmail.example","halvorson.dale@gmail.example","hane.audie@gmail.example","hane.carter@gmail.example","hansen-karl@hotmail.example","hansen.alta@yahoo.example","hansen.anibal@yahoo.example","hansen.magnolia@gmail.example","harris-myrtice@gmail.example","harris.constantin@hotmail.example","harris.richard@yahoo.example","heath-dare@gmail.example","heathcote.jamar@gmail.example","heidenreich-patience@hotmail.example","heidenreich.pearlie@hotmail.example","heidi-glover@gmail.example","henry-rowe@yahoo.example","hermann-madelyn@hotmail.example","hermiston.gerald@yahoo.example","hertha.price@gmail.example","herzog-ophelia@hotmail.example","hessel.arnoldo@yahoo.example","hettinger-brendon@yahoo.example","hettinger.david@yahoo.example","hettinger.orval@hotmail.example","hettinger.shyanne@yahoo.example","hills-violet@hotmail.example","hilpert.gunnar@yahoo.example","hollis-hettinger@gmail.example","homenick-omari@hotmail.example","hoppe.kathryne@gmail.example","hoppe.lewis@gmail.example","howell-reba@gmail.example","howell.jacinthe@yahoo.example","hudson-audra@hotmail.example","hudson.larkin@hotmail.example","huels-earnest@hotmail.example","huels-gunnar@yahoo.example","hyatt.rowan@hotmail.example","jace-kihn@yahoo.example","jacey.schoen@hotmail.example","jacobs-oliver@yahoo.example","jacobs-ronny@hotmail.example","jacobson.stan@gmail.example","jairo-simonis@yahoo.example","jakob.hansen@gmail.example","jakubowski.nyasia@yahoo.example","jaleel.collins@gmail.example","jamel.stanton@yahoo.example","jannie-balistreri@yahoo.example","jasen.stanton@yahoo.example","jast.leann@yahoo.example","jayden.kris@hotmail.example","jazmin.brekke@gmail.example","jedediah-huels@hotmail.example","jeffry-schowalter@hotmail.example","jenkins-sandy@yahoo.example","jennifer-klocko@hotmail.example","jerrod-king@yahoo.example","jessika.funk@yahoo.example","jo-gusikowski@hotmail.example","joe.becker@yahoo.example","joelle-ullrich@gmail.example","johns-myrtle@yahoo.example","johnston.benny@gmail.example","jorge.bins@gmail.example","josh-schimmel@gmail.example","judd-hickle@gmail.example","kade-kub@hotmail.example","kaela-kunze@gmail.example","kariane.hintz@gmail.example","karine.mante@gmail.example","katharina-heathcote@yahoo.example","kavon-dach@gmail.example","kaya.schoen@yahoo.example","kayley.powlowski@hotmail.example","keefe-o-jonas@yahoo.example","keenan.ferry@hotmail.example","kellie.price@hotmail.example","kelsi.douglas@gmail.example","kemmer-gene@yahoo.example","kemmer-matt@yahoo.example","kemmer.bonnie@hotmail.example","kennedy-kunde@gmail.example","kerluke.jakob@gmail.example","kertzmann-coty@hotmail.example","keshaun-carroll@hotmail.example","khalid-pouros@yahoo.example","khalid.blanda@yahoo.example","kihn.alfred@yahoo.example","kilback-alisha@hotmail.example","kilback-carmelo@yahoo.example","kitty.hilll@gmail.example","koelpin-karelle@gmail.example","koepp-melyna@gmail.example","kohler.jermain@hotmail.example","konopelski.beaulah@hotmail.example","koss-ella@hotmail.example","koss.letha@hotmail.example","kovacek-dawson@hotmail.example","kristoffer.blanda@yahoo.example","krystel.boyle@yahoo.example","kshlerin-bernardo@gmail.example","kshlerin-stella@yahoo.example","kulas-armani@yahoo.example","kunze.eleanora@hotmail.example","kuphal.colton@gmail.example","kurtis.parker@gmail.example","kuvalis-cierra@yahoo.example","kuvalis-willis@yahoo.example","kyler-altenwerth@yahoo.example","kyler.abshire@yahoo.example","kyra-lynch@hotmail.example","lacey.dickinson@hotmail.example","langosh.cathrine@gmail.example","langworth-savion@gmail.example","larkin-lilliana@hotmail.example","larkin.cedrick@gmail.example","larson-adrianna@gmail.example","laurel.pfannerstill@gmail.example","laurie-sanford@hotmail.example","lavern.botsford@hotmail.example","lavern.boyle@hotmail.example","leannon-clay@gmail.example","lebsack-tristin@yahoo.example","ledner-nichole@yahoo.example","leila-considine@gmail.example","leta-heidenreich@yahoo.example","leuschke-estefania@yahoo.example","liam-schoen@hotmail.example","lillie.wilderman@hotmail.example","lind.annamae@gmail.example","linnea.dickens@gmail.example","littel.otto@hotmail.example","little-anika@hotmail.example","little.john@yahoo.example","lockman-janiya@hotmail.example","logan-weber@yahoo.example","lon-friesen@yahoo.example","lorna.greenholt@yahoo.example","lou.runte@gmail.example","lowell-daniel@gmail.example","loyal.wintheiser@yahoo.example","loyce-lemke@yahoo.example","lucas-beer@gmail.example","lucile-bednar@gmail.example","lueilwitz.osbaldo@yahoo.example","luna-nienow@gmail.example","lynch.tyson@gmail.example","lysanne-brekke@yahoo.example","mabel-grimes@hotmail.example","macejkovic-cyrus@gmail.example","macejkovic.andrew@hotmail.example","mackenzie-ullrich@yahoo.example","madge-friesen@gmail.example","madie.bayer@hotmail.example","maeve.hilpert@hotmail.example","maiya-beier@hotmail.example","malika-kuphal@hotmail.example","mante-dakota@yahoo.example","marcelle-rippin@gmail.example","marcelo-ferry@gmail.example","margarete.tillman@gmail.example","marley.gorczany@hotmail.example","marvin.kris@gmail.example","mathilde.quigley@gmail.example","maurine-considine@hotmail.example","maximillia.ebert@hotmail.example","maximillian-zboncak@hotmail.example","mayer.arne@hotmail.example","mayert.jessyca@gmail.example","mckenzie.eduardo@yahoo.example","mclaughlin.ezekiel@yahoo.example","meagan.cremin@yahoo.example","melba-witting@hotmail.example","melisa.hilpert@hotmail.example","melissa.cormier@hotmail.example","merle.blick@yahoo.example","merle.moen@yahoo.example","mertz.antoinette@hotmail.example","mertz.melissa@gmail.example","micaela.kerluke@gmail.example","milan-ritchie@gmail.example","miller-geovanni@hotmail.example","miller.morgan@gmail.example","mills-andy@hotmail.example","milton.schiller@hotmail.example","mina.reynolds@yahoo.example","miracle.erdman@gmail.example","misty-botsford@hotmail.example","mitchell-lacey@gmail.example","moen-evalyn@gmail.example","mohr.johnson@gmail.example","mollie.bogan@hotmail.example","monahan.loma@yahoo.example","monserrate-doyle@hotmail.example","morar-maddison@hotmail.example","morissette.jailyn@gmail.example","mraz-tomas@gmail.example","mraz.caitlyn@yahoo.example","muller-russell@yahoo.example","murazik-donny@hotmail.example","murray-idell@gmail.example","murray-zemlak@hotmail.example","murray.gleason@gmail.example","mya-gleason@yahoo.example","myles.deckow@gmail.example","myrtle.bahringer@hotmail.example","nader-arnaldo@hotmail.example","nader-ryley@hotmail.example","nayeli.becker@yahoo.example","nicolas.dameon@yahoo.example","nicolas.karen@hotmail.example","nikko.bartoletti@gmail.example","nikolas-hilpert@gmail.example","nikolaus-willie@yahoo.example","nils.gaylord@hotmail.example","nolan-amy@hotmail.example","nolan.samantha@hotmail.example","o-issac-kon@hotmail.example","o.janelle.hara@gmail.example","oceane.runte@yahoo.example","odell.stehr@hotmail.example","olaf.sipes@gmail.example","ollie.corkery@gmail.example","ondricka-lamont@hotmail.example","ondricka-madge@yahoo.example","ondricka.rollin@gmail.example","orie-sipes@yahoo.example","ortiz.harrison@gmail.example","orville-effertz@hotmail.example","oscar-olson@hotmail.example","osinski-joanne@gmail.example","pacocha-khalil@hotmail.example","padberg-albert@gmail.example","pagac-yessenia@yahoo.example","parker-lilliana@yahoo.example","pattie.senger@yahoo.example","paucek-larry@hotmail.example","petra.durgan@hotmail.example","peyton-barton@gmail.example","powlowski-mohammed@yahoo.example","price-rosalyn@yahoo.example","rau.arnaldo@hotmail.example","raynor.chasity@gmail.example","rebekah-dickinson@hotmail.example","rebekah.ledner@gmail.example","reichel-antwon@hotmail.example","reichel.gracie@gmail.example","reichert-evangeline@yahoo.example","reid-reilly@hotmail.example","reilly.o.franco@yahoo.example","rempel.brooke@gmail.example","rene.muller@gmail.example","reuben-koelpin@yahoo.example","rey-schumm@hotmail.example","reyna-greenholt@yahoo.example","reynolds-melisa@hotmail.example","richmond-adams@gmail.example","roberts-lilian@yahoo.example","rogahn-meta@hotmail.example","rolfson-ford@yahoo.example","rolfson.natalie@yahoo.example","romaguera-angeline@yahoo.example","roob-lila@gmail.example","rosalinda-stamm@gmail.example","rosella-bergstrom@gmail.example","rowe-celestine@gmail.example","ruecker-kathlyn@yahoo.example","ruecker-tad@yahoo.example","runolfsdottir-tyreek@gmail.example","runolfsdottir.augustine@gmail.example","runolfsson.davonte@gmail.example","rutherford-beau@yahoo.example","rylee-upton@yahoo.example","ryleigh-padberg@hotmail.example","sabrina-schmidt@hotmail.example","sabryna-schumm@gmail.example","sallie.wehner@yahoo.example","samir.hayes@yahoo.example","sanford.leilani@yahoo.example","satterfield-abbey@hotmail.example","satterfield.chris@hotmail.example","satterfield.creola@hotmail.example","sauer-franco@yahoo.example","schaden.johathan@hotmail.example","schamberger-zora@gmail.example","schiller.loyal@gmail.example","schinner.verna@yahoo.example","schmeler-lucinda@hotmail.example","schmeler-rita@yahoo.example","schmeler.annabelle@gmail.example","schoen.viola@hotmail.example","schuster.geovanny@yahoo.example","scottie.schmidt@hotmail.example","senger-kamron@hotmail.example","shanie.spinka@gmail.example","shanny-kuvalis@gmail.example","shirley-okuneva@yahoo.example","sidney-kling@gmail.example","skiles-devan@gmail.example","skye.heidenreich@gmail.example","smith-meaghan@yahoo.example","smith-price@yahoo.example","spencer.efrain@gmail.example","spinka-donato@yahoo.example","spinka-jessy@gmail.example","sporer-nyasia@hotmail.example","sporer.toby@yahoo.example","stamm.davin@yahoo.example","stanley.kuphal@gmail.example","stark.yasmin@gmail.example","stehr-freeman@hotmail.example","stehr.tyson@gmail.example","steuber-vernice@yahoo.example","steuber.dedrick@gmail.example","stewart.sawayn@gmail.example","stiedemann-gage@gmail.example","stiedemann.coby@gmail.example","stokes.cordelia@yahoo.example","stoltenberg-miguel@gmail.example","swaniawski-kaleb@gmail.example","swaniawski-luisa@hotmail.example","swift.pietro@hotmail.example","tavares.metz@yahoo.example","terry-gregorio@gmail.example","terry-william@yahoo.example","terry.darlene@gmail.example","terry.joe@gmail.example","theodore.mcglynn@hotmail.example","theresa.grant@yahoo.example","theresia-russel@gmail.example","thompson-fay@yahoo.example","thompson-hosea@hotmail.example","thurman-pouros@hotmail.example","toby.yundt@gmail.example","torp.magdalen@yahoo.example","trantow-daphnee@hotmail.example","tressie-smitham@yahoo.example","treutel-jessika@yahoo.example","treutel.jaquan@hotmail.example","tromp-demario@yahoo.example","tromp.emelia@hotmail.example","trudie-muller@gmail.example","trudie.koch@yahoo.example","turner.dahlia@yahoo.example","turner.kelley@hotmail.example","tyrel-beatty@yahoo.example","ullrich-ladarius@gmail.example","unique.jerde@yahoo.example","vanessa-jaskolski@gmail.example","vergie.borer@hotmail.example","veronica.weissnat@gmail.example","virginia-prohaska@yahoo.example","vonrueden-sheridan@hotmail.example","waelchi-filomena@yahoo.example","waelchi-jaqueline@hotmail.example","waelchi.iva@yahoo.example","walker-derrick@yahoo.example","walker-nicole@yahoo.example","walker-trace@gmail.example","walker.carter@yahoo.example","walter-melisa@gmail.example","walter.chris@yahoo.example","ward.anais@gmail.example","ward.mabel@gmail.example","warren.gulgowski@hotmail.example","watsica-olen@gmail.example","watsica.stanley@hotmail.example","weber-breana@hotmail.example","weber-gino@yahoo.example","weber-mohammad@yahoo.example","weimann.keyshawn@hotmail.example","weimann.maryam@gmail.example","weissnat-victoria@gmail.example","weissnat.elmore@gmail.example","weissnat.mathilde@hotmail.example","welch-lucinda@yahoo.example","wendell-becker@yahoo.example","west.laisha@yahoo.example","white.berneice@gmail.example","wiegand.guy@gmail.example","wilderman-nellie@hotmail.example","wilhelmine.erdman@gmail.example","wilkinson-penelope@gmail.example","wilkinson.edmund@hotmail.example","will.garrison@yahoo.example","willms-ardella@yahoo.example","willms-tressie@hotmail.example","willms.seth@gmail.example","willms.wilhelm@gmail.example","wilton-senger@yahoo.example","winfield.donnelly@hotmail.example","winona.cassin@yahoo.example","wintheiser-broderick@yahoo.example","wintheiser-celestino@gmail.example","wintheiser-murray@yahoo.example","wisoky-rebeka@hotmail.example","witting-cindy@yahoo.example","witting-maud@gmail.example","witting-raegan@gmail.example","wiza-andreanne@gmail.example","wiza.lisette@yahoo.example","wolf-jewell@yahoo.example","wuckert.iva@hotmail.example","wyman.hilma@gmail.example","yundt-haven@hotmail.example","yundt.merl@yahoo.example","zackery.bailey@gmail.example","zane.paucek@yahoo.example","zetta.nitzsche@gmail.example","ziemann-serena@gmail.example","zula.boehm@hotmail.example"]	\N	26	f	full	\N	2024-01-24 01:01:41.734372+00
14	2024-01-24 01:01:41.750297+00	2024-01-24 01:01:41.750297+00	["Average","Below Average","Good","Great","Poor"]	\N	28	f	full	\N	2024-01-24 01:01:41.750297+00
15	2024-01-24 01:01:41.766766+00	2024-01-24 01:01:41.766766+00	[false,true]	\N	35	f	full	\N	2024-01-24 01:01:41.766766+00
16	2024-01-24 01:01:41.780502+00	2024-01-24 01:01:41.780502+00	["Basic","Business","Premium"]	\N	30	f	full	\N	2024-01-24 01:01:41.780502+00
17	2024-01-24 01:01:46.577348+00	2024-01-24 01:01:46.577348+00	[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,65,67,68,69,70,71,72,73,75,78,82,83,88,100]	\N	39	f	full	\N	2024-01-24 01:01:46.577348+00
18	2024-01-24 01:01:46.605805+00	2024-01-24 01:01:46.605805+00	["AK","AL","AR","AZ","CA","CO","CT","DE","FL","GA","IA","ID","IL","IN","KS","KY","LA","MA","MD","ME","MI","MN","MO","MS","MT","NC","ND","NE","NH","NJ","NM","NV","NY","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VA","VT","WA","WI","WV","WY"]	\N	48	f	full	\N	2024-01-24 01:01:46.605805+00
19	2024-01-24 01:01:46.619211+00	2024-01-24 01:01:46.619211+00	["Affiliate","Facebook","Google","Organic","Twitter"]	\N	45	f	full	\N	2024-01-24 01:01:46.619211+00
20	2024-01-24 01:01:46.635372+00	2024-01-24 01:01:46.635372+00	["Doohickey","Gadget","Gizmo","Widget"]	\N	58	f	full	\N	2024-01-24 01:01:46.635372+00
21	2024-01-24 01:01:46.647188+00	2024-01-24 01:01:46.647188+00	["Alfreda Konopelski II Group","Alfredo Kuhlman Group","Americo Sipes and Sons","Annetta Wyman and Sons","Aufderhar-Boehm","Balistreri-Ankunding","Balistreri-Muller","Barrows-Johns","Batz-Schroeder","Baumbach-Hilpert","Bednar, Berge and Boyle","Berge, Mraz and Sawayn","Bernhard-Grady","Blake Greenfelder Group","Bosco-Breitenberg","Bradtke, Wilkinson and Reilly","Braeden Gislason and Sons","Brittany Mueller Inc","Cale Thompson V and Sons","Carmela Douglas Inc","Carol Marvin LLC","Casper-Schimmel","Cassin-Collins","Claude Thompson Group","Connelly-Mitchell","Connelly-Ritchie","Considine, Bogisich and Bauch","Considine, Lehner and Maggio","Considine, Schamberger and Schiller","Cremin-Williamson","Crona, Block and Homenick","Cruickshank-Abernathy","Daugherty-Dach","Delphia Bauch Inc","Demarcus Brakus Inc","Denesik-Ortiz","Devonte Gleichner Inc","Dominic Mann Group","Donnelly, Renner and Barton","Dooley-Cummings","Dora Fay and Sons","Dorothea Balistreri Inc","Emmerich-Nienow","Erika Volkman Group","Eugenia Kunze LLC","Fisher-Kemmer","Fisher-Purdy","Flatley-Kunde","Ford Runolfsson Group","Francis Wolff Group","Friesen-Anderson","Friesen-Langworth","Gail Bergstrom Inc","Gaylord-Lesch","Gibson, Turner and Douglas","Goyette-Smitham","Grady, Greenfelder and Welch","Gulgowski, Grimes and Mayer","Gutmann-Breitenberg","Hackett-Reynolds","Halle Kulas I LLC","Halvorson, Lockman and Ruecker","Hane, Hamill and Jerde","Hartmann, Mohr and Stiedemann","Hauck, Ernser and Barton","Heaney-Windler","Heathcote-Kirlin","Herman Flatley Group","Herman, Gleason and Renner","Hermiston, O'Hara and Wunsch","Herta Skiles and Sons","Hills, Fahey and Jones","Hilpert, Jacobs and Hauck","Hodkiewicz-Brekke","Howe, Kiehn and Price","Israel Spinka and Sons","Izabella Dach I and Sons","Jacobson-Daniel","Janick Harvey LLC","Jefferey Volkman LLC","Jerrell Gulgowski Inc","Jerrod McLaughlin LLC","Jones, Hayes and Kshlerin","Jordi Effertz LLC","Keely Stehr Group","Keshaun Mueller Group","Kiehn-Pacocha","Kiel Kassulke Group","Kirlin, Hermann and Stokes","Koch-Ruecker","Koepp, Ondricka and Larkin","Kuhlman-Kuphal","Kuhlman-McKenzie","Kuhn-O'Reilly","Kuphal, Brown and Koss","Kuphal, Friesen and Rowe","Kuphal, Schowalter and Bogan","Lakin-Stroman","Larson, Pfeffer and Klocko","Ledner-Satterfield","Ledner-Watsica","Legros, Lynch and Howell","Little-Pagac","Lon Wiegand DVM and Sons","Lorenza Mayer Inc","Maegan Casper Group","Marge Effertz Jr. Inc","Marquardt, Crooks and Abshire","Marvin, Turcotte and Wisozk","Mason Bashirian and Sons","Maxime Haley and Sons","Mayer, Kiehn and Turcotte","McClure-Lockman","McClure-Murphy","McDermott, Kiehn and Becker","McGlynn, Fay and Kertzmann","Medhurst-Reichert","Miles Ryan Group","Miss Annamae Kutch Group","Morar-Schamberger","Morissette, Bartoletti and Cummings","Morissette, Dare and Schimmel","Mr. Colton Mayer Group","Mr. Johanna Koepp and Sons","Mr. Tanya Stracke and Sons","Mrs. Eugenia Koelpin and Sons","Mueller, Mayert and Johnston","Mueller-Dare","Murray, Watsica and Wunsch","Myriam Macejkovic Inc","Nikolaus-Hudson","Noah Anderson and Sons","Nolan-Heller","Nolan-Wolff","Odessa Emmerich Inc","Okuneva, Kutch and Monahan","Ora Monahan and Sons","Oran D'Amore Inc","Orn, Hilpert and Pfannerstill","Pacocha-Volkman","Padberg, Senger and Williamson","Parker, O'Connell and Beahan","Pouros, Nitzsche and Mayer","Powlowski, Keebler and Quigley","Price Kuhic Inc","Price, Schultz and Daniel","Prohaska-Quigley","Quigley, Von and Will","Regan Bradtke and Sons","Reichert, Johnson and Roob","Reid Pfannerstill and Sons","Reynolds, Gleason and Brekke","Ritchie, Haley and Pacocha","Robyn Padberg Inc","Rodriguez-Kuhlman","Rosanna Murazik Inc","Roscoe Oberbrunner Group","Rowan Kautzer LLC","Ruecker, Carter and Ortiz","Ruecker-Jakubowski","Schamberger-Maggio","Schamberger-Wehner","Schiller, Bogisich and Lockman","Schinner, Schmitt and Crona","Schumm, Brown and Wehner","Schuster-Wyman","Senger, Mertz and Murray","Senger-Doyle","Senger-Stamm","Smitham, Dach and Bode","Spinka-Stokes","Stamm, Crist and Labadie","Stanton-Fritsch","Stark-Bayer","Stroman-Carroll","Swaniawski, Casper and Hilll","Theodora Terry and Sons","Theodore Hansen Inc","Thompson-Wolf","Tia Goyette Group","Toy, Deckow and Nitzsche","Trantow-Bartell","Turner, Kiehn and Schmitt","Una Fadel Group","Upton, Kovacek and Halvorson","Upton, Schoen and Streich","Ursula Collins LLC","Volkman, Greenfelder and Kiehn","Von-Gulgowski","Weimann-Cummings","West, Prohaska and Wunsch","Wilkinson, Donnelly and Gulgowski","Wilkinson-Gottlieb","Wisoky, Pagac and Heaney","Wiza, Abbott and Deckow","Wolf, Beahan and Thiel","Wolff, Ebert and Hansen","Wuckert, Murazik and Ernser","Zemlak, Botsford and Corkery","Zemlak-Wiegand"]	\N	60	f	full	\N	2024-01-24 01:01:46.647188+00
22	2024-01-24 01:01:46.658805+00	2024-01-24 01:01:46.658805+00	["0001664425970","0006590063715","0010465925138","0038948983000","0095774502751","0096051986448","0157967025871","0212722801067","0225815844582","0236197465609","0255973714120","0272643267465","0335243754848","0399569209871","0498395047364","0698616313838","0743731223606","0832349515187","0848056924761","0899183128263","1018947080336","1078766578568","1087115303928","1144906750559","1157194463322","1272575087123","1404411876176","1408483808240","1464781960745","1468999794635","1484994799123","1538211018396","1559730016366","1576499102253","1613730311804","1613963249998","1726123595351","1770178011663","1790740189682","1807963902339","1838229841499","1878073010375","1909194306167","1943523619306","1960588072419","2084705637233","2091630691049","2117622168280","2125923238175","2293343551454","2315609605258","2339358820724","2434890445616","2448500145612","2484897511500","2516506541834","2529776156387","2543248750439","2562717359713","2646001599860","2703547723491","2820850288674","2890379323668","2952766751666","3084140869281","3301617687934","3307124431763","3576267834421","3621077291879","3642408008706","3661250556340","3685697688891","3691313722887","3769015137275","3772022926992","3806751355669","3828680930458","3987140172453","3988126680641","4009053735033","4093428378987","4134502155718","4168050315812","4198118078267","4201407654834","4284914664558","4307721071729","4312472827051","4347934129886","4406572671024","4504719641739","4516685534489","4561421124790","4665903801947","4686859196154","4709231420798","4733532233696","4734618834332","4760375596107","4785470010730","4819782507258","4863291591550","4886504321812","4893655420066","4945934419923","4963935336179","4966277046676","5010710584900","5050273180195","5065846711133","5099742600901","5176352942567","5272733645116","5291392809646","5408760500061","5433448189252","5499736705597","5522456328132","5528517133622","5592486096660","5626486088179","5738533322232","5778452195678","5856636800041","5881647583898","5935916054838","5955704607626","6009279470754","6154584840805","6190070243323","6201199361567","6248889948356","6316992933962","6372029072158","6403813628678","6409491343148","6424174443243","6575325360237","6588791601926","6704641545275","6858015278648","6875096496570","6906120611895","6966709160725","7059492880556","7067375149041","7080123588503","7153630876392","7167715379463","7177157744491","7217466997444","7317365230007","7345418848909","7384311074268","7485639601133","7494558044822","7532074237028","7570673549500","7595223735110","7663515285824","7667946672475","7668932199532","7760442733661","7813908779724","7854842811538","8002754191821","8163753213485","8207931408888","8222420544052","8245402607613","8271165200181","8296484749050","8368305700967","8469939413398","8590367775021","8687358946192","8703661046340","8725228831589","8769809778856","8825217022124","8833419218504","8844419430964","8909358907493","8933669659420","9031323475252","9095019841233","9131148018211","9182640035008","9216642429807","9347854191845","9458076657016","9482467478850","9522454376759","9633135585459","9644009305424","9687547218818","9753065345920","9786855487647","9802920493181","9978391194435"]	\N	63	f	full	\N	2024-01-24 01:01:46.658805+00
23	2024-01-24 01:01:46.672588+00	2024-01-24 01:01:46.672588+00	["Aerodynamic Bronze Hat","Aerodynamic Concrete Bench","Aerodynamic Concrete Lamp","Aerodynamic Copper Knife","Aerodynamic Cotton Bottle","Aerodynamic Cotton Lamp","Aerodynamic Granite Bench","Aerodynamic Granite Bottle","Aerodynamic Leather Computer","Aerodynamic Leather Toucan","Aerodynamic Linen Coat","Aerodynamic Paper Coat","Aerodynamic Paper Computer","Aerodynamic Rubber Bench","Awesome Aluminum Keyboard","Awesome Aluminum Table","Awesome Bronze Plate","Awesome Concrete Shoes","Awesome Cotton Shoes","Awesome Granite Car","Awesome Iron Hat","Awesome Plastic Watch","Awesome Rubber Wallet","Awesome Silk Car","Awesome Steel Toucan","Awesome Wool Bench","Durable Aluminum Bag","Durable Copper Clock","Durable Cotton Bench","Durable Cotton Shirt","Durable Iron Knife","Durable Leather Wallet","Durable Marble Watch","Durable Rubber Computer","Durable Steel Toucan","Durable Wool Toucan","Enormous Aluminum Clock","Enormous Aluminum Shirt","Enormous Copper Shirt","Enormous Cotton Pants","Enormous Granite Bottle","Enormous Granite Wallet","Enormous Leather Wallet","Enormous Marble Gloves","Enormous Marble Shoes","Enormous Marble Wallet","Enormous Plastic Coat","Enormous Steel Watch","Enormous Wool Car","Ergonomic Aluminum Plate","Ergonomic Concrete Lamp","Ergonomic Cotton Bag","Ergonomic Granite Bottle","Ergonomic Iron Watch","Ergonomic Leather Pants","Ergonomic Linen Toucan","Ergonomic Marble Computer","Ergonomic Marble Hat","Ergonomic Paper Wallet","Ergonomic Plastic Bench","Ergonomic Rubber Bench","Ergonomic Silk Coat","Ergonomic Silk Keyboard","Ergonomic Silk Table","Ergonomic Wool Bag","Fantastic Aluminum Bottle","Fantastic Copper Hat","Fantastic Leather Watch","Fantastic Rubber Knife","Fantastic Silk Bottle","Fantastic Steel Knife","Fantastic Wool Shirt","Gorgeous Aluminum Plate","Gorgeous Bronze Hat","Gorgeous Concrete Chair","Gorgeous Concrete Shoes","Gorgeous Copper Knife","Gorgeous Linen Bottle","Gorgeous Linen Keyboard","Gorgeous Marble Computer","Gorgeous Marble Plate","Gorgeous Paper Bag","Gorgeous Wooden Car","Heavy-Duty Copper Gloves","Heavy-Duty Copper Toucan","Heavy-Duty Copper Watch","Heavy-Duty Cotton Bottle","Heavy-Duty Linen Gloves","Heavy-Duty Linen Toucan","Heavy-Duty Rubber Bottle","Heavy-Duty Rubber Gloves","Heavy-Duty Silk Car","Heavy-Duty Silk Chair","Heavy-Duty Steel Watch","Heavy-Duty Wooden Clock","Incredible Aluminum Knife","Incredible Bronze Pants","Incredible Bronze Wallet","Incredible Concrete Keyboard","Incredible Concrete Watch","Incredible Granite Toucan","Incredible Linen Knife","Incredible Plastic Chair","Incredible Plastic Watch","Incredible Silk Shoes","Intelligent Bronze Knife","Intelligent Granite Hat","Intelligent Iron Shirt","Intelligent Paper Car","Intelligent Paper Hat","Intelligent Steel Car","Intelligent Wooden Gloves","Lightweight Bronze Table","Lightweight Copper Wallet","Lightweight Granite Hat","Lightweight Leather Bench","Lightweight Leather Gloves","Lightweight Linen Bottle","Lightweight Linen Coat","Lightweight Linen Hat","Lightweight Marble Bag","Lightweight Paper Bottle","Lightweight Steel Knife","Lightweight Steel Watch","Lightweight Wool Bag","Lightweight Wool Computer","Lightweight Wool Plate","Mediocre Aluminum Lamp","Mediocre Aluminum Shirt","Mediocre Cotton Coat","Mediocre Cotton Toucan","Mediocre Leather Coat","Mediocre Leather Computer","Mediocre Marble Lamp","Mediocre Paper Car","Mediocre Plastic Clock","Mediocre Rubber Shoes","Mediocre Silk Bottle","Mediocre Wooden Bench","Mediocre Wooden Table","Mediocre Wool Toucan","Practical Aluminum Coat","Practical Aluminum Table","Practical Bronze Computer","Practical Bronze Watch","Practical Copper Car","Practical Granite Plate","Practical Paper Bag","Practical Plastic Keyboard","Practical Silk Bottle","Practical Silk Computer","Practical Steel Table","Practical Wool Hat","Rustic Concrete Bottle","Rustic Copper Hat","Rustic Copper Knife","Rustic Iron Bench","Rustic Iron Keyboard","Rustic Linen Keyboard","Rustic Marble Bottle","Rustic Paper Bench","Rustic Paper Car","Rustic Paper Wallet","Rustic Rubber Clock","Rustic Rubber Knife","Rustic Silk Knife","Rustic Silk Pants","Sleek Aluminum Clock","Sleek Aluminum Watch","Sleek Bronze Lamp","Sleek Copper Watch","Sleek Granite Pants","Sleek Leather Table","Sleek Leather Toucan","Sleek Marble Clock","Sleek Marble Table","Sleek Paper Toucan","Sleek Plastic Shoes","Sleek Steel Table","Sleek Wool Wallet","Sleek Wool Watch","Small Concrete Knife","Small Copper Clock","Small Copper Plate","Small Cotton Chair","Small Granite Gloves","Small Marble Hat","Small Marble Knife","Small Marble Shoes","Small Plastic Computer","Small Rubber Clock","Small Wool Wallet","Synergistic Copper Computer","Synergistic Granite Chair","Synergistic Leather Coat","Synergistic Marble Keyboard","Synergistic Rubber Shoes","Synergistic Steel Chair","Synergistic Wool Coat"]	\N	65	f	full	\N	2024-01-24 01:01:46.672588+00
24	2024-01-24 01:01:46.690826+00	2024-01-24 01:01:46.690826+00	[1,2,3,4,5]	\N	66	f	full	\N	2024-01-24 01:01:46.690826+00
\.


--
-- Data for Name: metabase_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.metabase_table (id, created_at, updated_at, name, description, entity_type, active, db_id, display_name, visibility_type, schema, points_of_interest, caveats, show_in_getting_started, field_order, initial_sync_status, is_upload) FROM stdin;
7	2024-01-24 01:01:21.681978+00	2024-01-24 01:01:41.183796+00	ACCOUNTS	Information on customer accounts registered with Piespace. Each account represents a new organization signing up for on-demand pies.	entity/UserTable	t	1	Accounts	\N	PUBLIC	Is it? We’ll let you be the judge of that.	Piespace’s business operates with a two week trial period. If you see that “Canceled At” is null then that account is still happily paying for their pies.	f	database	complete	f
3	2024-01-24 01:01:21.648573+00	2024-01-24 01:01:41.185859+00	ANALYTIC_EVENTS	Piespace does some anonymous analytics tracking on how users interact with their platform. They’ve only had time to implement a few events, but you know how it is. Pies come first.	entity/EventTable	t	1	Analytic Events	\N	PUBLIC	Is it? We’ll let you be the judge of that.	Piespace has cracked time travel, so keep in mind that some events may have already happened in the future.	f	database	complete	f
4	2024-01-24 01:01:21.661195+00	2024-01-24 01:01:41.189848+00	FEEDBACK	With each order of pies sent out, Piespace includes a place for customers to submit feedback and review their order.	entity/GenericTable	t	1	Feedback	\N	PUBLIC	Is it? We’ll let you be the judge of that.	Not every account feels inclined to submit feedback. That’s cool. There’s still quite a few responses here.	f	database	complete	f
6	2024-01-24 01:01:21.675273+00	2024-01-24 01:01:41.192121+00	INVOICES	Confirmed payments from Piespace’s customers. Most accounts pay for their pie subscription on a monthly basis.	entity/GenericTable	t	1	Invoices	\N	PUBLIC	Is it? We’ll let you be the judge of that.	You can group by “Account ID” to see all the payments from an account and unveil information like total amount paid to date.	f	database	complete	f
2	2024-01-24 01:01:21.642216+00	2024-01-24 01:01:41.194237+00	ORDERS	Confirmed Sample Company orders for a product, from a user.	entity/TransactionTable	t	1	Orders	\N	PUBLIC	Is it? You tell us!	You can join this on the Products and Orders table using the ID fields. Discount is left null if not applicable.	f	database	complete	f
5	2024-01-24 01:01:21.668916+00	2024-01-24 01:01:41.196515+00	PEOPLE	Information on the user accounts registered with Sample Company.	entity/UserTable	t	1	People	\N	PUBLIC	Is it? You tell us!	Note that employees and customer support staff will have accounts.	f	database	complete	f
1	2024-01-24 01:01:21.630519+00	2024-01-24 01:01:41.198481+00	PRODUCTS	Includes a catalog of all the products ever sold by the famed Sample Company.	entity/ProductTable	t	1	Products	\N	PUBLIC	Is it? You tell us!	The rating column is an integer from 1-5 where 1 is dreadful and 5 is the best thing ever.	f	database	complete	f
8	2024-01-24 01:01:21.687314+00	2024-01-24 01:01:41.200483+00	REVIEWS	Reviews that Sample Company customers have left on our products.	entity/GenericTable	t	1	Reviews	\N	PUBLIC	Is it? You tell us!	These reviews aren't tied to orders so it is possible people have reviewed products they did not purchase from us.	f	database	complete	f
9	2024-01-24 01:40:32.259742+00	2024-01-24 01:40:33.208973+00	upsertion_record	\N	entity/GenericTable	t	2	Upsertion Record	\N	main	\N	\N	f	database	complete	f
10	2024-01-24 01:40:32.310181+00	2024-01-24 01:40:33.212513+00	message_store	\N	entity/GenericTable	t	2	Message Store	\N	main	\N	\N	f	database	complete	f
11	2024-01-24 01:40:32.331243+00	2024-01-24 01:40:33.215618+00	logs	\N	entity/EventTable	t	2	Logs	\N	main	\N	\N	f	database	complete	f
12	2024-01-24 01:40:32.381444+00	2024-01-24 01:40:33.218778+00	external_id	\N	entity/GenericTable	t	2	External ID	\N	main	\N	\N	f	database	complete	f
13	2024-01-24 01:40:32.401884+00	2024-01-24 01:40:33.221833+00	langchain_pg_collection	\N	entity/GenericTable	t	2	Langchain Pg Collection	\N	main	\N	\N	f	database	complete	f
14	2024-01-24 01:40:32.419089+00	2024-01-24 01:40:33.225038+00	profile	\N	entity/GenericTable	t	2	Profile	\N	main	\N	\N	f	database	complete	f
15	2024-01-24 01:40:32.434165+00	2024-01-24 01:40:33.228052+00	feature_flag	\N	entity/GenericTable	t	2	Feature Flag	\N	main	\N	\N	f	database	complete	f
16	2024-01-24 01:40:32.452207+00	2024-01-24 01:40:33.230498+00	group	\N	entity/GenericTable	t	2	Group	\N	main	\N	\N	f	database	complete	f
17	2024-01-24 01:40:32.461756+00	2024-01-24 01:40:33.233754+00	integration	\N	entity/GenericTable	t	2	Integration	\N	main	\N	\N	f	database	complete	f
18	2024-01-24 01:40:32.47059+00	2024-01-24 01:40:33.23663+00	langchain_pg_embedding	\N	entity/GenericTable	t	2	Langchain Pg Embedding	\N	main	\N	\N	f	database	complete	f
\.


--
-- Data for Name: metric; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.metric (id, table_id, creator_id, name, description, archived, definition, created_at, updated_at, points_of_interest, caveats, how_is_this_calculated, show_in_getting_started, entity_id) FROM stdin;
\.


--
-- Data for Name: metric_important_field; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.metric_important_field (id, metric_id, field_id) FROM stdin;
\.


--
-- Data for Name: model_index; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.model_index (id, model_id, pk_ref, value_ref, schedule, state, indexed_at, error, created_at, creator_id) FROM stdin;
\.


--
-- Data for Name: model_index_value; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.model_index_value (model_index_id, model_pk, name) FROM stdin;
\.


--
-- Data for Name: moderation_review; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.moderation_review (id, updated_at, created_at, status, text, moderated_item_id, moderated_item_type, moderator_id, most_recent) FROM stdin;
\.


--
-- Data for Name: native_query_snippet; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.native_query_snippet (id, name, description, content, creator_id, archived, created_at, updated_at, collection_id, entity_id) FROM stdin;
\.


--
-- Data for Name: parameter_card; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.parameter_card (id, updated_at, created_at, card_id, parameterized_object_type, parameterized_object_id, parameter_id) FROM stdin;
\.


--
-- Data for Name: permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.permissions (id, object, group_id) FROM stdin;
1	/	2
2	/collection/root/	1
3	/application/subscription/	1
4	/collection/namespace/snippets/root/	1
7	/db/1/	1
8	/download/db/1/	1
9	/download/db/1/native/	1
12	/db/2/	1
13	/download/db/2/	1
14	/download/db/2/native/	1
\.


--
-- Data for Name: permissions_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.permissions_group (id, name) FROM stdin;
1	All Users
2	Administrators
\.


--
-- Data for Name: permissions_group_membership; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.permissions_group_membership (id, user_id, group_id, is_group_manager) FROM stdin;
1	1	1	f
2	1	2	f
\.


--
-- Data for Name: permissions_revision; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.permissions_revision (id, before, after, user_id, created_at, remark) FROM stdin;
\.


--
-- Data for Name: persisted_info; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.persisted_info (id, database_id, card_id, question_slug, table_name, definition, query_hash, active, state, refresh_begin, refresh_end, state_change_at, error, created_at, creator_id) FROM stdin;
\.


--
-- Data for Name: pulse; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pulse (id, creator_id, name, created_at, updated_at, skip_if_empty, alert_condition, alert_first_only, alert_above_goal, collection_id, collection_position, archived, dashboard_id, parameters, entity_id) FROM stdin;
\.


--
-- Data for Name: pulse_card; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pulse_card (id, pulse_id, card_id, "position", include_csv, include_xls, dashboard_card_id, entity_id) FROM stdin;
\.


--
-- Data for Name: pulse_channel; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pulse_channel (id, pulse_id, channel_type, details, schedule_type, schedule_hour, schedule_day, created_at, updated_at, schedule_frame, enabled, entity_id) FROM stdin;
\.


--
-- Data for Name: pulse_channel_recipient; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pulse_channel_recipient (id, pulse_channel_id, user_id) FROM stdin;
\.


--
-- Data for Name: qrtz_blob_triggers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_blob_triggers (sched_name, trigger_name, trigger_group, blob_data) FROM stdin;
\.


--
-- Data for Name: qrtz_calendars; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_calendars (sched_name, calendar_name, calendar) FROM stdin;
\.


--
-- Data for Name: qrtz_cron_triggers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_cron_triggers (sched_name, trigger_name, trigger_group, cron_expression, time_zone_id) FROM stdin;
MetabaseScheduler	metabase.task.update-field-values.trigger.1	DEFAULT	0 0 5 * * ? *	GMT
MetabaseScheduler	metabase.task.upgrade-checks.trigger	DEFAULT	0 15 6,18 * * ? *	GMT
MetabaseScheduler	metabase.task.anonymous-stats.trigger	DEFAULT	0 51 2 * * ? *	GMT
MetabaseScheduler	metabase.task.refresh-channel-cache.trigger	DEFAULT	0 11 0/4 1/1 * ? *	GMT
MetabaseScheduler	metabase.task.truncate-audit-tables.trigger	DEFAULT	0 0 */12 * * ? *	GMT
MetabaseScheduler	metabase.task.send-pulses.trigger	DEFAULT	0 0 * * * ? *	GMT
MetabaseScheduler	metabase.task.follow-up-emails.trigger	DEFAULT	0 0 12 * * ? *	GMT
MetabaseScheduler	metabase.task.task-history-cleanup.trigger	DEFAULT	0 0 0 * * ? *	GMT
MetabaseScheduler	metabase.task.sync-and-analyze.trigger.1	DEFAULT	0 10 * * * ? *	GMT
MetabaseScheduler	metabase.task.sync-and-analyze.trigger.2	DEFAULT	0 14 * * * ? *	GMT
MetabaseScheduler	metabase.task.update-field-values.trigger.2	DEFAULT	0 0 21 * * ? *	GMT
\.


--
-- Data for Name: qrtz_fired_triggers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_fired_triggers (sched_name, entry_id, trigger_name, trigger_group, instance_name, fired_time, sched_time, priority, state, job_name, job_group, is_nonconcurrent, requests_recovery) FROM stdin;
\.


--
-- Data for Name: qrtz_job_details; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_job_details (sched_name, job_name, job_group, description, job_class_name, is_durable, is_nonconcurrent, is_update_data, requests_recovery, job_data) FROM stdin;
MetabaseScheduler	metabase.task.upgrade-checks.job	DEFAULT	\N	metabase.task.upgrade_checks.CheckForNewVersions	f	f	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.anonymous-stats.job	DEFAULT	\N	metabase.task.send_anonymous_stats.SendAnonymousUsageStats	f	f	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.refresh-channel-cache.job	DEFAULT	\N	metabase.task.refresh_slack_channel_user_cache.RefreshCache	f	f	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.truncate-audit-tables.job	DEFAULT	\N	metabase.task.truncate_audit_tables.TruncateAuditTables	f	f	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.send-pulses.job	DEFAULT	\N	metabase.task.send_pulses.SendPulses	f	f	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.follow-up-emails.job	DEFAULT	\N	metabase.task.follow_up_emails.FollowUpEmail	f	f	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.task-history-cleanup.job	DEFAULT	\N	metabase.task.task_history_cleanup.TaskHistoryCleanup	f	f	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.email-remove-legacy-pulse.job	DEFAULT	\N	metabase.task.email_remove_legacy_pulse.EmailRemoveLegacyPulse	t	f	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.sync-and-analyze.job	DEFAULT	sync-and-analyze for all databases	metabase.task.sync_databases.SyncAndAnalyzeDatabase	t	t	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.update-field-values.job	DEFAULT	update-field-values for all databases	metabase.task.sync_databases.UpdateFieldValues	t	t	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.PersistenceRefresh.job	DEFAULT	Persisted Model refresh task	metabase.task.persist_refresh.PersistenceRefresh	t	t	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.PersistencePrune.job	DEFAULT	Persisted Model prune task	metabase.task.persist_refresh.PersistencePrune	t	t	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
MetabaseScheduler	metabase.task.IndexValues.job	DEFAULT	Indexed Value Refresh task	metabase.task.index_values.ModelIndexRefresh	t	t	f	f	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800
\.


--
-- Data for Name: qrtz_locks; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_locks (sched_name, lock_name) FROM stdin;
MetabaseScheduler	STATE_ACCESS
MetabaseScheduler	TRIGGER_ACCESS
\.


--
-- Data for Name: qrtz_paused_trigger_grps; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_paused_trigger_grps (sched_name, trigger_group) FROM stdin;
\.


--
-- Data for Name: qrtz_scheduler_state; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_scheduler_state (sched_name, instance_name, last_checkin_time, checkin_interval) FROM stdin;
MetabaseScheduler	a01bb4e287801706060324065	1706060616961	7500
\.


--
-- Data for Name: qrtz_simple_triggers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_simple_triggers (sched_name, trigger_name, trigger_group, repeat_count, repeat_interval, times_triggered) FROM stdin;
\.


--
-- Data for Name: qrtz_simprop_triggers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_simprop_triggers (sched_name, trigger_name, trigger_group, str_prop_1, str_prop_2, str_prop_3, int_prop_1, int_prop_2, long_prop_1, long_prop_2, dec_prop_1, dec_prop_2, bool_prop_1, bool_prop_2) FROM stdin;
\.


--
-- Data for Name: qrtz_triggers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.qrtz_triggers (sched_name, trigger_name, trigger_group, job_name, job_group, description, next_fire_time, prev_fire_time, priority, trigger_state, trigger_type, start_time, end_time, calendar_name, misfire_instr, job_data) FROM stdin;
MetabaseScheduler	metabase.task.update-field-values.trigger.1	DEFAULT	metabase.task.update-field-values.job	DEFAULT	update-field-values Database 1	1706072400000	-1	5	WAITING	CRON	1706058106000	0	\N	2	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000c7708000000100000000174000564622d6964737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b0200007870000000017800
MetabaseScheduler	metabase.task.upgrade-checks.trigger	DEFAULT	metabase.task.upgrade-checks.job	DEFAULT	\N	1706076900000	-1	5	WAITING	CRON	1706060324000	0	\N	0	\\x
MetabaseScheduler	metabase.task.anonymous-stats.trigger	DEFAULT	metabase.task.anonymous-stats.job	DEFAULT	\N	1706064660000	-1	5	WAITING	CRON	1706060324000	0	\N	0	\\x
MetabaseScheduler	metabase.task.refresh-channel-cache.trigger	DEFAULT	metabase.task.refresh-channel-cache.job	DEFAULT	\N	1706069460000	-1	5	WAITING	CRON	1706060324000	0	\N	2	\\x
MetabaseScheduler	metabase.task.truncate-audit-tables.trigger	DEFAULT	metabase.task.truncate-audit-tables.job	DEFAULT	\N	1706097600000	-1	5	WAITING	CRON	1706060324000	0	\N	2	\\x
MetabaseScheduler	metabase.task.send-pulses.trigger	DEFAULT	metabase.task.send-pulses.job	DEFAULT	\N	1706061600000	-1	5	WAITING	CRON	1706060324000	0	\N	1	\\x
MetabaseScheduler	metabase.task.follow-up-emails.trigger	DEFAULT	metabase.task.follow-up-emails.job	DEFAULT	\N	1706097600000	-1	5	WAITING	CRON	1706060324000	0	\N	0	\\x
MetabaseScheduler	metabase.task.task-history-cleanup.trigger	DEFAULT	metabase.task.task-history-cleanup.job	DEFAULT	\N	1706140800000	-1	5	WAITING	CRON	1706060324000	0	\N	0	\\x
MetabaseScheduler	metabase.task.sync-and-analyze.trigger.1	DEFAULT	metabase.task.sync-and-analyze.job	DEFAULT	sync-and-analyze Database 1	1706062200000	-1	5	WAITING	CRON	1706058106000	0	\N	2	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000c7708000000100000000174000564622d6964737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b0200007870000000017800
MetabaseScheduler	metabase.task.sync-and-analyze.trigger.2	DEFAULT	metabase.task.sync-and-analyze.job	DEFAULT	sync-and-analyze Database 2	1706062440000	-1	5	WAITING	CRON	1706060432000	0	\N	2	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000c7708000000100000000174000564622d6964737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b0200007870000000027800
MetabaseScheduler	metabase.task.update-field-values.trigger.2	DEFAULT	metabase.task.update-field-values.job	DEFAULT	update-field-values Database 2	1706130000000	-1	5	WAITING	CRON	1706060432000	0	\N	2	\\xaced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000c7708000000100000000174000564622d6964737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b0200007870000000027800
\.


--
-- Data for Name: query; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.query (query_hash, average_execution_time, query) FROM stdin;
\\xa485e7639c3f07dcdec9b8abf9316f327f156598de605d88422f6454b692f00a	647	{"database":1,"type":"query","query":{"aggregation":[["count"]],"breakout":[["field",58,{"source-field":40}]],"source-table":2},"parameters":[{"type":"date/all-options","value":null,"id":"275026523","target":["dimension",["field",41,null]]},{"type":"category","value":null,"id":"-2124989782","target":["dimension",["field",45,{"source-field":43}]]},{"type":"location/state","value":null,"id":"1735009568","target":["dimension",["field",48,{"source-field":43}]]},{"type":"category","value":null,"id":"241800831","target":["dimension",["field",58,{"source-field":40}]]}],"middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\xf1b56beaa17e20584d1ad975bf448849ee0a00e6d45aeb413462024a4fa68f46	376	{"database":1,"type":"query","query":{"aggregation":[["count"]],"source-table":2},"parameters":[{"type":"date/all-options","value":null,"id":"275026523","target":["dimension",["field",41,null]]},{"type":"category","value":null,"id":"-2124989782","target":["dimension",["field",45,{"source-field":43}]]},{"type":"location/state","value":null,"id":"1735009568","target":["dimension",["field",48,{"source-field":43}]]},{"type":"category","value":null,"id":"241800831","target":["dimension",["field",58,{"source-field":40}]]}],"middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\x262bc7d85f3ea914e5040139969c401d5f1307467f7adf158ba9275d60c1edc7	603	{"database":1,"type":"query","query":{"aggregation":[["avg",["field",39,null]]],"breakout":[["field",41,{"temporal-unit":"month"}]],"source-table":2},"parameters":[{"type":"date/all-options","value":null,"id":"275026523","target":["dimension",["field",41,null]]},{"type":"category","value":null,"id":"-2124989782","target":["dimension",["field",45,{"source-field":43}]]},{"type":"location/state","value":null,"id":"1735009568","target":["dimension",["field",48,{"source-field":43}]]},{"type":"category","value":null,"id":"241800831","target":["dimension",["field",58,{"source-field":40}]]}],"middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\xf6cf7ec79bec05d2daec2a6f4549735c1833504bedc3958ba6945e0988295432	561	{"database":1,"type":"query","query":{"aggregation":[["count"]],"filter":["time-interval",["field",41,{"temporal-unit":"month"}],-30,"day"],"source-table":2},"parameters":[{"type":"date/all-options","value":null,"id":"275026523","target":["dimension",["field",41,null]]},{"type":"category","value":null,"id":"-2124989782","target":["dimension",["field",45,{"source-field":43}]]},{"type":"location/state","value":null,"id":"1735009568","target":["dimension",["field",48,{"source-field":43}]]},{"type":"category","value":null,"id":"241800831","target":["dimension",["field",58,{"source-field":40}]]}],"middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\x2764e9a706785d331958b3db92e9555de5cd0a03c5cc90b4a080e67db51bc4a7	666	{"database":1,"type":"query","query":{"aggregation":[["count"]],"breakout":[["field",65,{"source-field":40}]],"source-table":2},"parameters":[{"type":"date/all-options","value":null,"id":"275026523","target":["dimension",["field",41,null]]},{"type":"category","value":null,"id":"-2124989782","target":["dimension",["field",45,{"source-field":43}]]},{"type":"location/state","value":null,"id":"1735009568","target":["dimension",["field",48,{"source-field":43}]]},{"type":"category","value":null,"id":"241800831","target":["dimension",["field",58,{"source-field":40}]]}],"middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\x0ceca86069014b63393306e7af7a07ea7cf8d227e514df9c64e0d9bc8b8bec2d	646	{"database":1,"type":"query","query":{"aggregation":[["count"]],"breakout":[["field",48,{"source-field":43}]],"source-table":2},"parameters":[{"type":"date/all-options","value":null,"id":"275026523","target":["dimension",["field",41,null]]},{"type":"category","value":null,"id":"-2124989782","target":["dimension",["field",45,{"source-field":43}]]},{"type":"location/state","value":null,"id":"1735009568","target":["dimension",["field",48,{"source-field":43}]]},{"type":"category","value":null,"id":"241800831","target":["dimension",["field",58,{"source-field":40}]]}],"middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\xe29abe5418e44f752439f3922508726213f5943ddf725ae2138dfca0d8473bfc	738	{"database":1,"type":"query","query":{"aggregation":[["count"]],"breakout":[["field",41,{"temporal-unit":"month"}],["field",45,{"source-field":43}]],"source-table":2},"parameters":[{"type":"date/all-options","value":null,"id":"275026523","target":["dimension",["field",41,null]]},{"type":"category","value":null,"id":"-2124989782","target":["dimension",["field",45,{"source-field":43}]]},{"type":"location/state","value":null,"id":"1735009568","target":["dimension",["field",48,{"source-field":43}]]},{"type":"category","value":null,"id":"241800831","target":["dimension",["field",58,{"source-field":40}]]}],"middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\x13530d4938344c46ead87f7bb7fd6c8d6f1170497ba07c2ae5ed4597a172e1df	720	{"database":1,"type":"query","query":{"aggregation":[["count"]],"breakout":[["field",50,{"source-field":43,"binning":{"strategy":"default"}}],["field",57,{"source-field":43,"binning":{"strategy":"default"}}]],"source-table":2},"parameters":[{"type":"date/all-options","value":null,"id":"275026523","target":["dimension",["field",41,null]]},{"type":"category","value":null,"id":"-2124989782","target":["dimension",["field",45,{"source-field":43}]]},{"type":"location/state","value":null,"id":"1735009568","target":["dimension",["field",48,{"source-field":43}]]},{"type":"category","value":null,"id":"241800831","target":["dimension",["field",58,{"source-field":40}]]}],"middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\xd9ad998aaf8ad7a97c6cf97dbc6d17208277f6873a6a9ce66150ee04a21000c3	12	{"database":2,"query":{"source-table":15},"type":"query","middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\xf6513c3df790b2c2169e13ed2a025a741f44500871e8c65f8af31740fed62fb4	14	{"database":2,"query":{"source-table":12},"type":"query","middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\\xffe6c808e143115c0d249512c5c3b79315e7529e3c0b524c21b6125514328b99	15	{"database":2,"query":{"source-table":14},"type":"query","middleware":{"js-int-to-string?":true,"add-default-userland-constraints?":true}}
\.


--
-- Data for Name: query_action; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.query_action (action_id, database_id, dataset_query) FROM stdin;
\.


--
-- Data for Name: query_cache; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.query_cache (query_hash, updated_at, results) FROM stdin;
\.


--
-- Data for Name: query_execution; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.query_execution (id, hash, started_at, running_time, result_rows, native, context, error, executor_id, card_id, dashboard_id, pulse_id, database_id, cache_hit, action_id, is_sandboxed, cache_hash) FROM stdin;
1	\\xf1b56beaa17e20584d1ad975bf448849ee0a00e6d45aeb413462024a4fa68f46	2024-01-24 01:40:35.424438+00	377	1	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
2	\\xf1b56beaa17e20584d1ad975bf448849ee0a00e6d45aeb413462024a4fa68f46	2024-01-24 01:40:35.424438+00	409	0	f	ad-hoc	Broken pipe	1	\N	\N	\N	1	\N	\N	\N	\N
3	\\xf1b56beaa17e20584d1ad975bf448849ee0a00e6d45aeb413462024a4fa68f46	2024-01-24 01:40:35.468733+00	336	1	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
4	\\xf6cf7ec79bec05d2daec2a6f4549735c1833504bedc3958ba6945e0988295432	2024-01-24 01:40:35.45627+00	549	1	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
5	\\xf6cf7ec79bec05d2daec2a6f4549735c1833504bedc3958ba6945e0988295432	2024-01-24 01:40:35.427056+00	590	1	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
6	\\xf6cf7ec79bec05d2daec2a6f4549735c1833504bedc3958ba6945e0988295432	2024-01-24 01:40:35.427056+00	633	0	f	ad-hoc	Broken pipe	1	\N	\N	\N	1	\N	\N	\N	\N
7	\\x262bc7d85f3ea914e5040139969c401d5f1307467f7adf158ba9275d60c1edc7	2024-01-24 01:40:35.424532+00	596	0	f	ad-hoc	Error reducing result rows: null	1	\N	\N	\N	1	\N	\N	\N	\N
8	\\xa485e7639c3f07dcdec9b8abf9316f327f156598de605d88422f6454b692f00a	2024-01-24 01:40:35.444844+00	644	4	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
9	\\x2764e9a706785d331958b3db92e9555de5cd0a03c5cc90b4a080e67db51bc4a7	2024-01-24 01:40:35.42443+00	666	0	f	ad-hoc	Error reducing result rows: null	1	\N	\N	\N	1	\N	\N	\N	\N
10	\\x262bc7d85f3ea914e5040139969c401d5f1307467f7adf158ba9275d60c1edc7	2024-01-24 01:40:35.445684+00	668	49	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
11	\\xa485e7639c3f07dcdec9b8abf9316f327f156598de605d88422f6454b692f00a	2024-01-24 01:40:35.42643+00	675	0	f	ad-hoc	Error reducing result rows: null	1	\N	\N	\N	1	\N	\N	\N	\N
12	\\x2764e9a706785d331958b3db92e9555de5cd0a03c5cc90b4a080e67db51bc4a7	2024-01-24 01:40:35.454804+00	667	199	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
13	\\xe29abe5418e44f752439f3922508726213f5943ddf725ae2138dfca0d8473bfc	2024-01-24 01:40:35.425269+00	733	0	f	ad-hoc	Error reducing result rows: null	1	\N	\N	\N	1	\N	\N	\N	\N
14	\\x0ceca86069014b63393306e7af7a07ea7cf8d227e514df9c64e0d9bc8b8bec2d	2024-01-24 01:40:35.473065+00	694	0	f	ad-hoc	Error reducing result rows: null	1	\N	\N	\N	1	\N	\N	\N	\N
15	\\x0ceca86069014b63393306e7af7a07ea7cf8d227e514df9c64e0d9bc8b8bec2d	2024-01-24 01:40:36.007354+00	215	48	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
16	\\xe29abe5418e44f752439f3922508726213f5943ddf725ae2138dfca0d8473bfc	2024-01-24 01:40:35.471332+00	782	241	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
17	\\x13530d4938344c46ead87f7bb7fd6c8d6f1170497ba07c2ae5ed4597a172e1df	2024-01-24 01:40:35.445281+00	785	0	f	ad-hoc	Error reducing result rows: null	1	\N	\N	\N	1	\N	\N	\N	\N
18	\\x13530d4938344c46ead87f7bb7fd6c8d6f1170497ba07c2ae5ed4597a172e1df	2024-01-24 01:40:36.160055+00	139	23	f	ad-hoc	\N	1	\N	\N	\N	1	f	\N	f	\N
19	\\xd9ad998aaf8ad7a97c6cf97dbc6d17208277f6873a6a9ce66150ee04a21000c3	2024-01-24 01:41:11.377892+00	12	0	f	ad-hoc	java.sql.SQLException: Extension Autoloading Error: An error occurred while trying to automatically install the required extension 'postgres_scanner':\nCan't find the home directory at '/home/metabase'\nSpecify a home directory using the SET home_directory='/path/to/dir' option.	1	\N	\N	\N	2	\N	\N	\N	\N
20	\\xf6513c3df790b2c2169e13ed2a025a741f44500871e8c65f8af31740fed62fb4	2024-01-24 01:41:15.599827+00	14	0	f	ad-hoc	java.sql.SQLException: Extension Autoloading Error: An error occurred while trying to automatically install the required extension 'postgres_scanner':\nCan't find the home directory at '/home/metabase'\nSpecify a home directory using the SET home_directory='/path/to/dir' option.	1	\N	\N	\N	2	\N	\N	\N	\N
21	\\xffe6c808e143115c0d249512c5c3b79315e7529e3c0b524c21b6125514328b99	2024-01-24 01:41:19.864488+00	15	0	f	ad-hoc	java.sql.SQLException: Extension Autoloading Error: An error occurred while trying to automatically install the required extension 'postgres_scanner':\nCan't find the home directory at '/home/metabase'\nSpecify a home directory using the SET home_directory='/path/to/dir' option.	1	\N	\N	\N	2	\N	\N	\N	\N
\.


--
-- Data for Name: recent_views; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recent_views (id, user_id, model, model_id, "timestamp") FROM stdin;
1	1	table	2	2024-01-24 01:40:35.375387
2	1	table	2	2024-01-24 01:40:35.382278
3	1	table	2	2024-01-24 01:40:35.383802
4	1	table	2	2024-01-24 01:40:35.389172
5	1	table	2	2024-01-24 01:40:35.40074
6	1	table	2	2024-01-24 01:40:35.399391
7	1	table	2	2024-01-24 01:40:35.41143
8	1	table	2	2024-01-24 01:40:35.414049
9	1	table	2	2024-01-24 01:40:35.418307
10	1	table	2	2024-01-24 01:40:35.442619
11	1	table	2	2024-01-24 01:40:35.442672
12	1	table	2	2024-01-24 01:40:35.44836
13	1	table	2	2024-01-24 01:40:35.451459
14	1	table	2	2024-01-24 01:40:35.459634
15	1	table	2	2024-01-24 01:40:35.981364
16	1	table	2	2024-01-24 01:40:36.13865
17	1	table	15	2024-01-24 01:41:11.374302
18	1	table	12	2024-01-24 01:41:15.596327
19	1	table	14	2024-01-24 01:41:19.860111
\.


--
-- Data for Name: report_card; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.report_card (id, created_at, updated_at, name, description, display, dataset_query, visualization_settings, creator_id, database_id, table_id, query_type, archived, collection_id, public_uuid, made_public_by_id, enable_embedding, embedding_params, cache_ttl, result_metadata, collection_position, dataset, entity_id, parameters, parameter_mappings, collection_preview, metabase_version) FROM stdin;
\.


--
-- Data for Name: report_cardfavorite; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.report_cardfavorite (id, created_at, updated_at, card_id, owner_id) FROM stdin;
\.


--
-- Data for Name: report_dashboard; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.report_dashboard (id, created_at, updated_at, name, description, creator_id, parameters, points_of_interest, caveats, show_in_getting_started, public_uuid, made_public_by_id, enable_embedding, embedding_params, archived, "position", collection_id, collection_position, cache_ttl, entity_id, auto_apply_filters) FROM stdin;
\.


--
-- Data for Name: report_dashboardcard; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.report_dashboardcard (id, created_at, updated_at, size_x, size_y, "row", col, card_id, dashboard_id, parameter_mappings, visualization_settings, entity_id, action_id, dashboard_tab_id) FROM stdin;
\.


--
-- Data for Name: revision; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.revision (id, model, model_id, user_id, "timestamp", object, is_reversion, is_creation, message, most_recent, metabase_version) FROM stdin;
\.


--
-- Data for Name: sandboxes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.sandboxes (id, group_id, table_id, card_id, attribute_remappings, permission_id) FROM stdin;
\.


--
-- Data for Name: secret; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.secret (id, version, creator_id, created_at, updated_at, name, kind, source, value) FROM stdin;
\.


--
-- Data for Name: segment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.segment (id, table_id, creator_id, name, description, archived, definition, created_at, updated_at, points_of_interest, caveats, show_in_getting_started, entity_id) FROM stdin;
\.


--
-- Data for Name: setting; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.setting (key, value) FROM stdin;
setup-token	64d74ebc-f6a7-438d-8b0f-3b3fda1f4d0c
redirect-all-requests-to-https	false
site-url	http://localhost:3000
analytics-uuid	5165b1c8-233e-400b-9a7d-abdf2366c672
instance-creation	2024-01-24T01:01:47.113476Z
site-name	QuackMeUp
admin-email	quackmeup@example.com
site-locale	en
anon-tracking-enabled	false
site-uuid	1062b55c-2976-479e-a18a-4a3421b52180
startup-time-millis	1806
show-database-syncing-modal	false
settings-last-updated	2024-01-24 01:40:32.337772+00
\.


--
-- Data for Name: table_privileges; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.table_privileges (table_id, role, "select", update, insert, delete) FROM stdin;
\.


--
-- Data for Name: task_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.task_history (id, task, db_id, started_at, ended_at, duration, task_details) FROM stdin;
1	sync	1	2024-01-24 01:01:21.586461+00	2024-01-24 01:01:22.328619+00	742	\N
2	sync-dbms-version	1	2024-01-24 01:01:21.586761+00	2024-01-24 01:01:21.600941+00	14	{"flavor":"H2","version":"2.1.214 (2022-06-13)","semantic-version":[2,1]}
3	sync-timezone	1	2024-01-24 01:01:21.60158+00	2024-01-24 01:01:21.613973+00	12	{"timezone-id":"UTC"}
4	sync-tables	1	2024-01-24 01:01:21.614022+00	2024-01-24 01:01:21.710121+00	96	{"updated-tables":8,"total-tables":0}
5	sync-fields	1	2024-01-24 01:01:21.71018+00	2024-01-24 01:01:21.963886+00	253	{"total-fields":71,"updated-fields":71}
6	sync-fks	1	2024-01-24 01:01:21.963928+00	2024-01-24 01:01:22.053022+00	89	{"total-fks":6,"updated-fks":6,"total-failed":0}
7	sync-metabase-metadata	1	2024-01-24 01:01:22.053102+00	2024-01-24 01:01:22.328138+00	275	\N
8	sync-table-privileges	1	2024-01-24 01:01:22.328176+00	2024-01-24 01:01:22.328609+00	0	\N
9	analyze	1	2024-01-24 01:01:22.365645+00	2024-01-24 01:01:41.201903+00	18836	\N
10	fingerprint-fields	1	2024-01-24 01:01:22.365657+00	2024-01-24 01:01:41.034591+00	18668	{"no-data-fingerprints":0,"failed-fingerprints":0,"updated-fingerprints":63,"fingerprints-attempted":63}
11	classify-fields	1	2024-01-24 01:01:41.034627+00	2024-01-24 01:01:41.181753+00	147	{"fields-classified":63,"fields-failed":0}
12	classify-tables	1	2024-01-24 01:01:41.181781+00	2024-01-24 01:01:41.201887+00	20	{"total-tables":8,"tables-classified":8}
13	field values scanning	1	2024-01-24 01:01:41.223414+00	2024-01-24 01:01:46.696752+00	5473	\N
14	delete-expired-advanced-field-values	1	2024-01-24 01:01:41.223425+00	2024-01-24 01:01:41.390543+00	167	{"deleted":0}
15	update-field-values	1	2024-01-24 01:01:41.390587+00	2024-01-24 01:01:46.696726+00	5306	{"errors":0,"created":24,"updated":0,"deleted":1}
16	sync	2	2024-01-24 01:40:32.211375+00	2024-01-24 01:40:32.791666+00	580	\N
17	sync-dbms-version	2	2024-01-24 01:40:32.211707+00	2024-01-24 01:40:32.223701+00	11	{"flavor":"DuckDB","version":"v0.9.1","semantic-version":[1,0]}
18	sync-timezone	2	2024-01-24 01:40:32.224444+00	2024-01-24 01:40:32.225658+00	1	{"timezone-id":null}
19	sync-tables	2	2024-01-24 01:40:32.225706+00	2024-01-24 01:40:32.530163+00	304	{"updated-tables":10,"total-tables":0}
20	sync-fields	2	2024-01-24 01:40:32.530248+00	2024-01-24 01:40:32.754436+00	224	{"total-fields":49,"updated-fields":48}
21	sync-fks	2	2024-01-24 01:40:32.754466+00	2024-01-24 01:40:32.790569+00	36	{"total-fks":0,"updated-fks":0,"total-failed":0}
22	sync-metabase-metadata	2	2024-01-24 01:40:32.790608+00	2024-01-24 01:40:32.79137+00	0	\N
23	sync-table-privileges	2	2024-01-24 01:40:32.791389+00	2024-01-24 01:40:32.791657+00	0	\N
24	analyze	2	2024-01-24 01:40:32.821319+00	2024-01-24 01:40:33.238133+00	416	\N
25	fingerprint-fields	2	2024-01-24 01:40:32.821331+00	2024-01-24 01:40:33.19078+00	369	{"no-data-fingerprints":0,"failed-fingerprints":0,"updated-fingerprints":0,"fingerprints-attempted":0}
26	classify-fields	2	2024-01-24 01:40:33.190832+00	2024-01-24 01:40:33.204613+00	13	{"fields-classified":0,"fields-failed":0}
27	classify-tables	2	2024-01-24 01:40:33.204646+00	2024-01-24 01:40:33.238111+00	33	{"total-tables":10,"tables-classified":10}
28	field values scanning	2	2024-01-24 01:40:33.254117+00	2024-01-24 01:40:33.453415+00	199	\N
29	delete-expired-advanced-field-values	2	2024-01-24 01:40:33.25413+00	2024-01-24 01:40:33.390837+00	136	{"deleted":0}
30	update-field-values	2	2024-01-24 01:40:33.390878+00	2024-01-24 01:40:33.453385+00	62	{"errors":0,"created":0,"updated":0,"deleted":0}
\.


--
-- Data for Name: timeline; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.timeline (id, name, description, icon, collection_id, archived, creator_id, created_at, updated_at, "default", entity_id) FROM stdin;
\.


--
-- Data for Name: timeline_event; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.timeline_event (id, timeline_id, name, description, "timestamp", time_matters, timezone, icon, archived, creator_id, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: view_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.view_log (id, user_id, model, model_id, "timestamp", metadata, has_access, context) FROM stdin;
1	1	table	2	2024-01-24 01:40:35.356605+00	\N	t	\N
14	1	table	2	2024-01-24 01:40:35.4555+00	\N	t	\N
2	1	table	2	2024-01-24 01:40:35.355809+00	\N	t	\N
10	1	table	2	2024-01-24 01:40:35.418077+00	\N	t	\N
16	1	table	2	2024-01-24 01:40:36.122021+00	\N	t	\N
18	1	table	12	2024-01-24 01:41:15.594498+00	\N	t	\N
19	1	table	14	2024-01-24 01:41:19.857184+00	\N	t	\N
3	1	table	2	2024-01-24 01:40:35.370202+00	\N	t	\N
4	1	table	2	2024-01-24 01:40:35.373898+00	\N	t	\N
5	1	table	2	2024-01-24 01:40:35.382652+00	\N	t	\N
6	1	table	2	2024-01-24 01:40:35.390275+00	\N	t	\N
7	1	table	2	2024-01-24 01:40:35.398658+00	\N	t	\N
8	1	table	2	2024-01-24 01:40:35.401907+00	\N	t	\N
9	1	table	2	2024-01-24 01:40:35.401859+00	\N	t	\N
11	1	table	2	2024-01-24 01:40:35.425342+00	\N	t	\N
12	1	table	2	2024-01-24 01:40:35.432006+00	\N	t	\N
13	1	table	2	2024-01-24 01:40:35.443036+00	\N	t	\N
15	1	table	2	2024-01-24 01:40:35.953645+00	\N	t	\N
17	1	table	15	2024-01-24 01:41:11.372209+00	\N	t	\N
\.


--
-- Name: action_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.action_id_seq', 1, false);


--
-- Name: activity_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.activity_id_seq', 1, false);


--
-- Name: application_permissions_revision_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.application_permissions_revision_id_seq', 1, false);


--
-- Name: audit_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.audit_log_id_seq', 1, false);


--
-- Name: bookmark_ordering_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.bookmark_ordering_id_seq', 1, false);


--
-- Name: card_bookmark_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.card_bookmark_id_seq', 1, false);


--
-- Name: card_label_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.card_label_id_seq', 1, false);


--
-- Name: collection_bookmark_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collection_bookmark_id_seq', 1, false);


--
-- Name: collection_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collection_id_seq', 1, true);


--
-- Name: collection_permission_graph_revision_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collection_permission_graph_revision_id_seq', 1, false);


--
-- Name: connection_impersonations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.connection_impersonations_id_seq', 1, false);


--
-- Name: core_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.core_user_id_seq', 1, true);


--
-- Name: dashboard_bookmark_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.dashboard_bookmark_id_seq', 1, false);


--
-- Name: dashboard_favorite_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.dashboard_favorite_id_seq', 1, false);


--
-- Name: dashboard_tab_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.dashboard_tab_id_seq', 1, false);


--
-- Name: dashboardcard_series_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.dashboardcard_series_id_seq', 1, false);


--
-- Name: dependency_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.dependency_id_seq', 1, false);


--
-- Name: dimension_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.dimension_id_seq', 1, false);


--
-- Name: group_table_access_policy_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.group_table_access_policy_id_seq', 1, false);


--
-- Name: label_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.label_id_seq', 1, false);


--
-- Name: login_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.login_history_id_seq', 1, true);


--
-- Name: metabase_database_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.metabase_database_id_seq', 2, true);


--
-- Name: metabase_field_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.metabase_field_id_seq', 120, true);


--
-- Name: metabase_fieldvalues_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.metabase_fieldvalues_id_seq', 24, true);


--
-- Name: metabase_table_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.metabase_table_id_seq', 18, true);


--
-- Name: metric_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.metric_id_seq', 1, false);


--
-- Name: metric_important_field_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.metric_important_field_id_seq', 1, false);


--
-- Name: model_index_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.model_index_id_seq', 1, false);


--
-- Name: moderation_review_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.moderation_review_id_seq', 1, false);


--
-- Name: native_query_snippet_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.native_query_snippet_id_seq', 1, false);


--
-- Name: parameter_card_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.parameter_card_id_seq', 1, false);


--
-- Name: permissions_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.permissions_group_id_seq', 2, true);


--
-- Name: permissions_group_membership_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.permissions_group_membership_id_seq', 2, true);


--
-- Name: permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.permissions_id_seq', 14, true);


--
-- Name: permissions_revision_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.permissions_revision_id_seq', 1, false);


--
-- Name: persisted_info_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.persisted_info_id_seq', 1, false);


--
-- Name: pulse_card_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pulse_card_id_seq', 1, false);


--
-- Name: pulse_channel_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pulse_channel_id_seq', 1, false);


--
-- Name: pulse_channel_recipient_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pulse_channel_recipient_id_seq', 1, false);


--
-- Name: pulse_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pulse_id_seq', 1, false);


--
-- Name: query_execution_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.query_execution_id_seq', 21, true);


--
-- Name: recent_views_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.recent_views_id_seq', 19, true);


--
-- Name: report_card_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.report_card_id_seq', 1, false);


--
-- Name: report_cardfavorite_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.report_cardfavorite_id_seq', 1, false);


--
-- Name: report_dashboard_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.report_dashboard_id_seq', 1, false);


--
-- Name: report_dashboardcard_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.report_dashboardcard_id_seq', 1, false);


--
-- Name: revision_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.revision_id_seq', 1, false);


--
-- Name: secret_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.secret_id_seq', 1, false);


--
-- Name: segment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.segment_id_seq', 1, false);


--
-- Name: task_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.task_history_id_seq', 30, true);


--
-- Name: timeline_event_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.timeline_event_id_seq', 1, false);


--
-- Name: timeline_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.timeline_id_seq', 1, false);


--
-- Name: view_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.view_log_id_seq', 19, true);


--
-- Name: action action_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.action
    ADD CONSTRAINT action_entity_id_key UNIQUE (entity_id);


--
-- Name: action action_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.action
    ADD CONSTRAINT action_pkey PRIMARY KEY (id);


--
-- Name: action action_public_uuid_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.action
    ADD CONSTRAINT action_public_uuid_key UNIQUE (public_uuid);


--
-- Name: activity activity_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity
    ADD CONSTRAINT activity_pkey PRIMARY KEY (id);


--
-- Name: audit_log audit_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit_log
    ADD CONSTRAINT audit_log_pkey PRIMARY KEY (id);


--
-- Name: bookmark_ordering bookmark_ordering_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookmark_ordering
    ADD CONSTRAINT bookmark_ordering_pkey PRIMARY KEY (id);


--
-- Name: card_bookmark card_bookmark_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.card_bookmark
    ADD CONSTRAINT card_bookmark_pkey PRIMARY KEY (id);


--
-- Name: card_label card_label_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.card_label
    ADD CONSTRAINT card_label_pkey PRIMARY KEY (id);


--
-- Name: collection_bookmark collection_bookmark_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection_bookmark
    ADD CONSTRAINT collection_bookmark_pkey PRIMARY KEY (id);


--
-- Name: collection collection_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection
    ADD CONSTRAINT collection_entity_id_key UNIQUE (entity_id);


--
-- Name: collection collection_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection
    ADD CONSTRAINT collection_pkey PRIMARY KEY (id);


--
-- Name: collection_permission_graph_revision collection_revision_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection_permission_graph_revision
    ADD CONSTRAINT collection_revision_pkey PRIMARY KEY (id);


--
-- Name: connection_impersonations conn_impersonation_unique_group_id_db_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.connection_impersonations
    ADD CONSTRAINT conn_impersonation_unique_group_id_db_id UNIQUE (group_id, db_id);


--
-- Name: connection_impersonations connection_impersonations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.connection_impersonations
    ADD CONSTRAINT connection_impersonations_pkey PRIMARY KEY (id);


--
-- Name: core_session core_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_session
    ADD CONSTRAINT core_session_pkey PRIMARY KEY (id);


--
-- Name: core_user core_user_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user
    ADD CONSTRAINT core_user_email_key UNIQUE (email);


--
-- Name: core_user core_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_user
    ADD CONSTRAINT core_user_pkey PRIMARY KEY (id);


--
-- Name: dashboard_bookmark dashboard_bookmark_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_bookmark
    ADD CONSTRAINT dashboard_bookmark_pkey PRIMARY KEY (id);


--
-- Name: dashboard_favorite dashboard_favorite_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_favorite
    ADD CONSTRAINT dashboard_favorite_pkey PRIMARY KEY (id);


--
-- Name: dashboard_tab dashboard_tab_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_tab
    ADD CONSTRAINT dashboard_tab_entity_id_key UNIQUE (entity_id);


--
-- Name: dashboard_tab dashboard_tab_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_tab
    ADD CONSTRAINT dashboard_tab_pkey PRIMARY KEY (id);


--
-- Name: dashboardcard_series dashboardcard_series_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboardcard_series
    ADD CONSTRAINT dashboardcard_series_pkey PRIMARY KEY (id);


--
-- Name: databasechangeloglock databasechangeloglock_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.databasechangeloglock
    ADD CONSTRAINT databasechangeloglock_pkey PRIMARY KEY (id);


--
-- Name: dependency dependency_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dependency
    ADD CONSTRAINT dependency_pkey PRIMARY KEY (id);


--
-- Name: dimension dimension_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dimension
    ADD CONSTRAINT dimension_entity_id_key UNIQUE (entity_id);


--
-- Name: dimension dimension_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dimension
    ADD CONSTRAINT dimension_pkey PRIMARY KEY (id);


--
-- Name: application_permissions_revision general_permissions_revision_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_permissions_revision
    ADD CONSTRAINT general_permissions_revision_pkey PRIMARY KEY (id);


--
-- Name: sandboxes group_table_access_policy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sandboxes
    ADD CONSTRAINT group_table_access_policy_pkey PRIMARY KEY (id);


--
-- Name: metabase_field idx_uniq_field_table_id_parent_id_name; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_field
    ADD CONSTRAINT idx_uniq_field_table_id_parent_id_name UNIQUE (table_id, parent_id, name);


--
-- Name: metabase_table idx_uniq_table_db_id_schema_name; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_table
    ADD CONSTRAINT idx_uniq_table_db_id_schema_name UNIQUE (db_id, schema, name);


--
-- Name: report_cardfavorite idx_unique_cardfavorite_card_id_owner_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_cardfavorite
    ADD CONSTRAINT idx_unique_cardfavorite_card_id_owner_id UNIQUE (card_id, owner_id);


--
-- Name: label label_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.label
    ADD CONSTRAINT label_pkey PRIMARY KEY (id);


--
-- Name: label label_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.label
    ADD CONSTRAINT label_slug_key UNIQUE (slug);


--
-- Name: login_history login_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.login_history
    ADD CONSTRAINT login_history_pkey PRIMARY KEY (id);


--
-- Name: metabase_database metabase_database_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_database
    ADD CONSTRAINT metabase_database_pkey PRIMARY KEY (id);


--
-- Name: metabase_field metabase_field_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_field
    ADD CONSTRAINT metabase_field_pkey PRIMARY KEY (id);


--
-- Name: metabase_fieldvalues metabase_fieldvalues_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_fieldvalues
    ADD CONSTRAINT metabase_fieldvalues_pkey PRIMARY KEY (id);


--
-- Name: metabase_table metabase_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_table
    ADD CONSTRAINT metabase_table_pkey PRIMARY KEY (id);


--
-- Name: metric metric_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metric
    ADD CONSTRAINT metric_entity_id_key UNIQUE (entity_id);


--
-- Name: metric_important_field metric_important_field_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metric_important_field
    ADD CONSTRAINT metric_important_field_pkey PRIMARY KEY (id);


--
-- Name: metric metric_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metric
    ADD CONSTRAINT metric_pkey PRIMARY KEY (id);


--
-- Name: model_index model_index_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.model_index
    ADD CONSTRAINT model_index_pkey PRIMARY KEY (id);


--
-- Name: moderation_review moderation_review_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.moderation_review
    ADD CONSTRAINT moderation_review_pkey PRIMARY KEY (id);


--
-- Name: native_query_snippet native_query_snippet_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.native_query_snippet
    ADD CONSTRAINT native_query_snippet_entity_id_key UNIQUE (entity_id);


--
-- Name: native_query_snippet native_query_snippet_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.native_query_snippet
    ADD CONSTRAINT native_query_snippet_name_key UNIQUE (name);


--
-- Name: native_query_snippet native_query_snippet_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.native_query_snippet
    ADD CONSTRAINT native_query_snippet_pkey PRIMARY KEY (id);


--
-- Name: parameter_card parameter_card_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.parameter_card
    ADD CONSTRAINT parameter_card_pkey PRIMARY KEY (id);


--
-- Name: permissions permissions_group_id_object_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions
    ADD CONSTRAINT permissions_group_id_object_key UNIQUE (group_id, object);


--
-- Name: permissions_group_membership permissions_group_membership_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions_group_membership
    ADD CONSTRAINT permissions_group_membership_pkey PRIMARY KEY (id);


--
-- Name: permissions_group permissions_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions_group
    ADD CONSTRAINT permissions_group_pkey PRIMARY KEY (id);


--
-- Name: permissions permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions
    ADD CONSTRAINT permissions_pkey PRIMARY KEY (id);


--
-- Name: permissions_revision permissions_revision_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions_revision
    ADD CONSTRAINT permissions_revision_pkey PRIMARY KEY (id);


--
-- Name: persisted_info persisted_info_card_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persisted_info
    ADD CONSTRAINT persisted_info_card_id_key UNIQUE (card_id);


--
-- Name: persisted_info persisted_info_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persisted_info
    ADD CONSTRAINT persisted_info_pkey PRIMARY KEY (id);


--
-- Name: http_action pk_http_action; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.http_action
    ADD CONSTRAINT pk_http_action PRIMARY KEY (action_id);


--
-- Name: implicit_action pk_implicit_action; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.implicit_action
    ADD CONSTRAINT pk_implicit_action PRIMARY KEY (action_id);


--
-- Name: qrtz_blob_triggers pk_qrtz_blob_triggers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_blob_triggers
    ADD CONSTRAINT pk_qrtz_blob_triggers PRIMARY KEY (sched_name, trigger_name, trigger_group);


--
-- Name: qrtz_calendars pk_qrtz_calendars; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_calendars
    ADD CONSTRAINT pk_qrtz_calendars PRIMARY KEY (sched_name, calendar_name);


--
-- Name: qrtz_cron_triggers pk_qrtz_cron_triggers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_cron_triggers
    ADD CONSTRAINT pk_qrtz_cron_triggers PRIMARY KEY (sched_name, trigger_name, trigger_group);


--
-- Name: qrtz_fired_triggers pk_qrtz_fired_triggers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_fired_triggers
    ADD CONSTRAINT pk_qrtz_fired_triggers PRIMARY KEY (sched_name, entry_id);


--
-- Name: qrtz_job_details pk_qrtz_job_details; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_job_details
    ADD CONSTRAINT pk_qrtz_job_details PRIMARY KEY (sched_name, job_name, job_group);


--
-- Name: qrtz_locks pk_qrtz_locks; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_locks
    ADD CONSTRAINT pk_qrtz_locks PRIMARY KEY (sched_name, lock_name);


--
-- Name: qrtz_scheduler_state pk_qrtz_scheduler_state; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_scheduler_state
    ADD CONSTRAINT pk_qrtz_scheduler_state PRIMARY KEY (sched_name, instance_name);


--
-- Name: qrtz_simple_triggers pk_qrtz_simple_triggers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_simple_triggers
    ADD CONSTRAINT pk_qrtz_simple_triggers PRIMARY KEY (sched_name, trigger_name, trigger_group);


--
-- Name: qrtz_simprop_triggers pk_qrtz_simprop_triggers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_simprop_triggers
    ADD CONSTRAINT pk_qrtz_simprop_triggers PRIMARY KEY (sched_name, trigger_name, trigger_group);


--
-- Name: qrtz_triggers pk_qrtz_triggers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_triggers
    ADD CONSTRAINT pk_qrtz_triggers PRIMARY KEY (sched_name, trigger_name, trigger_group);


--
-- Name: query_action pk_query_action; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.query_action
    ADD CONSTRAINT pk_query_action PRIMARY KEY (action_id);


--
-- Name: qrtz_paused_trigger_grps pk_sched_name; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_paused_trigger_grps
    ADD CONSTRAINT pk_sched_name PRIMARY KEY (sched_name, trigger_group);


--
-- Name: pulse_card pulse_card_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_card
    ADD CONSTRAINT pulse_card_entity_id_key UNIQUE (entity_id);


--
-- Name: pulse_card pulse_card_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_card
    ADD CONSTRAINT pulse_card_pkey PRIMARY KEY (id);


--
-- Name: pulse_channel pulse_channel_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_channel
    ADD CONSTRAINT pulse_channel_entity_id_key UNIQUE (entity_id);


--
-- Name: pulse_channel pulse_channel_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_channel
    ADD CONSTRAINT pulse_channel_pkey PRIMARY KEY (id);


--
-- Name: pulse_channel_recipient pulse_channel_recipient_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_channel_recipient
    ADD CONSTRAINT pulse_channel_recipient_pkey PRIMARY KEY (id);


--
-- Name: pulse pulse_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse
    ADD CONSTRAINT pulse_entity_id_key UNIQUE (entity_id);


--
-- Name: pulse pulse_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse
    ADD CONSTRAINT pulse_pkey PRIMARY KEY (id);


--
-- Name: query_cache query_cache_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.query_cache
    ADD CONSTRAINT query_cache_pkey PRIMARY KEY (query_hash);


--
-- Name: query_execution query_execution_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.query_execution
    ADD CONSTRAINT query_execution_pkey PRIMARY KEY (id);


--
-- Name: query query_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.query
    ADD CONSTRAINT query_pkey PRIMARY KEY (query_hash);


--
-- Name: recent_views recent_views_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recent_views
    ADD CONSTRAINT recent_views_pkey PRIMARY KEY (id);


--
-- Name: report_card report_card_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_card
    ADD CONSTRAINT report_card_entity_id_key UNIQUE (entity_id);


--
-- Name: report_card report_card_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_card
    ADD CONSTRAINT report_card_pkey PRIMARY KEY (id);


--
-- Name: report_card report_card_public_uuid_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_card
    ADD CONSTRAINT report_card_public_uuid_key UNIQUE (public_uuid);


--
-- Name: report_cardfavorite report_cardfavorite_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_cardfavorite
    ADD CONSTRAINT report_cardfavorite_pkey PRIMARY KEY (id);


--
-- Name: report_dashboard report_dashboard_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboard
    ADD CONSTRAINT report_dashboard_entity_id_key UNIQUE (entity_id);


--
-- Name: report_dashboard report_dashboard_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboard
    ADD CONSTRAINT report_dashboard_pkey PRIMARY KEY (id);


--
-- Name: report_dashboard report_dashboard_public_uuid_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboard
    ADD CONSTRAINT report_dashboard_public_uuid_key UNIQUE (public_uuid);


--
-- Name: report_dashboardcard report_dashboardcard_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboardcard
    ADD CONSTRAINT report_dashboardcard_entity_id_key UNIQUE (entity_id);


--
-- Name: report_dashboardcard report_dashboardcard_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboardcard
    ADD CONSTRAINT report_dashboardcard_pkey PRIMARY KEY (id);


--
-- Name: revision revision_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.revision
    ADD CONSTRAINT revision_pkey PRIMARY KEY (id);


--
-- Name: secret secret_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.secret
    ADD CONSTRAINT secret_pkey PRIMARY KEY (id, version);


--
-- Name: segment segment_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.segment
    ADD CONSTRAINT segment_entity_id_key UNIQUE (entity_id);


--
-- Name: segment segment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.segment
    ADD CONSTRAINT segment_pkey PRIMARY KEY (id);


--
-- Name: setting setting_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.setting
    ADD CONSTRAINT setting_pkey PRIMARY KEY (key);


--
-- Name: task_history task_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_history
    ADD CONSTRAINT task_history_pkey PRIMARY KEY (id);


--
-- Name: timeline timeline_entity_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timeline
    ADD CONSTRAINT timeline_entity_id_key UNIQUE (entity_id);


--
-- Name: timeline_event timeline_event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timeline_event
    ADD CONSTRAINT timeline_event_pkey PRIMARY KEY (id);


--
-- Name: timeline timeline_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timeline
    ADD CONSTRAINT timeline_pkey PRIMARY KEY (id);


--
-- Name: bookmark_ordering unique_bookmark_user_id_ordering; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookmark_ordering
    ADD CONSTRAINT unique_bookmark_user_id_ordering UNIQUE (user_id, ordering);


--
-- Name: bookmark_ordering unique_bookmark_user_id_type_item_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookmark_ordering
    ADD CONSTRAINT unique_bookmark_user_id_type_item_id UNIQUE (user_id, type, item_id);


--
-- Name: card_bookmark unique_card_bookmark_user_id_card_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.card_bookmark
    ADD CONSTRAINT unique_card_bookmark_user_id_card_id UNIQUE (user_id, card_id);


--
-- Name: card_label unique_card_label_card_id_label_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.card_label
    ADD CONSTRAINT unique_card_label_card_id_label_id UNIQUE (card_id, label_id);


--
-- Name: collection_bookmark unique_collection_bookmark_user_id_collection_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection_bookmark
    ADD CONSTRAINT unique_collection_bookmark_user_id_collection_id UNIQUE (user_id, collection_id);


--
-- Name: collection unique_collection_personal_owner_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection
    ADD CONSTRAINT unique_collection_personal_owner_id UNIQUE (personal_owner_id);


--
-- Name: dashboard_bookmark unique_dashboard_bookmark_user_id_dashboard_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_bookmark
    ADD CONSTRAINT unique_dashboard_bookmark_user_id_dashboard_id UNIQUE (user_id, dashboard_id);


--
-- Name: dashboard_favorite unique_dashboard_favorite_user_id_dashboard_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_favorite
    ADD CONSTRAINT unique_dashboard_favorite_user_id_dashboard_id UNIQUE (user_id, dashboard_id);


--
-- Name: dimension unique_dimension_field_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dimension
    ADD CONSTRAINT unique_dimension_field_id UNIQUE (field_id);


--
-- Name: sandboxes unique_gtap_table_id_group_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sandboxes
    ADD CONSTRAINT unique_gtap_table_id_group_id UNIQUE (table_id, group_id);


--
-- Name: metric_important_field unique_metric_important_field_metric_id_field_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metric_important_field
    ADD CONSTRAINT unique_metric_important_field_metric_id_field_id UNIQUE (metric_id, field_id);


--
-- Name: model_index_value unique_model_index_value_model_index_id_model_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.model_index_value
    ADD CONSTRAINT unique_model_index_value_model_index_id_model_pk UNIQUE (model_index_id, model_pk);


--
-- Name: parameter_card unique_parameterized_object_card_parameter; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.parameter_card
    ADD CONSTRAINT unique_parameterized_object_card_parameter UNIQUE (parameterized_object_id, parameterized_object_type, parameter_id);


--
-- Name: permissions_group_membership unique_permissions_group_membership_user_id_group_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions_group_membership
    ADD CONSTRAINT unique_permissions_group_membership_user_id_group_id UNIQUE (user_id, group_id);


--
-- Name: permissions_group unique_permissions_group_name; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions_group
    ADD CONSTRAINT unique_permissions_group_name UNIQUE (name);


--
-- Name: view_log view_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.view_log
    ADD CONSTRAINT view_log_pkey PRIMARY KEY (id);


--
-- Name: idx_action_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_action_creator_id ON public.action USING btree (creator_id);


--
-- Name: idx_action_made_public_by_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_action_made_public_by_id ON public.action USING btree (made_public_by_id);


--
-- Name: idx_action_model_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_action_model_id ON public.action USING btree (model_id);


--
-- Name: idx_action_public_uuid; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_action_public_uuid ON public.action USING btree (public_uuid);


--
-- Name: idx_activity_custom_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_activity_custom_id ON public.activity USING btree (custom_id);


--
-- Name: idx_activity_entity_qualified_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_activity_entity_qualified_id ON public.activity USING btree ((
CASE
    WHEN ((model)::text = 'Dataset'::text) THEN ('card_'::text || model_id)
    WHEN (model_id IS NULL) THEN NULL::text
    ELSE ((lower((model)::text) || '_'::text) || model_id)
END));


--
-- Name: idx_activity_timestamp; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_activity_timestamp ON public.activity USING btree ("timestamp");


--
-- Name: idx_activity_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_activity_user_id ON public.activity USING btree (user_id);


--
-- Name: idx_application_permissions_revision_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_application_permissions_revision_user_id ON public.application_permissions_revision USING btree (user_id);


--
-- Name: idx_audit_log_entity_qualified_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_audit_log_entity_qualified_id ON public.audit_log USING btree ((
CASE
    WHEN ((model)::text = 'Dataset'::text) THEN ('card_'::text || model_id)
    WHEN (model_id IS NULL) THEN NULL::text
    ELSE ((lower((model)::text) || '_'::text) || model_id)
END));


--
-- Name: idx_bookmark_ordering_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_bookmark_ordering_user_id ON public.bookmark_ordering USING btree (user_id);


--
-- Name: idx_card_bookmark_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_card_bookmark_card_id ON public.card_bookmark USING btree (card_id);


--
-- Name: idx_card_bookmark_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_card_bookmark_user_id ON public.card_bookmark USING btree (user_id);


--
-- Name: idx_card_collection_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_card_collection_id ON public.report_card USING btree (collection_id);


--
-- Name: idx_card_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_card_creator_id ON public.report_card USING btree (creator_id);


--
-- Name: idx_card_label_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_card_label_card_id ON public.card_label USING btree (card_id);


--
-- Name: idx_card_label_label_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_card_label_label_id ON public.card_label USING btree (label_id);


--
-- Name: idx_card_public_uuid; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_card_public_uuid ON public.report_card USING btree (public_uuid);


--
-- Name: idx_cardfavorite_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_cardfavorite_card_id ON public.report_cardfavorite USING btree (card_id);


--
-- Name: idx_cardfavorite_owner_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_cardfavorite_owner_id ON public.report_cardfavorite USING btree (owner_id);


--
-- Name: idx_collection_bookmark_collection_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_collection_bookmark_collection_id ON public.collection_bookmark USING btree (collection_id);


--
-- Name: idx_collection_bookmark_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_collection_bookmark_user_id ON public.collection_bookmark USING btree (user_id);


--
-- Name: idx_collection_location; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_collection_location ON public.collection USING btree (location);


--
-- Name: idx_collection_permission_graph_revision_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_collection_permission_graph_revision_user_id ON public.collection_permission_graph_revision USING btree (user_id);


--
-- Name: idx_collection_personal_owner_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_collection_personal_owner_id ON public.collection USING btree (personal_owner_id);


--
-- Name: idx_conn_impersonations_db_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_conn_impersonations_db_id ON public.connection_impersonations USING btree (db_id);


--
-- Name: idx_conn_impersonations_group_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_conn_impersonations_group_id ON public.connection_impersonations USING btree (group_id);


--
-- Name: idx_core_session_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_core_session_user_id ON public.core_session USING btree (user_id);


--
-- Name: idx_dashboard_bookmark_dashboard_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboard_bookmark_dashboard_id ON public.dashboard_bookmark USING btree (dashboard_id);


--
-- Name: idx_dashboard_bookmark_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboard_bookmark_user_id ON public.dashboard_bookmark USING btree (user_id);


--
-- Name: idx_dashboard_collection_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboard_collection_id ON public.report_dashboard USING btree (collection_id);


--
-- Name: idx_dashboard_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboard_creator_id ON public.report_dashboard USING btree (creator_id);


--
-- Name: idx_dashboard_favorite_dashboard_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboard_favorite_dashboard_id ON public.dashboard_favorite USING btree (dashboard_id);


--
-- Name: idx_dashboard_favorite_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboard_favorite_user_id ON public.dashboard_favorite USING btree (user_id);


--
-- Name: idx_dashboard_public_uuid; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboard_public_uuid ON public.report_dashboard USING btree (public_uuid);


--
-- Name: idx_dashboard_tab_dashboard_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboard_tab_dashboard_id ON public.dashboard_tab USING btree (dashboard_id);


--
-- Name: idx_dashboardcard_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboardcard_card_id ON public.report_dashboardcard USING btree (card_id);


--
-- Name: idx_dashboardcard_dashboard_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboardcard_dashboard_id ON public.report_dashboardcard USING btree (dashboard_id);


--
-- Name: idx_dashboardcard_series_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboardcard_series_card_id ON public.dashboardcard_series USING btree (card_id);


--
-- Name: idx_dashboardcard_series_dashboardcard_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dashboardcard_series_dashboardcard_id ON public.dashboardcard_series USING btree (dashboardcard_id);


--
-- Name: idx_dependency_dependent_on_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dependency_dependent_on_id ON public.dependency USING btree (dependent_on_id);


--
-- Name: idx_dependency_dependent_on_model; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dependency_dependent_on_model ON public.dependency USING btree (dependent_on_model);


--
-- Name: idx_dependency_model; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dependency_model ON public.dependency USING btree (model);


--
-- Name: idx_dependency_model_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dependency_model_id ON public.dependency USING btree (model_id);


--
-- Name: idx_dimension_field_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dimension_field_id ON public.dimension USING btree (field_id);


--
-- Name: idx_dimension_human_readable_field_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_dimension_human_readable_field_id ON public.dimension USING btree (human_readable_field_id);


--
-- Name: idx_field_entity_qualified_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_field_entity_qualified_id ON public.metabase_field USING btree ((('field_'::text || id)));


--
-- Name: idx_field_parent_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_field_parent_id ON public.metabase_field USING btree (parent_id);


--
-- Name: idx_field_table_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_field_table_id ON public.metabase_field USING btree (table_id);


--
-- Name: idx_fieldvalues_field_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_fieldvalues_field_id ON public.metabase_fieldvalues USING btree (field_id);


--
-- Name: idx_gtap_table_id_group_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_gtap_table_id_group_id ON public.sandboxes USING btree (table_id, group_id);


--
-- Name: idx_label_slug; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_label_slug ON public.label USING btree (slug);


--
-- Name: idx_lower_email; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_lower_email ON public.core_user USING btree (lower((email)::text));


--
-- Name: idx_metabase_database_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_metabase_database_creator_id ON public.metabase_database USING btree (creator_id);


--
-- Name: idx_metabase_table_db_id_schema; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_metabase_table_db_id_schema ON public.metabase_table USING btree (db_id, schema);


--
-- Name: idx_metabase_table_show_in_getting_started; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_metabase_table_show_in_getting_started ON public.metabase_table USING btree (show_in_getting_started);


--
-- Name: idx_metric_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_metric_creator_id ON public.metric USING btree (creator_id);


--
-- Name: idx_metric_important_field_field_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_metric_important_field_field_id ON public.metric_important_field USING btree (field_id);


--
-- Name: idx_metric_important_field_metric_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_metric_important_field_metric_id ON public.metric_important_field USING btree (metric_id);


--
-- Name: idx_metric_show_in_getting_started; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_metric_show_in_getting_started ON public.metric USING btree (show_in_getting_started);


--
-- Name: idx_metric_table_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_metric_table_id ON public.metric USING btree (table_id);


--
-- Name: idx_model_index_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_model_index_creator_id ON public.model_index USING btree (creator_id);


--
-- Name: idx_model_index_model_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_model_index_model_id ON public.model_index USING btree (model_id);


--
-- Name: idx_moderation_review_item_type_item_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_moderation_review_item_type_item_id ON public.moderation_review USING btree (moderated_item_type, moderated_item_id);


--
-- Name: idx_native_query_snippet_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_native_query_snippet_creator_id ON public.native_query_snippet USING btree (creator_id);


--
-- Name: idx_parameter_card_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_parameter_card_card_id ON public.parameter_card USING btree (card_id);


--
-- Name: idx_parameter_card_parameterized_object_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_parameter_card_parameterized_object_id ON public.parameter_card USING btree (parameterized_object_id);


--
-- Name: idx_permissions_group_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_permissions_group_id ON public.permissions USING btree (group_id);


--
-- Name: idx_permissions_group_id_object; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_permissions_group_id_object ON public.permissions USING btree (group_id, object);


--
-- Name: idx_permissions_group_membership_group_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_permissions_group_membership_group_id ON public.permissions_group_membership USING btree (group_id);


--
-- Name: idx_permissions_group_membership_group_id_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_permissions_group_membership_group_id_user_id ON public.permissions_group_membership USING btree (group_id, user_id);


--
-- Name: idx_permissions_group_membership_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_permissions_group_membership_user_id ON public.permissions_group_membership USING btree (user_id);


--
-- Name: idx_permissions_group_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_permissions_group_name ON public.permissions_group USING btree (name);


--
-- Name: idx_permissions_object; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_permissions_object ON public.permissions USING btree (object);


--
-- Name: idx_permissions_revision_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_permissions_revision_user_id ON public.permissions_revision USING btree (user_id);


--
-- Name: idx_persisted_info_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_persisted_info_creator_id ON public.persisted_info USING btree (creator_id);


--
-- Name: idx_persisted_info_database_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_persisted_info_database_id ON public.persisted_info USING btree (database_id);


--
-- Name: idx_pulse_card_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_card_card_id ON public.pulse_card USING btree (card_id);


--
-- Name: idx_pulse_card_dashboard_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_card_dashboard_card_id ON public.pulse_card USING btree (dashboard_card_id);


--
-- Name: idx_pulse_card_pulse_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_card_pulse_id ON public.pulse_card USING btree (pulse_id);


--
-- Name: idx_pulse_channel_pulse_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_channel_pulse_id ON public.pulse_channel USING btree (pulse_id);


--
-- Name: idx_pulse_channel_recipient_pulse_channel_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_channel_recipient_pulse_channel_id ON public.pulse_channel_recipient USING btree (pulse_channel_id);


--
-- Name: idx_pulse_channel_recipient_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_channel_recipient_user_id ON public.pulse_channel_recipient USING btree (user_id);


--
-- Name: idx_pulse_channel_schedule_type; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_channel_schedule_type ON public.pulse_channel USING btree (schedule_type);


--
-- Name: idx_pulse_collection_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_collection_id ON public.pulse USING btree (collection_id);


--
-- Name: idx_pulse_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_creator_id ON public.pulse USING btree (creator_id);


--
-- Name: idx_pulse_dashboard_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pulse_dashboard_id ON public.pulse USING btree (dashboard_id);


--
-- Name: idx_qrtz_ft_inst_job_req_rcvry; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_ft_inst_job_req_rcvry ON public.qrtz_fired_triggers USING btree (sched_name, instance_name, requests_recovery);


--
-- Name: idx_qrtz_ft_j_g; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_ft_j_g ON public.qrtz_fired_triggers USING btree (sched_name, job_name, job_group);


--
-- Name: idx_qrtz_ft_jg; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_ft_jg ON public.qrtz_fired_triggers USING btree (sched_name, job_group);


--
-- Name: idx_qrtz_ft_t_g; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_ft_t_g ON public.qrtz_fired_triggers USING btree (sched_name, trigger_name, trigger_group);


--
-- Name: idx_qrtz_ft_tg; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_ft_tg ON public.qrtz_fired_triggers USING btree (sched_name, trigger_group);


--
-- Name: idx_qrtz_ft_trig_inst_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_ft_trig_inst_name ON public.qrtz_fired_triggers USING btree (sched_name, instance_name);


--
-- Name: idx_qrtz_j_grp; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_j_grp ON public.qrtz_job_details USING btree (sched_name, job_group);


--
-- Name: idx_qrtz_j_req_recovery; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_j_req_recovery ON public.qrtz_job_details USING btree (sched_name, requests_recovery);


--
-- Name: idx_qrtz_t_c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_c ON public.qrtz_triggers USING btree (sched_name, calendar_name);


--
-- Name: idx_qrtz_t_g; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_g ON public.qrtz_triggers USING btree (sched_name, trigger_group);


--
-- Name: idx_qrtz_t_j; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_j ON public.qrtz_triggers USING btree (sched_name, job_name, job_group);


--
-- Name: idx_qrtz_t_jg; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_jg ON public.qrtz_triggers USING btree (sched_name, job_group);


--
-- Name: idx_qrtz_t_n_g_state; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_n_g_state ON public.qrtz_triggers USING btree (sched_name, trigger_group, trigger_state);


--
-- Name: idx_qrtz_t_n_state; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_n_state ON public.qrtz_triggers USING btree (sched_name, trigger_name, trigger_group, trigger_state);


--
-- Name: idx_qrtz_t_next_fire_time; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_next_fire_time ON public.qrtz_triggers USING btree (sched_name, next_fire_time);


--
-- Name: idx_qrtz_t_nft_misfire; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_nft_misfire ON public.qrtz_triggers USING btree (sched_name, misfire_instr, next_fire_time);


--
-- Name: idx_qrtz_t_nft_st; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_nft_st ON public.qrtz_triggers USING btree (sched_name, trigger_state, next_fire_time);


--
-- Name: idx_qrtz_t_nft_st_misfire; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_nft_st_misfire ON public.qrtz_triggers USING btree (sched_name, misfire_instr, next_fire_time, trigger_state);


--
-- Name: idx_qrtz_t_nft_st_misfire_grp; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_nft_st_misfire_grp ON public.qrtz_triggers USING btree (sched_name, misfire_instr, next_fire_time, trigger_group, trigger_state);


--
-- Name: idx_qrtz_t_state; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_qrtz_t_state ON public.qrtz_triggers USING btree (sched_name, trigger_state);


--
-- Name: idx_query_action_database_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_action_database_id ON public.query_action USING btree (database_id);


--
-- Name: idx_query_cache_updated_at; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_cache_updated_at ON public.query_cache USING btree (updated_at);


--
-- Name: idx_query_execution_action_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_execution_action_id ON public.query_execution USING btree (action_id);


--
-- Name: idx_query_execution_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_execution_card_id ON public.query_execution USING btree (card_id);


--
-- Name: idx_query_execution_card_id_started_at; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_execution_card_id_started_at ON public.query_execution USING btree (card_id, started_at);


--
-- Name: idx_query_execution_card_qualified_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_execution_card_qualified_id ON public.query_execution USING btree ((('card_'::text || card_id)));


--
-- Name: idx_query_execution_context; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_execution_context ON public.query_execution USING btree (context);


--
-- Name: idx_query_execution_executor_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_execution_executor_id ON public.query_execution USING btree (executor_id);


--
-- Name: idx_query_execution_query_hash_started_at; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_execution_query_hash_started_at ON public.query_execution USING btree (hash, started_at);


--
-- Name: idx_query_execution_started_at; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_query_execution_started_at ON public.query_execution USING btree (started_at);


--
-- Name: idx_recent_views_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_recent_views_user_id ON public.recent_views USING btree (user_id);


--
-- Name: idx_report_card_database_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_report_card_database_id ON public.report_card USING btree (database_id);


--
-- Name: idx_report_card_made_public_by_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_report_card_made_public_by_id ON public.report_card USING btree (made_public_by_id);


--
-- Name: idx_report_card_table_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_report_card_table_id ON public.report_card USING btree (table_id);


--
-- Name: idx_report_dashboard_made_public_by_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_report_dashboard_made_public_by_id ON public.report_dashboard USING btree (made_public_by_id);


--
-- Name: idx_report_dashboard_show_in_getting_started; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_report_dashboard_show_in_getting_started ON public.report_dashboard USING btree (show_in_getting_started);


--
-- Name: idx_report_dashboardcard_action_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_report_dashboardcard_action_id ON public.report_dashboardcard USING btree (action_id);


--
-- Name: idx_report_dashboardcard_dashboard_tab_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_report_dashboardcard_dashboard_tab_id ON public.report_dashboardcard USING btree (dashboard_tab_id);


--
-- Name: idx_revision_model_model_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_revision_model_model_id ON public.revision USING btree (model, model_id);


--
-- Name: idx_revision_most_recent; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_revision_most_recent ON public.revision USING btree (most_recent);


--
-- Name: idx_revision_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_revision_user_id ON public.revision USING btree (user_id);


--
-- Name: idx_sandboxes_card_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sandboxes_card_id ON public.sandboxes USING btree (card_id);


--
-- Name: idx_sandboxes_permission_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sandboxes_permission_id ON public.sandboxes USING btree (permission_id);


--
-- Name: idx_secret_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_secret_creator_id ON public.secret USING btree (creator_id);


--
-- Name: idx_segment_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_segment_creator_id ON public.segment USING btree (creator_id);


--
-- Name: idx_segment_show_in_getting_started; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_segment_show_in_getting_started ON public.segment USING btree (show_in_getting_started);


--
-- Name: idx_segment_table_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_segment_table_id ON public.segment USING btree (table_id);


--
-- Name: idx_session_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_session_id ON public.login_history USING btree (session_id);


--
-- Name: idx_snippet_collection_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_snippet_collection_id ON public.native_query_snippet USING btree (collection_id);


--
-- Name: idx_snippet_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_snippet_name ON public.native_query_snippet USING btree (name);


--
-- Name: idx_table_db_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_table_db_id ON public.metabase_table USING btree (db_id);


--
-- Name: idx_table_privileges_role; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_table_privileges_role ON public.table_privileges USING btree (role);


--
-- Name: idx_table_privileges_table_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_table_privileges_table_id ON public.table_privileges USING btree (table_id);


--
-- Name: idx_task_history_db_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_task_history_db_id ON public.task_history USING btree (db_id);


--
-- Name: idx_task_history_end_time; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_task_history_end_time ON public.task_history USING btree (ended_at);


--
-- Name: idx_task_history_started_at; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_task_history_started_at ON public.task_history USING btree (started_at);


--
-- Name: idx_timeline_collection_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_timeline_collection_id ON public.timeline USING btree (collection_id);


--
-- Name: idx_timeline_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_timeline_creator_id ON public.timeline USING btree (creator_id);


--
-- Name: idx_timeline_event_creator_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_timeline_event_creator_id ON public.timeline_event USING btree (creator_id);


--
-- Name: idx_timeline_event_timeline_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_timeline_event_timeline_id ON public.timeline_event USING btree (timeline_id);


--
-- Name: idx_timeline_event_timeline_id_timestamp; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_timeline_event_timeline_id_timestamp ON public.timeline_event USING btree (timeline_id, "timestamp");


--
-- Name: idx_timestamp; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_timestamp ON public.login_history USING btree ("timestamp");


--
-- Name: idx_uniq_field_table_id_parent_id_name_2col; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX idx_uniq_field_table_id_parent_id_name_2col ON public.metabase_field USING btree (table_id, name) WHERE (parent_id IS NULL);


--
-- Name: idx_uniq_table_db_id_schema_name_2col; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX idx_uniq_table_db_id_schema_name_2col ON public.metabase_table USING btree (db_id, name) WHERE (schema IS NULL);


--
-- Name: idx_user_full_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_user_full_name ON public.core_user USING btree (((((first_name)::text || ' '::text) || (last_name)::text)));


--
-- Name: idx_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_user_id ON public.login_history USING btree (user_id);


--
-- Name: idx_user_id_device_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_user_id_device_id ON public.login_history USING btree (session_id, device_id);


--
-- Name: idx_user_id_timestamp; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_user_id_timestamp ON public.login_history USING btree (user_id, "timestamp");


--
-- Name: idx_user_qualified_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_user_qualified_id ON public.core_user USING btree ((('user_'::text || id)));


--
-- Name: idx_view_log_entity_qualified_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_view_log_entity_qualified_id ON public.view_log USING btree (((((model)::text || '_'::text) || model_id)));


--
-- Name: idx_view_log_model_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_view_log_model_id ON public.view_log USING btree (model_id);


--
-- Name: idx_view_log_timestamp; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_view_log_timestamp ON public.view_log USING btree ("timestamp");


--
-- Name: idx_view_log_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_view_log_user_id ON public.view_log USING btree (user_id);


--
-- Name: action fk_action_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.action
    ADD CONSTRAINT fk_action_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id);


--
-- Name: action fk_action_made_public_by_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.action
    ADD CONSTRAINT fk_action_made_public_by_id FOREIGN KEY (made_public_by_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: action fk_action_model_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.action
    ADD CONSTRAINT fk_action_model_id FOREIGN KEY (model_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: activity fk_activity_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity
    ADD CONSTRAINT fk_activity_ref_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: bookmark_ordering fk_bookmark_ordering_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookmark_ordering
    ADD CONSTRAINT fk_bookmark_ordering_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: card_bookmark fk_card_bookmark_dashboard_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.card_bookmark
    ADD CONSTRAINT fk_card_bookmark_dashboard_id FOREIGN KEY (card_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: card_bookmark fk_card_bookmark_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.card_bookmark
    ADD CONSTRAINT fk_card_bookmark_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: report_card fk_card_collection_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_card
    ADD CONSTRAINT fk_card_collection_id FOREIGN KEY (collection_id) REFERENCES public.collection(id) ON DELETE SET NULL;


--
-- Name: card_label fk_card_label_ref_card_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.card_label
    ADD CONSTRAINT fk_card_label_ref_card_id FOREIGN KEY (card_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: card_label fk_card_label_ref_label_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.card_label
    ADD CONSTRAINT fk_card_label_ref_label_id FOREIGN KEY (label_id) REFERENCES public.label(id) ON DELETE CASCADE;


--
-- Name: report_card fk_card_made_public_by_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_card
    ADD CONSTRAINT fk_card_made_public_by_id FOREIGN KEY (made_public_by_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: report_card fk_card_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_card
    ADD CONSTRAINT fk_card_ref_user_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: report_cardfavorite fk_cardfavorite_ref_card_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_cardfavorite
    ADD CONSTRAINT fk_cardfavorite_ref_card_id FOREIGN KEY (card_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: report_cardfavorite fk_cardfavorite_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_cardfavorite
    ADD CONSTRAINT fk_cardfavorite_ref_user_id FOREIGN KEY (owner_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: collection_bookmark fk_collection_bookmark_collection_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection_bookmark
    ADD CONSTRAINT fk_collection_bookmark_collection_id FOREIGN KEY (collection_id) REFERENCES public.collection(id) ON DELETE CASCADE;


--
-- Name: collection_bookmark fk_collection_bookmark_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection_bookmark
    ADD CONSTRAINT fk_collection_bookmark_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: collection fk_collection_personal_owner_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection
    ADD CONSTRAINT fk_collection_personal_owner_id FOREIGN KEY (personal_owner_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: collection_permission_graph_revision fk_collection_revision_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collection_permission_graph_revision
    ADD CONSTRAINT fk_collection_revision_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: connection_impersonations fk_conn_impersonation_db_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.connection_impersonations
    ADD CONSTRAINT fk_conn_impersonation_db_id FOREIGN KEY (db_id) REFERENCES public.metabase_database(id) ON DELETE CASCADE;


--
-- Name: connection_impersonations fk_conn_impersonation_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.connection_impersonations
    ADD CONSTRAINT fk_conn_impersonation_group_id FOREIGN KEY (group_id) REFERENCES public.permissions_group(id) ON DELETE CASCADE;


--
-- Name: dashboard_bookmark fk_dashboard_bookmark_dashboard_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_bookmark
    ADD CONSTRAINT fk_dashboard_bookmark_dashboard_id FOREIGN KEY (dashboard_id) REFERENCES public.report_dashboard(id) ON DELETE CASCADE;


--
-- Name: dashboard_bookmark fk_dashboard_bookmark_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_bookmark
    ADD CONSTRAINT fk_dashboard_bookmark_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: report_dashboard fk_dashboard_collection_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboard
    ADD CONSTRAINT fk_dashboard_collection_id FOREIGN KEY (collection_id) REFERENCES public.collection(id) ON DELETE SET NULL;


--
-- Name: dashboard_favorite fk_dashboard_favorite_dashboard_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_favorite
    ADD CONSTRAINT fk_dashboard_favorite_dashboard_id FOREIGN KEY (dashboard_id) REFERENCES public.report_dashboard(id) ON DELETE CASCADE;


--
-- Name: dashboard_favorite fk_dashboard_favorite_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_favorite
    ADD CONSTRAINT fk_dashboard_favorite_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: report_dashboard fk_dashboard_made_public_by_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboard
    ADD CONSTRAINT fk_dashboard_made_public_by_id FOREIGN KEY (made_public_by_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: report_dashboard fk_dashboard_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboard
    ADD CONSTRAINT fk_dashboard_ref_user_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: dashboard_tab fk_dashboard_tab_ref_dashboard_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboard_tab
    ADD CONSTRAINT fk_dashboard_tab_ref_dashboard_id FOREIGN KEY (dashboard_id) REFERENCES public.report_dashboard(id) ON DELETE CASCADE;


--
-- Name: report_dashboardcard fk_dashboardcard_ref_card_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboardcard
    ADD CONSTRAINT fk_dashboardcard_ref_card_id FOREIGN KEY (card_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: report_dashboardcard fk_dashboardcard_ref_dashboard_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboardcard
    ADD CONSTRAINT fk_dashboardcard_ref_dashboard_id FOREIGN KEY (dashboard_id) REFERENCES public.report_dashboard(id) ON DELETE CASCADE;


--
-- Name: dashboardcard_series fk_dashboardcard_series_ref_card_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboardcard_series
    ADD CONSTRAINT fk_dashboardcard_series_ref_card_id FOREIGN KEY (card_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: dashboardcard_series fk_dashboardcard_series_ref_dashboardcard_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dashboardcard_series
    ADD CONSTRAINT fk_dashboardcard_series_ref_dashboardcard_id FOREIGN KEY (dashboardcard_id) REFERENCES public.report_dashboardcard(id) ON DELETE CASCADE;


--
-- Name: metabase_database fk_database_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_database
    ADD CONSTRAINT fk_database_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE SET NULL;


--
-- Name: dimension fk_dimension_displayfk_ref_field_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dimension
    ADD CONSTRAINT fk_dimension_displayfk_ref_field_id FOREIGN KEY (human_readable_field_id) REFERENCES public.metabase_field(id) ON DELETE CASCADE;


--
-- Name: dimension fk_dimension_ref_field_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dimension
    ADD CONSTRAINT fk_dimension_ref_field_id FOREIGN KEY (field_id) REFERENCES public.metabase_field(id) ON DELETE CASCADE;


--
-- Name: timeline_event fk_event_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timeline_event
    ADD CONSTRAINT fk_event_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: timeline_event fk_events_timeline_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timeline_event
    ADD CONSTRAINT fk_events_timeline_id FOREIGN KEY (timeline_id) REFERENCES public.timeline(id) ON DELETE CASCADE;


--
-- Name: metabase_field fk_field_parent_ref_field_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_field
    ADD CONSTRAINT fk_field_parent_ref_field_id FOREIGN KEY (parent_id) REFERENCES public.metabase_field(id) ON DELETE CASCADE;


--
-- Name: metabase_field fk_field_ref_table_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_field
    ADD CONSTRAINT fk_field_ref_table_id FOREIGN KEY (table_id) REFERENCES public.metabase_table(id) ON DELETE CASCADE;


--
-- Name: metabase_fieldvalues fk_fieldvalues_ref_field_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_fieldvalues
    ADD CONSTRAINT fk_fieldvalues_ref_field_id FOREIGN KEY (field_id) REFERENCES public.metabase_field(id) ON DELETE CASCADE;


--
-- Name: application_permissions_revision fk_general_permissions_revision_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_permissions_revision
    ADD CONSTRAINT fk_general_permissions_revision_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id);


--
-- Name: sandboxes fk_gtap_card_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sandboxes
    ADD CONSTRAINT fk_gtap_card_id FOREIGN KEY (card_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: sandboxes fk_gtap_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sandboxes
    ADD CONSTRAINT fk_gtap_group_id FOREIGN KEY (group_id) REFERENCES public.permissions_group(id) ON DELETE CASCADE;


--
-- Name: sandboxes fk_gtap_table_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sandboxes
    ADD CONSTRAINT fk_gtap_table_id FOREIGN KEY (table_id) REFERENCES public.metabase_table(id) ON DELETE CASCADE;


--
-- Name: http_action fk_http_action_ref_action_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.http_action
    ADD CONSTRAINT fk_http_action_ref_action_id FOREIGN KEY (action_id) REFERENCES public.action(id) ON DELETE CASCADE;


--
-- Name: implicit_action fk_implicit_action_action_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.implicit_action
    ADD CONSTRAINT fk_implicit_action_action_id FOREIGN KEY (action_id) REFERENCES public.action(id) ON DELETE CASCADE;


--
-- Name: login_history fk_login_history_session_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.login_history
    ADD CONSTRAINT fk_login_history_session_id FOREIGN KEY (session_id) REFERENCES public.core_session(id) ON DELETE SET NULL;


--
-- Name: login_history fk_login_history_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.login_history
    ADD CONSTRAINT fk_login_history_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: metric_important_field fk_metric_important_field_metabase_field_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metric_important_field
    ADD CONSTRAINT fk_metric_important_field_metabase_field_id FOREIGN KEY (field_id) REFERENCES public.metabase_field(id) ON DELETE CASCADE;


--
-- Name: metric_important_field fk_metric_important_field_metric_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metric_important_field
    ADD CONSTRAINT fk_metric_important_field_metric_id FOREIGN KEY (metric_id) REFERENCES public.metric(id) ON DELETE CASCADE;


--
-- Name: metric fk_metric_ref_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metric
    ADD CONSTRAINT fk_metric_ref_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: metric fk_metric_ref_table_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metric
    ADD CONSTRAINT fk_metric_ref_table_id FOREIGN KEY (table_id) REFERENCES public.metabase_table(id) ON DELETE CASCADE;


--
-- Name: model_index fk_model_index_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.model_index
    ADD CONSTRAINT fk_model_index_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: model_index fk_model_index_model_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.model_index
    ADD CONSTRAINT fk_model_index_model_id FOREIGN KEY (model_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: model_index_value fk_model_index_value_model_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.model_index_value
    ADD CONSTRAINT fk_model_index_value_model_id FOREIGN KEY (model_index_id) REFERENCES public.model_index(id) ON DELETE CASCADE;


--
-- Name: parameter_card fk_parameter_card_ref_card_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.parameter_card
    ADD CONSTRAINT fk_parameter_card_ref_card_id FOREIGN KEY (card_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: permissions_group_membership fk_permissions_group_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions_group_membership
    ADD CONSTRAINT fk_permissions_group_group_id FOREIGN KEY (group_id) REFERENCES public.permissions_group(id) ON DELETE CASCADE;


--
-- Name: permissions fk_permissions_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions
    ADD CONSTRAINT fk_permissions_group_id FOREIGN KEY (group_id) REFERENCES public.permissions_group(id) ON DELETE CASCADE;


--
-- Name: permissions_group_membership fk_permissions_group_membership_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions_group_membership
    ADD CONSTRAINT fk_permissions_group_membership_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: permissions_revision fk_permissions_revision_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions_revision
    ADD CONSTRAINT fk_permissions_revision_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: persisted_info fk_persisted_info_card_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persisted_info
    ADD CONSTRAINT fk_persisted_info_card_id FOREIGN KEY (card_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: persisted_info fk_persisted_info_database_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persisted_info
    ADD CONSTRAINT fk_persisted_info_database_id FOREIGN KEY (database_id) REFERENCES public.metabase_database(id) ON DELETE CASCADE;


--
-- Name: persisted_info fk_persisted_info_ref_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persisted_info
    ADD CONSTRAINT fk_persisted_info_ref_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id);


--
-- Name: pulse_card fk_pulse_card_ref_card_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_card
    ADD CONSTRAINT fk_pulse_card_ref_card_id FOREIGN KEY (card_id) REFERENCES public.report_card(id) ON DELETE CASCADE;


--
-- Name: pulse_card fk_pulse_card_ref_pulse_card_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_card
    ADD CONSTRAINT fk_pulse_card_ref_pulse_card_id FOREIGN KEY (dashboard_card_id) REFERENCES public.report_dashboardcard(id) ON DELETE CASCADE;


--
-- Name: pulse_card fk_pulse_card_ref_pulse_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_card
    ADD CONSTRAINT fk_pulse_card_ref_pulse_id FOREIGN KEY (pulse_id) REFERENCES public.pulse(id) ON DELETE CASCADE;


--
-- Name: pulse_channel_recipient fk_pulse_channel_recipient_ref_pulse_channel_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_channel_recipient
    ADD CONSTRAINT fk_pulse_channel_recipient_ref_pulse_channel_id FOREIGN KEY (pulse_channel_id) REFERENCES public.pulse_channel(id) ON DELETE CASCADE;


--
-- Name: pulse_channel_recipient fk_pulse_channel_recipient_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_channel_recipient
    ADD CONSTRAINT fk_pulse_channel_recipient_ref_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: pulse_channel fk_pulse_channel_ref_pulse_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse_channel
    ADD CONSTRAINT fk_pulse_channel_ref_pulse_id FOREIGN KEY (pulse_id) REFERENCES public.pulse(id) ON DELETE CASCADE;


--
-- Name: pulse fk_pulse_collection_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse
    ADD CONSTRAINT fk_pulse_collection_id FOREIGN KEY (collection_id) REFERENCES public.collection(id) ON DELETE SET NULL;


--
-- Name: pulse fk_pulse_ref_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse
    ADD CONSTRAINT fk_pulse_ref_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: pulse fk_pulse_ref_dashboard_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pulse
    ADD CONSTRAINT fk_pulse_ref_dashboard_id FOREIGN KEY (dashboard_id) REFERENCES public.report_dashboard(id) ON DELETE CASCADE;


--
-- Name: qrtz_blob_triggers fk_qrtz_blob_triggers_triggers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_blob_triggers
    ADD CONSTRAINT fk_qrtz_blob_triggers_triggers FOREIGN KEY (sched_name, trigger_name, trigger_group) REFERENCES public.qrtz_triggers(sched_name, trigger_name, trigger_group);


--
-- Name: qrtz_cron_triggers fk_qrtz_cron_triggers_triggers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_cron_triggers
    ADD CONSTRAINT fk_qrtz_cron_triggers_triggers FOREIGN KEY (sched_name, trigger_name, trigger_group) REFERENCES public.qrtz_triggers(sched_name, trigger_name, trigger_group);


--
-- Name: qrtz_simple_triggers fk_qrtz_simple_triggers_triggers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_simple_triggers
    ADD CONSTRAINT fk_qrtz_simple_triggers_triggers FOREIGN KEY (sched_name, trigger_name, trigger_group) REFERENCES public.qrtz_triggers(sched_name, trigger_name, trigger_group);


--
-- Name: qrtz_simprop_triggers fk_qrtz_simprop_triggers_triggers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_simprop_triggers
    ADD CONSTRAINT fk_qrtz_simprop_triggers_triggers FOREIGN KEY (sched_name, trigger_name, trigger_group) REFERENCES public.qrtz_triggers(sched_name, trigger_name, trigger_group);


--
-- Name: qrtz_triggers fk_qrtz_triggers_job_details; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qrtz_triggers
    ADD CONSTRAINT fk_qrtz_triggers_job_details FOREIGN KEY (sched_name, job_name, job_group) REFERENCES public.qrtz_job_details(sched_name, job_name, job_group);


--
-- Name: query_action fk_query_action_database_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.query_action
    ADD CONSTRAINT fk_query_action_database_id FOREIGN KEY (database_id) REFERENCES public.metabase_database(id) ON DELETE CASCADE;


--
-- Name: query_action fk_query_action_ref_action_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.query_action
    ADD CONSTRAINT fk_query_action_ref_action_id FOREIGN KEY (action_id) REFERENCES public.action(id) ON DELETE CASCADE;


--
-- Name: recent_views fk_recent_views_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recent_views
    ADD CONSTRAINT fk_recent_views_ref_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: report_card fk_report_card_ref_database_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_card
    ADD CONSTRAINT fk_report_card_ref_database_id FOREIGN KEY (database_id) REFERENCES public.metabase_database(id) ON DELETE CASCADE;


--
-- Name: report_card fk_report_card_ref_table_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_card
    ADD CONSTRAINT fk_report_card_ref_table_id FOREIGN KEY (table_id) REFERENCES public.metabase_table(id) ON DELETE CASCADE;


--
-- Name: report_dashboardcard fk_report_dashboardcard_ref_action_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboardcard
    ADD CONSTRAINT fk_report_dashboardcard_ref_action_id FOREIGN KEY (action_id) REFERENCES public.action(id) ON DELETE CASCADE;


--
-- Name: report_dashboardcard fk_report_dashboardcard_ref_dashboard_tab_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report_dashboardcard
    ADD CONSTRAINT fk_report_dashboardcard_ref_dashboard_tab_id FOREIGN KEY (dashboard_tab_id) REFERENCES public.dashboard_tab(id) ON DELETE CASCADE;


--
-- Name: revision fk_revision_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.revision
    ADD CONSTRAINT fk_revision_ref_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: sandboxes fk_sandboxes_ref_permissions; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sandboxes
    ADD CONSTRAINT fk_sandboxes_ref_permissions FOREIGN KEY (permission_id) REFERENCES public.permissions(id) ON DELETE CASCADE;


--
-- Name: secret fk_secret_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.secret
    ADD CONSTRAINT fk_secret_ref_user_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id);


--
-- Name: segment fk_segment_ref_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.segment
    ADD CONSTRAINT fk_segment_ref_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: segment fk_segment_ref_table_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.segment
    ADD CONSTRAINT fk_segment_ref_table_id FOREIGN KEY (table_id) REFERENCES public.metabase_table(id) ON DELETE CASCADE;


--
-- Name: core_session fk_session_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.core_session
    ADD CONSTRAINT fk_session_ref_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: native_query_snippet fk_snippet_collection_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.native_query_snippet
    ADD CONSTRAINT fk_snippet_collection_id FOREIGN KEY (collection_id) REFERENCES public.collection(id) ON DELETE SET NULL;


--
-- Name: native_query_snippet fk_snippet_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.native_query_snippet
    ADD CONSTRAINT fk_snippet_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: table_privileges fk_table_privileges_table_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.table_privileges
    ADD CONSTRAINT fk_table_privileges_table_id FOREIGN KEY (table_id) REFERENCES public.metabase_table(id) ON DELETE CASCADE;


--
-- Name: metabase_table fk_table_ref_database_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metabase_table
    ADD CONSTRAINT fk_table_ref_database_id FOREIGN KEY (db_id) REFERENCES public.metabase_database(id) ON DELETE CASCADE;


--
-- Name: timeline fk_timeline_collection_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timeline
    ADD CONSTRAINT fk_timeline_collection_id FOREIGN KEY (collection_id) REFERENCES public.collection(id) ON DELETE CASCADE;


--
-- Name: timeline fk_timeline_creator_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timeline
    ADD CONSTRAINT fk_timeline_creator_id FOREIGN KEY (creator_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- Name: view_log fk_view_log_ref_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.view_log
    ADD CONSTRAINT fk_view_log_ref_user_id FOREIGN KEY (user_id) REFERENCES public.core_user(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

